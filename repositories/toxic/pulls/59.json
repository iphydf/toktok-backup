{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/TokTok/toxic/issues/59/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/TokTok/toxic/pulls/59/commits"
        },
        "html": {
            "href": "https://github.com/TokTok/toxic/pull/59"
        },
        "issue": {
            "href": "https://api.github.com/repos/TokTok/toxic/issues/59"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/TokTok/toxic/pulls/59/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
        },
        "statuses": {
            "href": "https://api.github.com/repos/TokTok/toxic/statuses/811f2872ba0ad7e4a156b57295b1110ee884b139"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "TokTok:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/TokTok/toxic/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/TokTok/toxic/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/TokTok/toxic/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/TokTok/toxic/branches{/branch}",
            "clone_url": "https://github.com/TokTok/toxic.git",
            "collaborators_url": "https://api.github.com/repos/TokTok/toxic/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/TokTok/toxic/comments{/number}",
            "commits_url": "https://api.github.com/repos/TokTok/toxic/commits{/sha}",
            "compare_url": "https://api.github.com/repos/TokTok/toxic/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/TokTok/toxic/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/TokTok/toxic/contributors",
            "created_at": "2018-01-20T18:29:55Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/TokTok/toxic/deployments",
            "description": "An ncurses-based Tox client",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/TokTok/toxic/downloads",
            "events_url": "https://api.github.com/repos/TokTok/toxic/events",
            "fork": true,
            "forks": 4,
            "forks_count": 4,
            "forks_url": "https://api.github.com/repos/TokTok/toxic/forks",
            "full_name": "TokTok/toxic",
            "git_commits_url": "https://api.github.com/repos/TokTok/toxic/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/TokTok/toxic/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/TokTok/toxic/git/tags{/sha}",
            "git_url": "git://github.com/TokTok/toxic.git",
            "has_discussions": false,
            "has_downloads": false,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "https://toktok.ltd/",
            "hooks_url": "https://api.github.com/repos/TokTok/toxic/hooks",
            "html_url": "https://github.com/TokTok/toxic",
            "id": 118269669,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/TokTok/toxic/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/TokTok/toxic/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/TokTok/toxic/issues{/number}",
            "keys_url": "https://api.github.com/repos/TokTok/toxic/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/TokTok/toxic/labels{/name}",
            "language": "C",
            "languages_url": "https://api.github.com/repos/TokTok/toxic/languages",
            "license": {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "node_id": "MDc6TGljZW5zZTk=",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
            },
            "merges_url": "https://api.github.com/repos/TokTok/toxic/merges",
            "milestones_url": "https://api.github.com/repos/TokTok/toxic/milestones{/number}",
            "mirror_url": null,
            "name": "toxic",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMTgyNjk2Njk=",
            "notifications_url": "https://api.github.com/repos/TokTok/toxic/notifications{?since,all,participating}",
            "open_issues": 11,
            "open_issues_count": 11,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17427091?v=4",
                "events_url": "https://api.github.com/users/TokTok/events{/privacy}",
                "followers_url": "https://api.github.com/users/TokTok/followers",
                "following_url": "https://api.github.com/users/TokTok/following{/other_user}",
                "gists_url": "https://api.github.com/users/TokTok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TokTok",
                "id": 17427091,
                "login": "TokTok",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE3NDI3MDkx",
                "organizations_url": "https://api.github.com/users/TokTok/orgs",
                "received_events_url": "https://api.github.com/users/TokTok/received_events",
                "repos_url": "https://api.github.com/users/TokTok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TokTok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TokTok/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/TokTok"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/TokTok/toxic/pulls{/number}",
            "pushed_at": "2024-02-23T19:03:01Z",
            "releases_url": "https://api.github.com/repos/TokTok/toxic/releases{/id}",
            "size": 18192,
            "ssh_url": "git@github.com:TokTok/toxic.git",
            "stargazers_count": 27,
            "stargazers_url": "https://api.github.com/repos/TokTok/toxic/stargazers",
            "statuses_url": "https://api.github.com/repos/TokTok/toxic/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/TokTok/toxic/subscribers",
            "subscription_url": "https://api.github.com/repos/TokTok/toxic/subscription",
            "svn_url": "https://github.com/TokTok/toxic",
            "tags_url": "https://api.github.com/repos/TokTok/toxic/tags",
            "teams_url": "https://api.github.com/repos/TokTok/toxic/teams",
            "topics": [
                "chat",
                "console",
                "tox"
            ],
            "trees_url": "https://api.github.com/repos/TokTok/toxic/git/trees{/sha}",
            "updated_at": "2024-01-26T11:24:24Z",
            "url": "https://api.github.com/repos/TokTok/toxic",
            "visibility": "public",
            "watchers": 27,
            "watchers_count": 27,
            "web_commit_signoff_required": false
        },
        "sha": "bdeae33d48a0e013aee9abe57aaed8b0bce811a3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/17427091?v=4",
            "events_url": "https://api.github.com/users/TokTok/events{/privacy}",
            "followers_url": "https://api.github.com/users/TokTok/followers",
            "following_url": "https://api.github.com/users/TokTok/following{/other_user}",
            "gists_url": "https://api.github.com/users/TokTok/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/TokTok",
            "id": 17427091,
            "login": "TokTok",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE3NDI3MDkx",
            "organizations_url": "https://api.github.com/users/TokTok/orgs",
            "received_events_url": "https://api.github.com/users/TokTok/received_events",
            "repos_url": "https://api.github.com/users/TokTok/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/TokTok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TokTok/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/TokTok"
        }
    },
    "body": "\n\n<!-- Reviewable:start -->\nThis change isâ€‚[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/toktok/toxic/59)\n<!-- Reviewable:end -->\n",
    "closed_at": "2020-11-14T18:58:16Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/toxic/pull/59#discussion_r403472875"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472875"
                }
            },
            "author_association": "MEMBER",
            "body": "File bug, write `// TODO(https://github.com/TokTok/toxic/issues/60): implement VAD, ...`.",
            "commit_id": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "created_at": "2020-04-04T13:56:21Z",
            "diff_hunk": "@@ -48,120 +48,163 @@\n \n extern struct user_settings *user_settings;\n \n+typedef struct FrameInfo {\n+    uint32_t samples_per_frame;\n+    uint32_t sample_rate;\n+    bool stereo;\n+} FrameInfo;\n+\n+/* A virtual input/output device, abstracting the currently selected openal\n+ * device (which may change during the lifetime of the virtual device).\n+ * We refer to a virtual device as a \"device\", and refer to an underlying\n+ * openal device as an \"al_device\".\n+ * Multiple virtual devices may be open at once; the callback of each virtual\n+ * input device has data captured from the input al_device passed to it, and\n+ * each virtual output device acts as a source for the output al_device.\n+ */\n typedef struct Device {\n-    ALCdevice  *dhndl;                     /* Handle of device selected/opened */\n-    ALCcontext *ctx;                       /* Device context */\n-    DataHandleCallback cb;                 /* Use this to handle data from input device usually */\n-    void *cb_data;                         /* Data to be passed to callback */\n-    int32_t friend_number;                      /* ToxAV friend number */\n-\n-    uint32_t source, buffers[OPENAL_BUFS]; /* Playback source/buffers */\n-    uint32_t ref_count;\n-    int32_t selection;\n-    bool enable_VAD;\n+    bool active;\n     bool muted;\n-    pthread_mutex_t mutex[1];\n-    uint32_t sample_rate;\n-    uint32_t frame_duration;\n-    int32_t sound_mode;\n+\n+    FrameInfo frame_info;\n+\n+    // used only by input devices:\n+    DataHandleCallback cb;\n+    void *cb_data;\n+    // TODO: implement VAD, and fix the typo, or remove these.",
            "html_url": "https://github.com/TokTok/toxic/pull/59#discussion_r403472875",
            "id": 403472875,
            "line": 73,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3Mjg3NQ==",
            "original_commit_id": "608b7365a48ed008eaaa7be8eb4901ff097225a2",
            "original_line": 73,
            "original_position": 41,
            "original_start_line": null,
            "path": "src/audio_device.c",
            "position": 46,
            "pull_request_review_id": 387701542,
            "pull_request_url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472875/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-05-07T22:08:47Z",
            "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/toxic/pull/59#discussion_r403472920"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472920"
                }
            },
            "author_association": "MEMBER",
            "body": "reference issue here too",
            "commit_id": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "created_at": "2020-04-04T13:56:41Z",
            "diff_hunk": "@@ -48,120 +48,163 @@\n \n extern struct user_settings *user_settings;\n \n+typedef struct FrameInfo {\n+    uint32_t samples_per_frame;\n+    uint32_t sample_rate;\n+    bool stereo;\n+} FrameInfo;\n+\n+/* A virtual input/output device, abstracting the currently selected openal\n+ * device (which may change during the lifetime of the virtual device).\n+ * We refer to a virtual device as a \"device\", and refer to an underlying\n+ * openal device as an \"al_device\".\n+ * Multiple virtual devices may be open at once; the callback of each virtual\n+ * input device has data captured from the input al_device passed to it, and\n+ * each virtual output device acts as a source for the output al_device.\n+ */\n typedef struct Device {\n-    ALCdevice  *dhndl;                     /* Handle of device selected/opened */\n-    ALCcontext *ctx;                       /* Device context */\n-    DataHandleCallback cb;                 /* Use this to handle data from input device usually */\n-    void *cb_data;                         /* Data to be passed to callback */\n-    int32_t friend_number;                      /* ToxAV friend number */\n-\n-    uint32_t source, buffers[OPENAL_BUFS]; /* Playback source/buffers */\n-    uint32_t ref_count;\n-    int32_t selection;\n-    bool enable_VAD;\n+    bool active;\n     bool muted;\n-    pthread_mutex_t mutex[1];\n-    uint32_t sample_rate;\n-    uint32_t frame_duration;\n-    int32_t sound_mode;\n+\n+    FrameInfo frame_info;\n+\n+    // used only by input devices:\n+    DataHandleCallback cb;\n+    void *cb_data;\n+    // TODO: implement VAD, and fix the typo, or remove these.\n+    bool enable_VAD;\n #ifdef AUDIO\n-    float VAD_treshold;                    /* 40 is usually recommended value */\n+    float VAD_treshold; /* 40 is usually recommended value */\n #endif\n+\n+    // used only by output devices:\n+    uint32_t source, buffers[OPENAL_BUFS];\n+    bool source_open;\n } Device;\n \n-const char *ddevice_names[2];              /* Default device */\n-const char *devices_names[2][MAX_DEVICES]; /* Container of available devices */\n-static int size[2];                        /* Size of above containers */\n-Device *running[2][MAX_DEVICES] = {{NULL}};     /* Running devices */\n-uint32_t primary_device[2];          /* Primary device */\n+typedef struct AudioState {\n+    ALCdevice *al_device[2];\n \n-#ifdef AUDIO\n-static ToxAV *av = NULL;\n-#endif /* AUDIO */\n+    Device devices[2][MAX_DEVICES];\n+    uint32_t num_devices[2];\n+\n+    FrameInfo capture_frame_info;\n+\n+    pthread_mutex_t mutex[2];\n+\n+    // TODO: unused",
            "html_url": "https://github.com/TokTok/toxic/pull/59#discussion_r403472920",
            "id": 403472920,
            "line": 97,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3MjkyMA==",
            "original_commit_id": "608b7365a48ed008eaaa7be8eb4901ff097225a2",
            "original_line": 97,
            "original_position": 71,
            "original_start_line": null,
            "path": "src/audio_device.c",
            "position": 85,
            "pull_request_review_id": 387701542,
            "pull_request_url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472920/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-05-07T22:08:47Z",
            "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/toxic/pull/59#discussion_r403472977"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472977"
                }
            },
            "author_association": "MEMBER",
            "body": "(void)",
            "commit_id": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "created_at": "2020-04-04T13:57:32Z",
            "diff_hunk": "@@ -48,120 +48,163 @@\n \n extern struct user_settings *user_settings;\n \n+typedef struct FrameInfo {\n+    uint32_t samples_per_frame;\n+    uint32_t sample_rate;\n+    bool stereo;\n+} FrameInfo;\n+\n+/* A virtual input/output device, abstracting the currently selected openal\n+ * device (which may change during the lifetime of the virtual device).\n+ * We refer to a virtual device as a \"device\", and refer to an underlying\n+ * openal device as an \"al_device\".\n+ * Multiple virtual devices may be open at once; the callback of each virtual\n+ * input device has data captured from the input al_device passed to it, and\n+ * each virtual output device acts as a source for the output al_device.\n+ */\n typedef struct Device {\n-    ALCdevice  *dhndl;                     /* Handle of device selected/opened */\n-    ALCcontext *ctx;                       /* Device context */\n-    DataHandleCallback cb;                 /* Use this to handle data from input device usually */\n-    void *cb_data;                         /* Data to be passed to callback */\n-    int32_t friend_number;                      /* ToxAV friend number */\n-\n-    uint32_t source, buffers[OPENAL_BUFS]; /* Playback source/buffers */\n-    uint32_t ref_count;\n-    int32_t selection;\n-    bool enable_VAD;\n+    bool active;\n     bool muted;\n-    pthread_mutex_t mutex[1];\n-    uint32_t sample_rate;\n-    uint32_t frame_duration;\n-    int32_t sound_mode;\n+\n+    FrameInfo frame_info;\n+\n+    // used only by input devices:\n+    DataHandleCallback cb;\n+    void *cb_data;\n+    // TODO: implement VAD, and fix the typo, or remove these.\n+    bool enable_VAD;\n #ifdef AUDIO\n-    float VAD_treshold;                    /* 40 is usually recommended value */\n+    float VAD_treshold; /* 40 is usually recommended value */\n #endif\n+\n+    // used only by output devices:\n+    uint32_t source, buffers[OPENAL_BUFS];\n+    bool source_open;\n } Device;\n \n-const char *ddevice_names[2];              /* Default device */\n-const char *devices_names[2][MAX_DEVICES]; /* Container of available devices */\n-static int size[2];                        /* Size of above containers */\n-Device *running[2][MAX_DEVICES] = {{NULL}};     /* Running devices */\n-uint32_t primary_device[2];          /* Primary device */\n+typedef struct AudioState {\n+    ALCdevice *al_device[2];\n \n-#ifdef AUDIO\n-static ToxAV *av = NULL;\n-#endif /* AUDIO */\n+    Device devices[2][MAX_DEVICES];\n+    uint32_t num_devices[2];\n+\n+    FrameInfo capture_frame_info;\n+\n+    pthread_mutex_t mutex[2];\n+\n+    // TODO: unused\n+    const char *default_al_device_name[2];              /* Default devices */\n+\n+    const char *al_device_names[2][MAX_OPENAL_DEVICES]; /* Available devices */\n+    uint32_t num_al_devices[2];\n+    char *current_al_device_name[2];\n+} AudioState;\n \n-/* q_mutex */\n-#define lock pthread_mutex_lock(&mutex)\n-#define unlock pthread_mutex_unlock(&mutex)\n-pthread_mutex_t mutex;\n+AudioState *audio_state;\n+\n+void lock(DeviceType type)\n+{\n+    pthread_mutex_lock(&audio_state->mutex[type]);\n+}\n+\n+void unlock(DeviceType type)\n+{\n+    pthread_mutex_unlock(&audio_state->mutex[type]);\n+}\n \n \n bool thread_running = true,\n      thread_paused = true;               /* Thread control */\n \n-void *thread_poll(void *);\n-/* Meet devices */\n-#ifdef AUDIO\n-DeviceError init_devices(ToxAV *av_)\n-#else\n+static void *poll_input(void *);\n+\n+static uint32_t sound_mode(bool stereo)\n+{\n+    return (stereo ? AL_FORMAT_STEREO16 : AL_FORMAT_MONO16);\n+}\n+\n+static uint32_t sample_size(bool stereo)\n+{\n+    return (stereo ? 4 : 2);\n+}\n+\n DeviceError init_devices(void)\n-#endif /* AUDIO */\n {\n-    get_devices_names();\n+    audio_state = calloc(1, sizeof(AudioState));\n \n-    // Start poll thread\n-    if (pthread_mutex_init(&mutex, NULL) != 0) {\n+    if (audio_state == NULL) {\n         return de_InternalError;\n     }\n \n+    get_al_device_names();\n+\n+    for (DeviceType type = input; type <= output; type++) {\n+        audio_state->al_device[type] = NULL;\n+\n+        if (pthread_mutex_init(&audio_state->mutex[type], NULL) != 0) {\n+            return de_InternalError;\n+        }\n+    }\n+\n+    // Start poll thread\n     pthread_t thread_id;\n \n-    if (pthread_create(&thread_id, NULL, thread_poll, NULL) != 0 || pthread_detach(thread_id) != 0) {\n+    if (pthread_create(&thread_id, NULL, poll_input, NULL) != 0 || pthread_detach(thread_id) != 0) {\n         return de_InternalError;\n     }\n \n-#ifdef AUDIO\n-    av = av_;\n-#endif /* AUDIO */\n-\n-    return (DeviceError) de_None;\n+    return de_None;\n }\n \n DeviceError terminate_devices(void)\n {\n-    /* Cleanup if needed */\n-    lock;\n+    lock(input);\n     thread_running = false;\n-    unlock;\n+    unlock(input);\n \n     usleep(20000);\n \n-    if (pthread_mutex_destroy(&mutex) != 0) {\n-        return (DeviceError) de_InternalError;\n+    for (DeviceType type = input; type <= output; type++) {\n+        if (pthread_mutex_destroy(&audio_state->mutex[type]) != 0) {\n+            return de_InternalError;\n+        }\n+\n+        if (audio_state->current_al_device_name[type] != NULL) {\n+            free(audio_state->current_al_device_name[type]);\n+        }\n     }\n \n-    return (DeviceError) de_None;\n+    free(audio_state);\n+\n+    return de_None;\n }\n \n-void get_devices_names(void)\n+void get_al_device_names()",
            "html_url": "https://github.com/TokTok/toxic/pull/59#discussion_r403472977",
            "id": 403472977,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3Mjk3Nw==",
            "original_commit_id": "608b7365a48ed008eaaa7be8eb4901ff097225a2",
            "original_line": 183,
            "original_position": 184,
            "original_start_line": null,
            "path": "src/audio_device.c",
            "position": null,
            "pull_request_review_id": 387701542,
            "pull_request_url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472977/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-05-07T22:08:47Z",
            "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403472977",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/toxic/pull/59#discussion_r403491675"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403491675"
                }
            },
            "author_association": "MEMBER",
            "body": "This function can't be inline, and should never have been inline, because it's used externally. Please remove `inline__`.",
            "commit_id": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "created_at": "2020-04-04T16:58:54Z",
            "diff_hunk": "@@ -194,212 +236,319 @@ DeviceError device_set_VAD_treshold(uint32_t device_idx, float value)\n         return de_InvalidSelection;\n     }\n \n-    lock;\n-\n-    Device *device = running[input][device_idx];\n+    Device *device = &audio_state->devices[input][device_idx];\n \n-    if (!device) {\n-        unlock;\n+    if (!device->active) {\n         return de_DeviceNotActive;\n     }\n \n+    lock(input);\n+\n     device->VAD_treshold = value;\n \n-    unlock;\n+    unlock(input);\n     return de_None;\n }\n #endif\n \n-\n-DeviceError set_primary_device(DeviceType type, int32_t selection)\n+DeviceError set_source_position(uint32_t device_idx, float x, float y, float z)\n {\n-    if (size[type] <= selection || selection < 0) {\n+    if (device_idx >= MAX_DEVICES) {\n         return de_InvalidSelection;\n     }\n \n-    primary_device[type] = selection;\n+    Device *device = &audio_state->devices[output][device_idx];\n+\n+    if (!device->active) {\n+        return de_DeviceNotActive;\n+    }\n+\n+    lock(output);\n+\n+    alSource3f(device->source, AL_POSITION, x, y, z);\n+\n+    unlock(output);\n+\n+    if (!audio_state->al_device[output] || alcGetError(audio_state->al_device[output]) != AL_NO_ERROR) {\n+        return de_AlError;\n+    }\n \n     return de_None;\n }\n \n-DeviceError open_primary_device(DeviceType type, uint32_t *device_idx, uint32_t sample_rate, uint32_t frame_duration,\n-                                uint8_t channels)\n+static DeviceError close_al_device(DeviceType type)\n {\n-    return open_device(type, primary_device[type], device_idx, sample_rate, frame_duration, channels);\n+    if (audio_state->al_device[type] == NULL) {\n+        return de_None;\n+    }\n+\n+    if (type == input) {\n+        if (!alcCaptureCloseDevice(audio_state->al_device[type])) {\n+            return de_AlError;\n+        }\n+\n+        thread_paused = true;\n+    } else {\n+        ALCcontext *context = alcGetCurrentContext();\n+        alcMakeContextCurrent(NULL);\n+        alcDestroyContext(context);\n+\n+        if (!alcCloseDevice(audio_state->al_device[type])) {\n+            return de_AlError;\n+        }\n+    }\n+\n+    audio_state->al_device[type] = NULL;\n+\n+    return de_None;\n }\n \n-void get_primary_device_name(DeviceType type, char *buf, int size)\n+static DeviceError open_al_device(DeviceType type, FrameInfo frame_info)\n {\n-    memcpy(buf, ddevice_names[type], size);\n+    audio_state->al_device[type] = type == input\n+                                   ? alcCaptureOpenDevice(audio_state->current_al_device_name[type],\n+                                           frame_info.sample_rate, sound_mode(frame_info.stereo), frame_info.samples_per_frame * 2)\n+                                   : alcOpenDevice(audio_state->current_al_device_name[type]);\n+\n+    if (audio_state->al_device[type] == NULL) {\n+        return de_FailedStart;\n+    }\n+\n+    if (type == input) {\n+        alcCaptureStart(audio_state->al_device[type]);\n+        thread_paused = false;\n+\n+        audio_state->capture_frame_info = frame_info;\n+    } else {\n+        alcMakeContextCurrent(alcCreateContext(audio_state->al_device[type], NULL));\n+    }\n+\n+    if (alcGetError(audio_state->al_device[type]) != AL_NO_ERROR) {\n+        close_al_device(type);\n+        return de_AlError;\n+    }\n+\n+    return de_None;\n }\n \n-// TODO: generate buffers separately\n-DeviceError open_device(DeviceType type, int32_t selection, uint32_t *device_idx, uint32_t sample_rate,\n-                        uint32_t frame_duration, uint8_t channels)\n+static void close_source(Device *device)\n {\n-    if (size[type] <= selection || selection < 0) {\n-        return de_InvalidSelection;\n+    if (device->source_open) {\n+        alDeleteSources(1, &device->source);\n+        alDeleteBuffers(OPENAL_BUFS, device->buffers);\n+\n+        device->source_open = false;\n     }\n+}\n \n-    if (channels != 1 && channels != 2) {\n-        return de_UnsupportedMode;\n+static DeviceError open_source(Device *device)\n+{\n+    alGenBuffers(OPENAL_BUFS, device->buffers);\n+\n+    if (alcGetError(audio_state->al_device[output]) != AL_NO_ERROR) {\n+        return de_FailedStart;\n     }\n \n-    lock;\n+    alGenSources((uint32_t)1, &device->source);\n \n-    const uint32_t frame_size = (sample_rate * frame_duration / 1000);\n+    if (alcGetError(audio_state->al_device[output]) != AL_NO_ERROR) {\n+        alDeleteBuffers(OPENAL_BUFS, device->buffers);\n+        return de_FailedStart;\n+    }\n \n-    uint32_t i;\n+    device->source_open = true;\n \n-    for (i = 0; i < MAX_DEVICES && running[type][i] != NULL; ++i);\n+    alSourcei(device->source, AL_LOOPING, AL_FALSE);\n \n-    if (i == MAX_DEVICES) {\n-        unlock;\n-        return de_AllDevicesBusy;\n-    } else {\n-        *device_idx = i;\n+    const uint32_t frame_size = device->frame_info.samples_per_frame * sample_size(device->frame_info.stereo);\n+    uint16_t zeros[frame_size];\n+    memset(zeros, 0, frame_size);\n+\n+    for (int i = 0; i < OPENAL_BUFS; ++i) {\n+        alBufferData(device->buffers[i], sound_mode(device->frame_info.stereo), zeros,\n+                     frame_size, device->frame_info.sample_rate);\n     }\n \n-    for (i = 0; i < MAX_DEVICES; i ++) { /* Check if any device has the same selection */\n-        if (running[type][i] && running[type][i]->selection == selection) {\n-//             printf(\"a%d-%d:%p \", selection, i, running[type][i]->dhndl);\n+    alSourceQueueBuffers(device->source, OPENAL_BUFS, device->buffers);\n+    alSourcePlay(device->source);\n \n-            running[type][*device_idx] = running[type][i];\n-            running[type][i]->ref_count ++;\n+    if (alcGetError(audio_state->al_device[output]) != AL_NO_ERROR) {\n+        close_source(device);\n+        return de_FailedStart;\n+    }\n \n-            unlock;\n-            return de_None;\n-        }\n+    return de_None;\n+}\n+\n+DeviceError set_al_device(DeviceType type, int32_t selection)\n+{\n+    if (audio_state->num_al_devices[type] <= selection || selection < 0) {\n+        return de_InvalidSelection;\n     }\n \n-    Device *device = running[type][*device_idx] = calloc(1, sizeof(Device));\n-    device->selection = selection;\n+    const char *name = audio_state->al_device_names[type][selection];\n+\n+    char **cur_name = &audio_state->current_al_device_name[type];\n+\n+    if (*cur_name != NULL) {\n+        free(*cur_name);\n+    }\n \n-    device->sample_rate = sample_rate;\n-    device->frame_duration = frame_duration;\n-    device->sound_mode = channels == 1 ? AL_FORMAT_MONO16 : AL_FORMAT_STEREO16;\n+    *cur_name = malloc(strlen(name) + 1);\n \n-    if (pthread_mutex_init(device->mutex, NULL) != 0) {\n-        free(device);\n-        unlock;\n+    if (*cur_name == NULL) {\n         return de_InternalError;\n     }\n \n-    if (type == input) {\n-        device->dhndl = alcCaptureOpenDevice(devices_names[type][selection],\n-                                             sample_rate, device->sound_mode, frame_size * 2);\n-#ifdef AUDIO\n-        device->VAD_treshold = user_settings->VAD_treshold;\n-#endif\n-    } else {\n-        device->dhndl = alcOpenDevice(devices_names[type][selection]);\n+    strcpy(*cur_name, name);\n \n-        if (!device->dhndl) {\n-            free(device);\n-            running[type][*device_idx] = NULL;\n-            unlock;\n-            return de_FailedStart;\n-        }\n+    if (audio_state->num_devices[type] > 0) {\n+        // close any existing al_device and try to open new one, reopening existing sources\n+        lock(type);\n+\n+        if (type == output) {\n+            for (int i = 0; i < MAX_DEVICES; i++) {\n+                Device *device = &audio_state->devices[type][i];\n \n-        device->ctx = alcCreateContext(device->dhndl, NULL);\n-        alcMakeContextCurrent(device->ctx);\n+                if (device->active) {\n+                    close_source(device);\n+                }\n+            }\n+        }\n \n-        alGenBuffers(OPENAL_BUFS, device->buffers);\n-        alGenSources((uint32_t)1, &device->source);\n-        alSourcei(device->source, AL_LOOPING, AL_FALSE);\n+        close_al_device(type);\n \n-        uint16_t zeros[frame_size];\n-        memset(zeros, 0, frame_size * 2);\n+        DeviceError err = open_al_device(type, audio_state->capture_frame_info);\n \n-        for (i = 0; i < OPENAL_BUFS; ++i) {\n-            alBufferData(device->buffers[i], device->sound_mode, zeros, frame_size * 2, sample_rate);\n+        if (err != de_None) {\n+            unlock(type);\n+            return err;\n         }\n \n-        alSourceQueueBuffers(device->source, OPENAL_BUFS, device->buffers);\n-        alSourcePlay(device->source);\n-    }\n+        if (type == output) {\n+            for (int i = 0; i < MAX_DEVICES; i++) {\n+                Device *device = &audio_state->devices[type][i];\n \n-    if (alcGetError(device->dhndl) != AL_NO_ERROR) {\n-        free(device);\n-        running[type][*device_idx] = NULL;\n-        unlock;\n-        return de_FailedStart;\n-    }\n+                if (device->active) {\n+                    open_source(device);\n+                }\n+            }\n+        }\n \n-    if (type == input) {\n-        alcCaptureStart(device->dhndl);\n-        thread_paused = false;\n+        unlock(type);\n     }\n \n-    unlock;\n     return de_None;\n }\n \n-DeviceError close_device(DeviceType type, uint32_t device_idx)\n+static DeviceError open_device(DeviceType type, uint32_t *device_idx,\n+                               DataHandleCallback cb, void *cb_data, bool enable_VAD,\n+                               uint32_t sample_rate, uint32_t frame_duration, uint8_t channels)\n {\n-    if (device_idx >= MAX_DEVICES) {\n-        return de_InvalidSelection;\n+    if (channels != 1 && channels != 2) {\n+        return de_UnsupportedMode;\n     }\n \n-    lock;\n-    Device *device = running[type][device_idx];\n-    DeviceError rc = de_None;\n+    const uint32_t samples_per_frame = (sample_rate * frame_duration / 1000);\n+    FrameInfo frame_info = {samples_per_frame, sample_rate, channels == 2};\n \n-    if (!device) {\n-        unlock;\n-        return de_DeviceNotActive;\n-    }\n+    uint32_t i;\n \n-    running[type][device_idx] = NULL;\n+    for (i = 0; i < MAX_DEVICES && audio_state->devices[type][i].active; ++i);\n \n-    if (!device->ref_count) {\n-        if (type == input) {\n-            if (!alcCaptureCloseDevice(device->dhndl)) {\n-                rc = de_AlError;\n-            }\n-        } else {\n-            if (alcGetCurrentContext() != device->ctx) {\n-                alcMakeContextCurrent(device->ctx);\n-            }\n+    if (i == MAX_DEVICES) {\n+        return de_AllDevicesBusy;\n+    }\n \n-            alDeleteSources(1, &device->source);\n-            alDeleteBuffers(OPENAL_BUFS, device->buffers);\n+    *device_idx = i;\n \n-            alcMakeContextCurrent(NULL);\n+    lock(type);\n \n-            if (device->ctx) {\n-                alcDestroyContext(device->ctx);\n-            }\n+    if (audio_state->al_device[type] == NULL) {\n+        DeviceError err = open_al_device(type, frame_info);\n \n-            if (!alcCloseDevice(device->dhndl)) {\n-                rc = de_AlError;\n-            }\n+        if (err != de_None) {\n+            unlock(type);\n+            return err;\n         }\n+    } else if (type == input) {\n+        // Use previously set frame info on existing capture device\n+        frame_info = audio_state->capture_frame_info;\n+    }\n \n-        free(device);\n+    Device *device = &audio_state->devices[type][i];\n+    device->active = true;\n+    ++audio_state->num_devices[type];\n+\n+    device->muted = false;\n+    device->frame_info = frame_info;\n+\n+    if (type == input) {\n+        device->cb = cb;\n+        device->cb_data = cb_data;\n+        device->enable_VAD = enable_VAD;\n+#ifdef AUDIO\n+        device->VAD_treshold = user_settings->VAD_treshold;\n+#endif\n     } else {\n-        device->ref_count--;\n+        if (open_source(device) != de_None) {\n+            device->active = false;\n+            --audio_state->num_devices[type];\n+            unlock(type);\n+            return de_FailedStart;\n+        }\n     }\n \n-    unlock;\n-    return rc;\n+    unlock(type);\n+    return de_None;\n+}\n+\n+DeviceError open_input_device(uint32_t *device_idx,\n+                              DataHandleCallback cb, void *cb_data, bool enable_VAD,\n+                              uint32_t sample_rate, uint32_t frame_duration, uint8_t channels)\n+{\n+    return open_device(input, device_idx,\n+                       cb, cb_data, enable_VAD,\n+                       sample_rate, frame_duration, channels);\n+}\n+\n+DeviceError open_output_device(uint32_t *device_idx,\n+                               uint32_t sample_rate, uint32_t frame_duration, uint8_t channels)\n+{\n+    return open_device(output, device_idx,\n+                       0, 0, 0,\n+                       sample_rate, frame_duration, channels);\n }\n \n-DeviceError register_device_callback(int32_t friend_number, uint32_t device_idx, DataHandleCallback callback,\n-                                     void *data, bool enable_VAD)\n+DeviceError close_device(DeviceType type, uint32_t device_idx)\n {\n-    if (size[input] <= device_idx || !running[input][device_idx] || running[input][device_idx]->dhndl == NULL) {\n+    if (device_idx >= MAX_DEVICES) {\n         return de_InvalidSelection;\n     }\n \n-    lock;\n-    running[input][device_idx]->cb = callback;\n-    running[input][device_idx]->cb_data = data;\n-    running[input][device_idx]->enable_VAD = enable_VAD;\n-    running[input][device_idx]->friend_number = friend_number;\n-    unlock;\n+    lock(type);\n \n-    return de_None;\n+    Device *device = &audio_state->devices[type][device_idx];\n+\n+    if (!device->active) {\n+        return de_DeviceNotActive;\n+    }\n+\n+    if (type == output) {\n+        close_source(device);\n+    }\n+\n+    device->active = false;\n+    --audio_state->num_devices[type];\n+\n+    DeviceError err = de_None;\n+\n+    if (audio_state->num_devices[type] == 0) {\n+        err = close_al_device(type);\n+    }\n+\n+    unlock(type);\n+    return err;\n }\n \n inline__ DeviceError write_out(uint32_t device_idx, const int16_t *data, uint32_t sample_count, uint8_t channels,",
            "html_url": "https://github.com/TokTok/toxic/pull/59#discussion_r403491675",
            "id": 403491675,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MTY3NQ==",
            "original_commit_id": "f8e9313b46f9568f9a60af189d0daecca6c08ace",
            "original_line": 554,
            "original_position": 704,
            "original_start_line": null,
            "path": "src/audio_device.c",
            "position": null,
            "pull_request_review_id": 387716130,
            "pull_request_url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403491675/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-05-07T22:08:47Z",
            "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403491675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/toxic/pull/59#discussion_r403492176"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403492176"
                }
            },
            "author_association": "MEMBER",
            "body": "Can you document what specifically is guarded by this lock?",
            "commit_id": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "created_at": "2020-04-04T17:03:28Z",
            "diff_hunk": "@@ -61,6 +61,8 @@\n extern FriendsList Friends;\n extern ToxWindow *windows[MAX_WINDOWS_NUM];\n \n+extern pthread_mutex_t tox_lock;",
            "html_url": "https://github.com/TokTok/toxic/pull/59#discussion_r403492176",
            "id": 403492176,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MjE3Ng==",
            "original_commit_id": "f8e9313b46f9568f9a60af189d0daecca6c08ace",
            "original_line": 64,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/audio_call.c",
            "position": null,
            "pull_request_review_id": 387716525,
            "pull_request_url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403492176/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-05-07T22:08:47Z",
            "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403492176",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/toxic/pull/59#discussion_r403511271"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403511271"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: no space before ;",
            "commit_id": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "created_at": "2020-04-04T20:07:05Z",
            "diff_hunk": "@@ -126,17 +126,30 @@ void cmd_join_group(WINDOW *window, ToxWindow *self, Tox *m, int argc, char (*ar\n         return;\n     }\n \n-    if (type != TOX_CONFERENCE_TYPE_TEXT) {\n-        line_info_add(self, NULL, NULL, NULL, SYS_MSG, 0, 0, \"Toxic does not support audio groups.\");\n-        return;\n-    }\n+    uint32_t groupnum ;",
            "html_url": "https://github.com/TokTok/toxic/pull/59#discussion_r403511271",
            "id": 403511271,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxMTI3MQ==",
            "original_commit_id": "40a00b53f4f0ff71392d42500387f5fff2c90976",
            "original_line": 129,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/chat_commands.c",
            "position": null,
            "pull_request_review_id": 387730669,
            "pull_request_url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403511271/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-05-07T22:08:47Z",
            "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403511271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/toxic/pull/59#discussion_r403511319"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403511319"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: align braces",
            "commit_id": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "created_at": "2020-04-04T20:07:37Z",
            "diff_hunk": "@@ -98,20 +98,21 @@ static struct cmd_func chat_commands[] = {\n };\n \n static struct cmd_func group_commands[] = {\n-    { \"/title\",     cmd_set_title   },\n+    { \"/title\",     cmd_set_title     },\n \n #ifdef AUDIO\n-    { \"/mute\",      cmd_mute        },\n-    { \"/sense\",     cmd_sense       },\n+    { \"/audio\",     cmd_enable_audio  },\n+    { \"/mute\",      cmd_group_mute },",
            "html_url": "https://github.com/TokTok/toxic/pull/59#discussion_r403511319",
            "id": 403511319,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxMTMxOQ==",
            "original_commit_id": "40a00b53f4f0ff71392d42500387f5fff2c90976",
            "original_line": 105,
            "original_position": 11,
            "original_start_line": null,
            "path": "src/execute.c",
            "position": null,
            "pull_request_review_id": 387730669,
            "pull_request_url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403511319/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-05-07T22:08:47Z",
            "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/403511319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/toxic/pull/59#discussion_r410442918"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/59"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/toxic/pulls/comments/410442918"
                }
            },
            "author_association": "MEMBER",
            "body": "peernum is uint32_t, it can't be < 0.",
            "commit_id": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "created_at": "2020-04-17T20:03:32Z",
            "diff_hunk": "@@ -756,3 +1044,145 @@ static ToxWindow *new_group_chat(uint32_t groupnum)\n \n     return ret;\n }\n+\n+#ifdef AUDIO\n+\n+#define GROUPAV_SAMPLE_RATE 48000\n+#define GROUPAV_FRAME_DURATION 20\n+#define GROUPAV_AUDIO_CHANNELS 1\n+#define GROUPAV_SAMPLES_PER_FRAME (GROUPAV_SAMPLE_RATE * GROUPAV_FRAME_DURATION / 1000)\n+\n+void audio_group_callback(void *tox, uint32_t groupnumber, uint32_t peernumber, const int16_t *pcm,\n+                          unsigned int samples, uint8_t channels, uint32_t sample_rate, void *userdata)\n+{\n+    GroupChat *chat = &groupchats[groupnumber];\n+\n+    if (!chat->active) {\n+        return;\n+    }\n+\n+    for (uint32_t i = 0; i < chat->max_idx; ++i) {\n+        GroupPeer *peer = &chat->peer_list[i];\n+\n+        if (!peer->active || peer->peernumber != peernumber) {\n+            continue;\n+        }\n+\n+        if (!peer->sending_audio) {\n+            if (open_output_device(&peer->audio_out_idx,\n+                                   sample_rate, GROUPAV_FRAME_DURATION, channels) != de_None) {\n+                // TODO: error message?\n+                return;\n+            }\n+\n+            peer->sending_audio = true;\n+\n+            set_peer_audio_position(tox, groupnumber, i);\n+        }\n+\n+        write_out(peer->audio_out_idx, pcm, samples, channels, sample_rate);\n+\n+        peer->last_audio_time = get_unix_time();\n+\n+        return;\n+    }\n+}\n+\n+static void group_read_device_callback(const int16_t *captured, uint32_t size, void *data)\n+{\n+    UNUSED_VAR(size);\n+\n+    AudioInputCallbackData *audio_input_callback_data = (AudioInputCallbackData *)data;\n+\n+    groupchats[audio_input_callback_data->groupnumber].last_sent_audio = get_unix_time();\n+\n+    toxav_group_send_audio(audio_input_callback_data->tox,\n+                           audio_input_callback_data->groupnumber,\n+                           captured, GROUPAV_SAMPLES_PER_FRAME,\n+                           GROUPAV_AUDIO_CHANNELS, GROUPAV_SAMPLE_RATE);\n+}\n+\n+bool init_group_audio_input(Tox *tox, uint32_t groupnumber)\n+{\n+    GroupChat *chat = &groupchats[groupnumber];\n+\n+    if (!chat->active || chat->audio_enabled) {\n+        return false;\n+    }\n+\n+    const AudioInputCallbackData audio_input_callback_data = { tox, groupnumber };\n+    chat->audio_input_callback_data = audio_input_callback_data;\n+\n+    bool success = (open_input_device(&chat->audio_in_idx,\n+                                      group_read_device_callback, &chat->audio_input_callback_data, true,\n+                                      GROUPAV_SAMPLE_RATE, GROUPAV_FRAME_DURATION, GROUPAV_AUDIO_CHANNELS)\n+                    == de_None);\n+\n+    chat->audio_enabled = success;\n+\n+    return success;\n+}\n+\n+bool enable_group_audio(Tox *tox, uint32_t groupnumber)\n+{\n+    if (!toxav_groupchat_av_enabled(tox, groupnumber)) {\n+        if (toxav_groupchat_enable_av(tox, groupnumber, audio_group_callback, NULL) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return init_group_audio_input(tox, groupnumber);\n+}\n+\n+bool disable_group_audio(Tox *tox, uint32_t groupnumber)\n+{\n+    GroupChat *chat = &groupchats[groupnumber];\n+\n+    if (!chat->active) {\n+        return false;\n+    }\n+\n+    if (chat->audio_enabled) {\n+        close_device(input, chat->audio_in_idx);\n+        chat->audio_enabled = false;\n+    }\n+\n+    return (toxav_groupchat_disable_av(tox, groupnumber) == 0);\n+}\n+\n+bool group_mute_self(uint32_t groupnumber)\n+{\n+    GroupChat *chat = &groupchats[groupnumber];\n+\n+    if (!chat->active || !chat->audio_enabled) {\n+        return false;\n+    }\n+\n+    device_mute(input, chat->audio_in_idx);\n+\n+    return true;\n+}\n+\n+bool group_mute_peer(const Tox *m, uint32_t groupnumber, uint32_t peernum)\n+{\n+    if (tox_conference_peer_number_is_ours(m, groupnumber, peernum, NULL)) {\n+        return group_mute_self(groupnumber);\n+    }\n+\n+    GroupChat *chat = &groupchats[groupnumber];\n+\n+    if (!chat->active || !chat->audio_enabled\n+            || peernum < 0 || peernum > chat->max_idx) {",
            "html_url": "https://github.com/TokTok/toxic/pull/59#discussion_r410442918",
            "id": 410442918,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MjkxOA==",
            "original_commit_id": "37d6703333163570b643ed7ad980559e37248453",
            "original_line": 1175,
            "original_position": 690,
            "original_start_line": null,
            "path": "src/groupchat.c",
            "position": null,
            "pull_request_review_id": 395738529,
            "pull_request_url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/410442918/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-05-07T22:08:47Z",
            "url": "https://api.github.com/repos/TokTok/toxic/pulls/comments/410442918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Not quite ready to merge yet. I caught a SIGSEGV when I closed an audio group the first time I tried to test it. Will investigate further when I have time to do more thorough testing.",
            "created_at": "2020-04-04T20:42:18Z",
            "html_url": "https://github.com/TokTok/toxic/pull/59#issuecomment-609086369",
            "id": 609086369,
            "issue_url": "https://api.github.com/repos/TokTok/toxic/issues/59",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTA4NjM2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/issues/comments/609086369/reactions"
            },
            "updated_at": "2020-04-04T20:42:18Z",
            "url": "https://api.github.com/repos/TokTok/toxic/issues/comments/609086369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Current issues:\r\n- The segfault isn't fixed (https://gist.github.com/JFreegman/d1ec387ea9c17da57f0ec31e3985813f)\r\n- `/mute` with no argument doesn't always work\r\n- `/mute` should print a message indicating that so and so is muted or unmuted\r\n- Tab completion should work for `/mute`\r\n- The group section of the help menu should have entries for `/lsdev` and `/sdev` (audio commands should be split up the same way they are in the chat help menu)\r\n- What happens if two peers share the same nick?",
            "created_at": "2020-04-05T16:57:29Z",
            "html_url": "https://github.com/TokTok/toxic/pull/59#issuecomment-609447584",
            "id": 609447584,
            "issue_url": "https://api.github.com/repos/TokTok/toxic/issues/59",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTQ0NzU4NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/issues/comments/609447584/reactions"
            },
            "updated_at": "2020-04-05T16:57:29Z",
            "url": "https://api.github.com/repos/TokTok/toxic/issues/comments/609447584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "author_association": "NONE",
            "body": "## DeepCode's analysis on [#811f28](https://www.deepcode.ai/app/gh/TokTok/toxic/bdeae33d48a0e013aee9abe57aaed8b0bce811a3/TokTok/toxic/811f2872ba0ad7e4a156b57295b1110ee884b139/pr/_/%2F/code/?utm_source=gh_review?c=0&w=1&i=1) found:\n\n:warning: **1** warning  **1** minor issue.  \n\n##### ðŸ‘‰ View analysis in [**DeepCodeâ€™s Dashboard**](https://www.deepcode.ai/app/gh/TokTok/toxic/bdeae33d48a0e013aee9abe57aaed8b0bce811a3/TokTok/toxic/811f2872ba0ad7e4a156b57295b1110ee884b139/pr/_/%2F/code/?utm_source=gh_review?c=0&w=1&i=1)\n---\n:relaxed: If you want to provide feedback on our bot, here is how to [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review).\n",
            "created_at": "2020-05-04T22:24:11Z",
            "html_url": "https://github.com/TokTok/toxic/pull/59#issuecomment-623739849",
            "id": 623739849,
            "issue_url": "https://api.github.com/repos/TokTok/toxic/issues/59",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzczOTg0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/issues/comments/623739849/reactions"
            },
            "updated_at": "2020-05-07T22:08:56Z",
            "url": "https://api.github.com/repos/TokTok/toxic/issues/comments/623739849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Merged in #63 ",
            "created_at": "2020-11-14T18:58:16Z",
            "html_url": "https://github.com/TokTok/toxic/pull/59#issuecomment-727250876",
            "id": 727250876,
            "issue_url": "https://api.github.com/repos/TokTok/toxic/issues/59",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzI1MDg3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/toxic/issues/comments/727250876/reactions"
            },
            "updated_at": "2020-11-14T18:58:16Z",
            "url": "https://api.github.com/repos/TokTok/toxic/issues/comments/727250876",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8304462?v=4",
                "events_url": "https://api.github.com/users/robinlinden/events{/privacy}",
                "followers_url": "https://api.github.com/users/robinlinden/followers",
                "following_url": "https://api.github.com/users/robinlinden/following{/other_user}",
                "gists_url": "https://api.github.com/users/robinlinden/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/robinlinden",
                "id": 8304462,
                "login": "robinlinden",
                "node_id": "MDQ6VXNlcjgzMDQ0NjI=",
                "organizations_url": "https://api.github.com/users/robinlinden/orgs",
                "received_events_url": "https://api.github.com/users/robinlinden/received_events",
                "repos_url": "https://api.github.com/users/robinlinden/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/robinlinden/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robinlinden/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/robinlinden"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/TokTok/toxic/issues/59/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/590069?v=4",
                "events_url": "https://api.github.com/users/zugz/events{/privacy}",
                "followers_url": "https://api.github.com/users/zugz/followers",
                "following_url": "https://api.github.com/users/zugz/following{/other_user}",
                "gists_url": "https://api.github.com/users/zugz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zugz",
                "id": 590069,
                "login": "zugz",
                "node_id": "MDQ6VXNlcjU5MDA2OQ==",
                "organizations_url": "https://api.github.com/users/zugz/orgs",
                "received_events_url": "https://api.github.com/users/zugz/received_events",
                "repos_url": "https://api.github.com/users/zugz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zugz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zugz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zugz"
            },
            "comments_url": "https://api.github.com/repos/TokTok/toxic/commits/dffef9b7bb4df9f7c477fc9488efdeadb64d4879/comments",
            "commit": {
                "author": {
                    "date": "2020-04-04T00:00:00Z",
                    "email": "mbays+tox@sdf.org",
                    "name": "zugz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-06T00:00:00Z",
                    "email": "mbays+tox@sdf.org",
                    "name": "zugz (tox)"
                },
                "message": "Rework audio device handling\n\nWe now have at most one input and one output device open at any time,\nbut can have multiple capture callbacks and multiple output sources.",
                "tree": {
                    "sha": "132251be292ff37d1b1114c00ee0173788b3c167",
                    "url": "https://api.github.com/repos/TokTok/toxic/git/trees/132251be292ff37d1b1114c00ee0173788b3c167"
                },
                "url": "https://api.github.com/repos/TokTok/toxic/git/commits/dffef9b7bb4df9f7c477fc9488efdeadb64d4879",
                "verification": {
                    "payload": "tree 132251be292ff37d1b1114c00ee0173788b3c167\nparent bdeae33d48a0e013aee9abe57aaed8b0bce811a3\nauthor zugz <mbays+tox@sdf.org> 1585958400 +0000\ncommitter zugz (tox) <mbays+tox@sdf.org> 1588723200 +0000\n\nRework audio device handling\n\nWe now have at most one input and one output device open at any time,\nbut can have multiple capture callbacks and multiple output sources.\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEAqnhZrfTpeTogXGLbyvaKJ0E8kkFAl6x/gAACgkQbyvaKJ0E\n8kkcZwf8DhIjUuw8y9Yz4aKyHWEzCEv7N14L/m/jydRisCt7PaTikiuGjmpK92va\nQXogOacjWpuedX0mSXDxgC4A9oSW6xFXixfgBlnukPp84cHDyKVM433+FB4Ftfep\nJ0rx/Ltw+mNgv0h9V6JHgWf4xqVwslFEyfhMV1sVtWVVRqDKkfqaZ/U8oQPn3sUD\nEhLda4DjsAlx+LMuVIirg3CKzGhSuZo7oz6FiBldqSb2+cuOPZA6QnJhonGyLvFU\neyb0rFF5KQxHx+D6BIm5FRejTb9XqsDv/OEzSEHrO4ApLYA3koaLinh7Z8dGxdnO\nZEk1axpsDMZYVSaX60sHZbvFb5Hbrg==\n=NeJb\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/590069?v=4",
                "events_url": "https://api.github.com/users/zugz/events{/privacy}",
                "followers_url": "https://api.github.com/users/zugz/followers",
                "following_url": "https://api.github.com/users/zugz/following{/other_user}",
                "gists_url": "https://api.github.com/users/zugz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zugz",
                "id": 590069,
                "login": "zugz",
                "node_id": "MDQ6VXNlcjU5MDA2OQ==",
                "organizations_url": "https://api.github.com/users/zugz/orgs",
                "received_events_url": "https://api.github.com/users/zugz/received_events",
                "repos_url": "https://api.github.com/users/zugz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zugz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zugz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zugz"
            },
            "html_url": "https://github.com/TokTok/toxic/commit/dffef9b7bb4df9f7c477fc9488efdeadb64d4879",
            "node_id": "MDY6Q29tbWl0MTA4NzQ4MDc4OmRmZmVmOWI3YmI0ZGY5ZjdjNDc3ZmM5NDg4ZWZkZWFkYjY0ZDQ4Nzk=",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/toxic/commit/bdeae33d48a0e013aee9abe57aaed8b0bce811a3",
                    "sha": "bdeae33d48a0e013aee9abe57aaed8b0bce811a3",
                    "url": "https://api.github.com/repos/TokTok/toxic/commits/bdeae33d48a0e013aee9abe57aaed8b0bce811a3"
                }
            ],
            "sha": "dffef9b7bb4df9f7c477fc9488efdeadb64d4879",
            "url": "https://api.github.com/repos/TokTok/toxic/commits/dffef9b7bb4df9f7c477fc9488efdeadb64d4879"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/590069?v=4",
                "events_url": "https://api.github.com/users/zugz/events{/privacy}",
                "followers_url": "https://api.github.com/users/zugz/followers",
                "following_url": "https://api.github.com/users/zugz/following{/other_user}",
                "gists_url": "https://api.github.com/users/zugz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zugz",
                "id": 590069,
                "login": "zugz",
                "node_id": "MDQ6VXNlcjU5MDA2OQ==",
                "organizations_url": "https://api.github.com/users/zugz/orgs",
                "received_events_url": "https://api.github.com/users/zugz/received_events",
                "repos_url": "https://api.github.com/users/zugz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zugz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zugz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zugz"
            },
            "comments_url": "https://api.github.com/repos/TokTok/toxic/commits/811f2872ba0ad7e4a156b57295b1110ee884b139/comments",
            "commit": {
                "author": {
                    "date": "2020-05-07T00:00:00Z",
                    "email": "mbays+tox@sdf.org",
                    "name": "zugz"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2020-05-07T00:00:00Z",
                    "email": "mbays+tox@sdf.org",
                    "name": "zugz (tox)"
                },
                "message": "Implement groupAV",
                "tree": {
                    "sha": "5d66ecef7ab361a8b3cc85f03d8f7f77b462965c",
                    "url": "https://api.github.com/repos/TokTok/toxic/git/trees/5d66ecef7ab361a8b3cc85f03d8f7f77b462965c"
                },
                "url": "https://api.github.com/repos/TokTok/toxic/git/commits/811f2872ba0ad7e4a156b57295b1110ee884b139",
                "verification": {
                    "payload": "tree 5d66ecef7ab361a8b3cc85f03d8f7f77b462965c\nparent dffef9b7bb4df9f7c477fc9488efdeadb64d4879\nauthor zugz <mbays+tox@sdf.org> 1588809600 +0000\ncommitter zugz (tox) <mbays+tox@sdf.org> 1588809600 +0000\n\nImplement groupAV\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEAqnhZrfTpeTogXGLbyvaKJ0E8kkFAl6zT4EACgkQbyvaKJ0E\n8kmmYQgAotTK2jlN6x94ecqF9DDZyHcV6m0k59CUKoBFZQuCjfPlaEQ+6IRFloli\nc2Cjw8CDZ2vYnS05wshG5ydRgF86zgWyXRHCLFOHV1I0PUND1eH8UNRUzboFzt9a\nPp7PCT6x1jSqIyL6Q3+ED768c/ntXdoI9aq9obOptXypZxQdwwz0LlQjal5STf9+\nF+eysqBnCX8m5rCMr3slxzW8feARX9MgRBPatK7YWWPvHD2L3k2Qp/OaX042rHLz\nmZu8+WqSYAmmPSQ/9JAzBomqai28yIH7RYb59Z3oXSoAOsFaSKn8ACRoZVWMttkQ\nJgN6xra3E/Ch7op7LCm9R/6hSoXw6Q==\n=NIbI\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/590069?v=4",
                "events_url": "https://api.github.com/users/zugz/events{/privacy}",
                "followers_url": "https://api.github.com/users/zugz/followers",
                "following_url": "https://api.github.com/users/zugz/following{/other_user}",
                "gists_url": "https://api.github.com/users/zugz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zugz",
                "id": 590069,
                "login": "zugz",
                "node_id": "MDQ6VXNlcjU5MDA2OQ==",
                "organizations_url": "https://api.github.com/users/zugz/orgs",
                "received_events_url": "https://api.github.com/users/zugz/received_events",
                "repos_url": "https://api.github.com/users/zugz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zugz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zugz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zugz"
            },
            "html_url": "https://github.com/TokTok/toxic/commit/811f2872ba0ad7e4a156b57295b1110ee884b139",
            "node_id": "MDY6Q29tbWl0MTA4NzQ4MDc4OjgxMWYyODcyYmEwYWQ3ZTRhMTU2YjU3Mjk1YjExMTBlZTg4NGIxMzk=",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/toxic/commit/dffef9b7bb4df9f7c477fc9488efdeadb64d4879",
                    "sha": "dffef9b7bb4df9f7c477fc9488efdeadb64d4879",
                    "url": "https://api.github.com/repos/TokTok/toxic/commits/dffef9b7bb4df9f7c477fc9488efdeadb64d4879"
                }
            ],
            "sha": "811f2872ba0ad7e4a156b57295b1110ee884b139",
            "url": "https://api.github.com/repos/TokTok/toxic/commits/811f2872ba0ad7e4a156b57295b1110ee884b139"
        }
    ],
    "commits_url": "https://api.github.com/repos/TokTok/toxic/pulls/59/commits",
    "created_at": "2020-04-04T13:53:50Z",
    "diff_url": "https://github.com/TokTok/toxic/pull/59.diff",
    "draft": false,
    "head": {
        "label": "zugz:groupAv",
        "ref": "groupAv",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/zugz/toxic/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/zugz/toxic/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/zugz/toxic/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/zugz/toxic/branches{/branch}",
            "clone_url": "https://github.com/zugz/toxic.git",
            "collaborators_url": "https://api.github.com/repos/zugz/toxic/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/zugz/toxic/comments{/number}",
            "commits_url": "https://api.github.com/repos/zugz/toxic/commits{/sha}",
            "compare_url": "https://api.github.com/repos/zugz/toxic/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/zugz/toxic/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/zugz/toxic/contributors",
            "created_at": "2017-10-29T15:51:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/zugz/toxic/deployments",
            "description": "An ncurses-based Tox client",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/zugz/toxic/downloads",
            "events_url": "https://api.github.com/repos/zugz/toxic/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/zugz/toxic/forks",
            "full_name": "zugz/toxic",
            "git_commits_url": "https://api.github.com/repos/zugz/toxic/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/zugz/toxic/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/zugz/toxic/git/tags{/sha}",
            "git_url": "git://github.com/zugz/toxic.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "",
            "hooks_url": "https://api.github.com/repos/zugz/toxic/hooks",
            "html_url": "https://github.com/zugz/toxic",
            "id": 108748078,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/zugz/toxic/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/zugz/toxic/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/zugz/toxic/issues{/number}",
            "keys_url": "https://api.github.com/repos/zugz/toxic/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/zugz/toxic/labels{/name}",
            "language": "C",
            "languages_url": "https://api.github.com/repos/zugz/toxic/languages",
            "license": {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "node_id": "MDc6TGljZW5zZTk=",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
            },
            "merges_url": "https://api.github.com/repos/zugz/toxic/merges",
            "milestones_url": "https://api.github.com/repos/zugz/toxic/milestones{/number}",
            "mirror_url": null,
            "name": "toxic",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDg3NDgwNzg=",
            "notifications_url": "https://api.github.com/repos/zugz/toxic/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/590069?v=4",
                "events_url": "https://api.github.com/users/zugz/events{/privacy}",
                "followers_url": "https://api.github.com/users/zugz/followers",
                "following_url": "https://api.github.com/users/zugz/following{/other_user}",
                "gists_url": "https://api.github.com/users/zugz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zugz",
                "id": 590069,
                "login": "zugz",
                "node_id": "MDQ6VXNlcjU5MDA2OQ==",
                "organizations_url": "https://api.github.com/users/zugz/orgs",
                "received_events_url": "https://api.github.com/users/zugz/received_events",
                "repos_url": "https://api.github.com/users/zugz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zugz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zugz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zugz"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/zugz/toxic/pulls{/number}",
            "pushed_at": "2020-11-16T20:34:28Z",
            "releases_url": "https://api.github.com/repos/zugz/toxic/releases{/id}",
            "size": 16778,
            "ssh_url": "git@github.com:zugz/toxic.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/zugz/toxic/stargazers",
            "statuses_url": "https://api.github.com/repos/zugz/toxic/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/zugz/toxic/subscribers",
            "subscription_url": "https://api.github.com/repos/zugz/toxic/subscription",
            "svn_url": "https://github.com/zugz/toxic",
            "tags_url": "https://api.github.com/repos/zugz/toxic/tags",
            "teams_url": "https://api.github.com/repos/zugz/toxic/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/zugz/toxic/git/trees{/sha}",
            "updated_at": "2020-11-16T20:22:59Z",
            "url": "https://api.github.com/repos/zugz/toxic",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "811f2872ba0ad7e4a156b57295b1110ee884b139",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/590069?v=4",
            "events_url": "https://api.github.com/users/zugz/events{/privacy}",
            "followers_url": "https://api.github.com/users/zugz/followers",
            "following_url": "https://api.github.com/users/zugz/following{/other_user}",
            "gists_url": "https://api.github.com/users/zugz/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zugz",
            "id": 590069,
            "login": "zugz",
            "node_id": "MDQ6VXNlcjU5MDA2OQ==",
            "organizations_url": "https://api.github.com/users/zugz/orgs",
            "received_events_url": "https://api.github.com/users/zugz/received_events",
            "repos_url": "https://api.github.com/users/zugz/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zugz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zugz/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zugz"
        }
    },
    "html_url": "https://github.com/TokTok/toxic/pull/59",
    "id": 398573342,
    "issue_url": "https://api.github.com/repos/TokTok/toxic/issues/59",
    "labels": [
        {
            "color": "84b6eb",
            "default": true,
            "description": "New feature for the user, not a new feature for build script",
            "id": 811095253,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw4MTEwOTUyNTM=",
            "url": "https://api.github.com/repos/TokTok/toxic/labels/enhancement"
        }
    ],
    "locked": false,
    "merge_commit_sha": "4ead544adeba86302571ca0abbb755ae9da3923a",
    "merged_at": null,
    "milestone": {
        "closed_at": "2021-12-11T22:20:00Z",
        "closed_issues": 104,
        "created_at": "2020-04-26T18:19:17Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
            "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
            "followers_url": "https://api.github.com/users/iphydf/followers",
            "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
            "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/iphydf",
            "id": 10647936,
            "login": "iphydf",
            "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
            "organizations_url": "https://api.github.com/users/iphydf/orgs",
            "received_events_url": "https://api.github.com/users/iphydf/received_events",
            "repos_url": "https://api.github.com/users/iphydf/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/iphydf"
        },
        "description": null,
        "due_on": null,
        "html_url": "https://github.com/TokTok/toxic/milestone/1",
        "id": 5350436,
        "labels_url": "https://api.github.com/repos/TokTok/toxic/milestones/1/labels",
        "node_id": "MDk6TWlsZXN0b25lNTM1MDQzNg==",
        "number": 1,
        "open_issues": 0,
        "state": "closed",
        "title": "0.8.x",
        "updated_at": "2021-12-11T22:20:00Z",
        "url": "https://api.github.com/repos/TokTok/toxic/milestones/1"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk4NTczMzQy",
    "number": 59,
    "patch_url": "https://github.com/TokTok/toxic/pull/59.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/TokTok/toxic/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/TokTok/toxic/pulls/59/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/TokTok/toxic/statuses/811f2872ba0ad7e4a156b57295b1110ee884b139",
    "title": "feat: Implement audio groups",
    "updated_at": "2020-11-14T18:58:16Z",
    "url": "https://api.github.com/repos/TokTok/toxic/pulls/59",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/590069?v=4",
        "events_url": "https://api.github.com/users/zugz/events{/privacy}",
        "followers_url": "https://api.github.com/users/zugz/followers",
        "following_url": "https://api.github.com/users/zugz/following{/other_user}",
        "gists_url": "https://api.github.com/users/zugz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zugz",
        "id": 590069,
        "login": "zugz",
        "node_id": "MDQ6VXNlcjU5MDA2OQ==",
        "organizations_url": "https://api.github.com/users/zugz/orgs",
        "received_events_url": "https://api.github.com/users/zugz/received_events",
        "repos_url": "https://api.github.com/users/zugz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zugz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zugz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zugz"
    }
}