{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/issues/200/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200/commits"
        },
        "html": {
            "href": "https://github.com/TokTok/c-toxcore/pull/200"
        },
        "issue": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/issues/200"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
        },
        "statuses": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/statuses/3f4adab0a0e94d0b3456bfa966fcc97b09a32483"
        }
    },
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
        "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
        "followers_url": "https://api.github.com/users/JFreegman/followers",
        "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
        "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/JFreegman",
        "id": 1646057,
        "login": "JFreegman",
        "node_id": "MDQ6VXNlcjE2NDYwNTc=",
        "organizations_url": "https://api.github.com/users/JFreegman/orgs",
        "received_events_url": "https://api.github.com/users/JFreegman/received_events",
        "repos_url": "https://api.github.com/users/JFreegman/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/JFreegman"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
            "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
            "followers_url": "https://api.github.com/users/JFreegman/followers",
            "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
            "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/JFreegman",
            "id": 1646057,
            "login": "JFreegman",
            "node_id": "MDQ6VXNlcjE2NDYwNTc=",
            "organizations_url": "https://api.github.com/users/JFreegman/orgs",
            "received_events_url": "https://api.github.com/users/JFreegman/received_events",
            "repos_url": "https://api.github.com/users/JFreegman/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/JFreegman"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1855294?v=4",
            "events_url": "https://api.github.com/users/nurupo/events{/privacy}",
            "followers_url": "https://api.github.com/users/nurupo/followers",
            "following_url": "https://api.github.com/users/nurupo/following{/other_user}",
            "gists_url": "https://api.github.com/users/nurupo/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/nurupo",
            "id": 1855294,
            "login": "nurupo",
            "node_id": "MDQ6VXNlcjE4NTUyOTQ=",
            "organizations_url": "https://api.github.com/users/nurupo/orgs",
            "received_events_url": "https://api.github.com/users/nurupo/received_events",
            "repos_url": "https://api.github.com/users/nurupo/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/nurupo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nurupo/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/nurupo"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/5155966?v=4",
            "events_url": "https://api.github.com/users/tux3/events{/privacy}",
            "followers_url": "https://api.github.com/users/tux3/followers",
            "following_url": "https://api.github.com/users/tux3/following{/other_user}",
            "gists_url": "https://api.github.com/users/tux3/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tux3",
            "id": 5155966,
            "login": "tux3",
            "node_id": "MDQ6VXNlcjUxNTU5NjY=",
            "organizations_url": "https://api.github.com/users/tux3/orgs",
            "received_events_url": "https://api.github.com/users/tux3/received_events",
            "repos_url": "https://api.github.com/users/tux3/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tux3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tux3/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tux3"
        }
    ],
    "author_association": "NONE",
    "auto_merge": null,
    "base": {
        "label": "TokTok:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/TokTok/c-toxcore/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/TokTok/c-toxcore/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/TokTok/c-toxcore/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/TokTok/c-toxcore/branches{/branch}",
            "clone_url": "https://github.com/TokTok/c-toxcore.git",
            "collaborators_url": "https://api.github.com/repos/TokTok/c-toxcore/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/comments{/number}",
            "commits_url": "https://api.github.com/repos/TokTok/c-toxcore/commits{/sha}",
            "compare_url": "https://api.github.com/repos/TokTok/c-toxcore/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/TokTok/c-toxcore/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/TokTok/c-toxcore/contributors",
            "created_at": "2016-07-06T08:15:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/TokTok/c-toxcore/deployments",
            "description": "The future of online communications.",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/TokTok/c-toxcore/downloads",
            "events_url": "https://api.github.com/repos/TokTok/c-toxcore/events",
            "fork": true,
            "forks": 283,
            "forks_count": 283,
            "forks_url": "https://api.github.com/repos/TokTok/c-toxcore/forks",
            "full_name": "TokTok/c-toxcore",
            "git_commits_url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/TokTok/c-toxcore/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/TokTok/c-toxcore/git/tags{/sha}",
            "git_url": "git://github.com/TokTok/c-toxcore.git",
            "has_discussions": false,
            "has_downloads": false,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "https://tox.chat",
            "hooks_url": "https://api.github.com/repos/TokTok/c-toxcore/hooks",
            "html_url": "https://github.com/TokTok/c-toxcore",
            "id": 62703642,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/TokTok/c-toxcore/issues{/number}",
            "keys_url": "https://api.github.com/repos/TokTok/c-toxcore/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/TokTok/c-toxcore/labels{/name}",
            "language": "C",
            "languages_url": "https://api.github.com/repos/TokTok/c-toxcore/languages",
            "license": {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "node_id": "MDc6TGljZW5zZTk=",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
            },
            "merges_url": "https://api.github.com/repos/TokTok/c-toxcore/merges",
            "milestones_url": "https://api.github.com/repos/TokTok/c-toxcore/milestones{/number}",
            "mirror_url": null,
            "name": "c-toxcore",
            "node_id": "MDEwOlJlcG9zaXRvcnk2MjcwMzY0Mg==",
            "notifications_url": "https://api.github.com/repos/TokTok/c-toxcore/notifications{?since,all,participating}",
            "open_issues": 210,
            "open_issues_count": 210,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17427091?v=4",
                "events_url": "https://api.github.com/users/TokTok/events{/privacy}",
                "followers_url": "https://api.github.com/users/TokTok/followers",
                "following_url": "https://api.github.com/users/TokTok/following{/other_user}",
                "gists_url": "https://api.github.com/users/TokTok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TokTok",
                "id": 17427091,
                "login": "TokTok",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE3NDI3MDkx",
                "organizations_url": "https://api.github.com/users/TokTok/orgs",
                "received_events_url": "https://api.github.com/users/TokTok/received_events",
                "repos_url": "https://api.github.com/users/TokTok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TokTok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TokTok/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/TokTok"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls{/number}",
            "pushed_at": "2024-02-23T16:21:31Z",
            "releases_url": "https://api.github.com/repos/TokTok/c-toxcore/releases{/id}",
            "size": 37461,
            "ssh_url": "git@github.com:TokTok/c-toxcore.git",
            "stargazers_count": 2116,
            "stargazers_url": "https://api.github.com/repos/TokTok/c-toxcore/stargazers",
            "statuses_url": "https://api.github.com/repos/TokTok/c-toxcore/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/TokTok/c-toxcore/subscribers",
            "subscription_url": "https://api.github.com/repos/TokTok/c-toxcore/subscription",
            "svn_url": "https://github.com/TokTok/c-toxcore",
            "tags_url": "https://api.github.com/repos/TokTok/c-toxcore/tags",
            "teams_url": "https://api.github.com/repos/TokTok/c-toxcore/teams",
            "topics": [
                "cryptography",
                "encryption",
                "network",
                "p2p",
                "security",
                "toxcore"
            ],
            "trees_url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees{/sha}",
            "updated_at": "2024-02-23T18:58:26Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore",
            "visibility": "public",
            "watchers": 2116,
            "watchers_count": 2116,
            "web_commit_signoff_required": false
        },
        "sha": "6d0c8060c1e1034a5d5047799b0493c137e53364",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/17427091?v=4",
            "events_url": "https://api.github.com/users/TokTok/events{/privacy}",
            "followers_url": "https://api.github.com/users/TokTok/followers",
            "following_url": "https://api.github.com/users/TokTok/following{/other_user}",
            "gists_url": "https://api.github.com/users/TokTok/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/TokTok",
            "id": 17427091,
            "login": "TokTok",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE3NDI3MDkx",
            "organizations_url": "https://api.github.com/users/TokTok/orgs",
            "received_events_url": "https://api.github.com/users/TokTok/received_events",
            "repos_url": "https://api.github.com/users/TokTok/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/TokTok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TokTok/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/TokTok"
        }
    },
    "body": "enjoy!\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/toktok/c-toxcore/200)\n\n<!-- Reviewable:end -->\n",
    "closed_at": "2016-11-06T01:30:11Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84593244"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84593244"
                }
            },
            "author_association": "MEMBER",
            "body": "typo: appropriate\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T09:59:09Z",
            "diff_hunk": "@@ -0,0 +1,349 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as approitate.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84593244",
            "id": 84593244,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NTkzMjQ0",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 3,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5362912,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84593244/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84593244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
                "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudden6/followers",
                "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudden6",
                "id": 5585762,
                "login": "sudden6",
                "node_id": "MDQ6VXNlcjU1ODU3NjI=",
                "organizations_url": "https://api.github.com/users/sudden6/orgs",
                "received_events_url": "https://api.github.com/users/sudden6/received_events",
                "repos_url": "https://api.github.com/users/sudden6/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudden6"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84593281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84593281"
                }
            },
            "author_association": "MEMBER",
            "body": "typo: appropriate\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T10:01:14Z",
            "diff_hunk": "@@ -0,0 +1,58 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as approitate.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84593281",
            "id": 84593281,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NTkzMjgx",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 3,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5362938,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84593281/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84593281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
                "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudden6/followers",
                "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudden6",
                "id": 5585762,
                "login": "sudden6",
                "node_id": "MDQ6VXNlcjU1ODU3NjI=",
                "organizations_url": "https://api.github.com/users/sudden6/orgs",
                "received_events_url": "https://api.github.com/users/sudden6/received_events",
                "repos_url": "https://api.github.com/users/sudden6/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudden6"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84600007"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84600007"
                }
            },
            "author_association": "MEMBER",
            "body": "Isn't 255 too long for an alias ? I guess 64 chars would be sufficient ;)\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T17:24:30Z",
            "diff_hunk": "@@ -286,7 +286,10 @@ const FILE_ID_LENGTH              = 32;\n  */\n const MAX_FILENAME_LENGTH         = 255;\n \n-\n+/**\n+ * Max legnth of names queried by toxcore\n+ */\n+const MAX_QUERY_NAME_LENGTH       = 255;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84600007",
            "id": 84600007,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjAwMDA3",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5368360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84600007/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84600007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8523159?v=4",
                "events_url": "https://api.github.com/users/SkyzohKey/events{/privacy}",
                "followers_url": "https://api.github.com/users/SkyzohKey/followers",
                "following_url": "https://api.github.com/users/SkyzohKey/following{/other_user}",
                "gists_url": "https://api.github.com/users/SkyzohKey/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/SkyzohKey",
                "id": 8523159,
                "login": "SkyzohKey",
                "node_id": "MDQ6VXNlcjg1MjMxNTk=",
                "organizations_url": "https://api.github.com/users/SkyzohKey/orgs",
                "received_events_url": "https://api.github.com/users/SkyzohKey/received_events",
                "repos_url": "https://api.github.com/users/SkyzohKey/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/SkyzohKey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SkyzohKey/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/SkyzohKey"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84601413"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84601413"
                }
            },
            "author_association": "MEMBER",
            "body": "It's already limited to 63 chars in worst-case scenario. For 64 you would want 256.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T18:37:19Z",
            "diff_hunk": "@@ -286,7 +286,10 @@ const FILE_ID_LENGTH              = 32;\n  */\n const MAX_FILENAME_LENGTH         = 255;\n \n-\n+/**\n+ * Max legnth of names queried by toxcore\n+ */\n+const MAX_QUERY_NAME_LENGTH       = 255;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84601413",
            "id": 84601413,
            "in_reply_to_id": 84600007,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjAxNDEz",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5369597,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84601413/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84601413",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3148759?v=4",
                "events_url": "https://api.github.com/users/zetok/events{/privacy}",
                "followers_url": "https://api.github.com/users/zetok/followers",
                "following_url": "https://api.github.com/users/zetok/following{/other_user}",
                "gists_url": "https://api.github.com/users/zetok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zetok",
                "id": 3148759,
                "login": "zetok",
                "node_id": "MDQ6VXNlcjMxNDg3NTk=",
                "organizations_url": "https://api.github.com/users/zetok/orgs",
                "received_events_url": "https://api.github.com/users/zetok/received_events",
                "repos_url": "https://api.github.com/users/zetok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zetok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zetok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zetok"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84601448"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84601448"
                }
            },
            "author_association": "MEMBER",
            "body": "Should be added that it's in bytes, since some people think that this refers to number of chars.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T18:38:59Z",
            "diff_hunk": "@@ -309,6 +309,13 @@ uint32_t tox_file_id_length(void);\n \n uint32_t tox_max_filename_length(void);\n \n+/**\n+ * Max legnth of names queried by toxcore",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84601448",
            "id": 84601448,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjAxNDQ4",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "toxcore/tox.h",
            "position": null,
            "pull_request_review_id": 5369627,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84601448/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84601448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3148759?v=4",
                "events_url": "https://api.github.com/users/zetok/events{/privacy}",
                "followers_url": "https://api.github.com/users/zetok/followers",
                "following_url": "https://api.github.com/users/zetok/following{/other_user}",
                "gists_url": "https://api.github.com/users/zetok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zetok",
                "id": 3148759,
                "login": "zetok",
                "node_id": "MDQ6VXNlcjMxNDg3NTk=",
                "organizations_url": "https://api.github.com/users/zetok/orgs",
                "received_events_url": "https://api.github.com/users/zetok/received_events",
                "repos_url": "https://api.github.com/users/zetok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zetok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zetok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zetok"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84604301"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84604301"
                }
            },
            "author_association": "NONE",
            "body": "it's limited to 255 because that's a single u8, so that when we add additional information/meta data, we can include the size of the name vs other data.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T20:46:35Z",
            "diff_hunk": "@@ -286,7 +286,10 @@ const FILE_ID_LENGTH              = 32;\n  */\n const MAX_FILENAME_LENGTH         = 255;\n \n-\n+/**\n+ * Max legnth of names queried by toxcore\n+ */\n+const MAX_QUERY_NAME_LENGTH       = 255;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84604301",
            "id": 84604301,
            "in_reply_to_id": 84600007,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjA0MzAx",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5371806,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84604301/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84604301",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606069"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606069"
                }
            },
            "author_association": "MEMBER",
            "body": "Just as an additional point, assuming `MAX_QUERY_NAME_LENGTH` is in octets (rather than absolute characters) and UTF-8 is used, certain languages can take up multiple bytes per character (e.g. anything from the CJK character set which take up 3/4 bytes per character). With 64 octets, that limits a purely Chinese name to 21 characters tops (which seems rather short).\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T21:55:58Z",
            "diff_hunk": "@@ -286,7 +286,10 @@ const FILE_ID_LENGTH              = 32;\n  */\n const MAX_FILENAME_LENGTH         = 255;\n \n-\n+/**\n+ * Max legnth of names queried by toxcore\n+ */\n+const MAX_QUERY_NAME_LENGTH       = 255;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606069",
            "id": 84606069,
            "in_reply_to_id": 84600007,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjA2MDY5",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5373177,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606069/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606069",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3128050?v=4",
                "events_url": "https://api.github.com/users/initramfs/events{/privacy}",
                "followers_url": "https://api.github.com/users/initramfs/followers",
                "following_url": "https://api.github.com/users/initramfs/following{/other_user}",
                "gists_url": "https://api.github.com/users/initramfs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/initramfs",
                "id": 3128050,
                "login": "initramfs",
                "node_id": "MDQ6VXNlcjMxMjgwNTA=",
                "organizations_url": "https://api.github.com/users/initramfs/orgs",
                "received_events_url": "https://api.github.com/users/initramfs/received_events",
                "repos_url": "https://api.github.com/users/initramfs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/initramfs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/initramfs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/initramfs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606477"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606477"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T22:12:19Z",
            "diff_hunk": "@@ -286,7 +286,10 @@ const FILE_ID_LENGTH              = 32;\n  */\n const MAX_FILENAME_LENGTH         = 255;\n \n-\n+/**\n+ * Max legnth of names queried by toxcore\n+ */\n+const MAX_QUERY_NAME_LENGTH       = 255;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606477",
            "id": 84606477,
            "in_reply_to_id": 84600007,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjA2NDc3",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5373552,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606477/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606478"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606478"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T22:12:23Z",
            "diff_hunk": "@@ -0,0 +1,58 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as approitate.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606478",
            "id": 84606478,
            "in_reply_to_id": 84593281,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjA2NDc4",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 3,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5373553,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606478/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606480"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606480"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T22:12:25Z",
            "diff_hunk": "@@ -0,0 +1,349 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as approitate.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606480",
            "id": 84606480,
            "in_reply_to_id": 84593244,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjA2NDgw",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 3,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5373555,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606480/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606682"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606682"
                }
            },
            "author_association": "MEMBER",
            "body": "ah right byte to char conversion, stupid me... Ok seems nice that way, but might be an issue for Chinese as pointed out by @initramfs \n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-23T22:23:51Z",
            "diff_hunk": "@@ -286,7 +286,10 @@ const FILE_ID_LENGTH              = 32;\n  */\n const MAX_FILENAME_LENGTH         = 255;\n \n-\n+/**\n+ * Max legnth of names queried by toxcore\n+ */\n+const MAX_QUERY_NAME_LENGTH       = 255;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84606682",
            "id": 84606682,
            "in_reply_to_id": 84600007,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjA2Njgy",
            "original_commit_id": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5373749,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606682/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84606682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8523159?v=4",
                "events_url": "https://api.github.com/users/SkyzohKey/events{/privacy}",
                "followers_url": "https://api.github.com/users/SkyzohKey/followers",
                "following_url": "https://api.github.com/users/SkyzohKey/following{/other_user}",
                "gists_url": "https://api.github.com/users/SkyzohKey/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/SkyzohKey",
                "id": 8523159,
                "login": "SkyzohKey",
                "node_id": "MDQ6VXNlcjg1MjMxNTk=",
                "organizations_url": "https://api.github.com/users/SkyzohKey/orgs",
                "received_events_url": "https://api.github.com/users/SkyzohKey/received_events",
                "repos_url": "https://api.github.com/users/SkyzohKey/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/SkyzohKey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SkyzohKey/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/SkyzohKey"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84611720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84611720"
                }
            },
            "author_association": "MEMBER",
            "body": "Need to check for error\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T01:33:49Z",
            "diff_hunk": "@@ -2609,6 +2609,9 @@ DHT *new_DHT(Logger *log, Networking_Core *net)\n         return NULL;\n     }\n \n+    dht->queries = query_new(dht->net);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84611720",
            "id": 84611720,
            "line": 2613,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjExNzIw",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 4,
            "original_start_line": null,
            "path": "toxcore/DHT.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84611720/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84611720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84611985"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84611985"
                }
            },
            "author_association": "MEMBER",
            "body": "This function increases the query_list size by 2, which isn't what the comment says it does. Comment is also confusing/redundant. It just needs to say \"Doubles the size of the queries array\".\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T01:41:36Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84611985",
            "id": 84611985,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjExOTg1",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 25,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84611985/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84611985",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84612022"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84612022"
                }
            },
            "author_association": "MEMBER",
            "body": "This function should take pointers rather than structs, and it needs an explanatory comment.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T01:42:59Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84612022",
            "id": 84612022,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjEyMDIy",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 40,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84612022/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84612022",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84612302"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84612302"
                }
            },
            "author_association": "MEMBER",
            "body": "Why are you casting these to `uint8_t *`? \n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T01:50:34Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84612302",
            "id": 84612302,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjEyMzAy",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 51,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84612302/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84612302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84613212"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84613212"
                }
            },
            "author_association": "MEMBER",
            "body": "This is strange. Why would you ever pass this function a -1? The value should be validated before calling the function (and it actually is upon further inspection).\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T02:11:11Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84613212",
            "id": 84613212,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjEzMjEy",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 123,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84613212/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84613212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616170"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616170"
                }
            },
            "author_association": "MEMBER",
            "body": "Why doesn't this return a pointer? and why doesn't it take ipp and key as pointers?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:12:41Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {\n+        return false;\n+    }\n+\n+    free(queries->query_list[loc].name);\n+    --queries->count;\n+\n+    if (loc == queries->count) {\n+        return true;\n+    }\n+\n+    memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(P_QUERY));\n+    return true;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          uint8_t type, const uint8_t *data, size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(DHT *dht, P_QUERY send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send.length)];\n+\n+    size_t written_size = q_build_pkt(send.key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send.name, send.length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send.length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send.ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static P_QUERY q_make(IP_Port ipp, const uint8_t key[TOX_PUBLIC_KEY_SIZE], const uint8_t *name, size_t length)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616170",
            "id": 84616170,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE2MTcw",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 183,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616170/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616212"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616212"
                }
            },
            "author_association": "MEMBER",
            "body": "calloc() needs to be error checked. Also you should use malloc() instead since you already zeroed the memory of new.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:13:54Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {\n+        return false;\n+    }\n+\n+    free(queries->query_list[loc].name);\n+    --queries->count;\n+\n+    if (loc == queries->count) {\n+        return true;\n+    }\n+\n+    memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(P_QUERY));\n+    return true;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          uint8_t type, const uint8_t *data, size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(DHT *dht, P_QUERY send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send.length)];\n+\n+    size_t written_size = q_build_pkt(send.key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send.name, send.length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send.length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send.ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static P_QUERY q_make(IP_Port ipp, const uint8_t key[TOX_PUBLIC_KEY_SIZE], const uint8_t *name, size_t length)\n+{\n+    P_QUERY new;\n+    memset(&new, 0, sizeof(P_QUERY));\n+\n+    new.ipp = ipp;\n+    id_copy(new.key, key);\n+    new.name = calloc(1, length);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616212",
            "id": 84616212,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE2MjEy",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 190,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616212/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616371"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616371"
                }
            },
            "author_association": "MEMBER",
            "body": "Why isn't pend a pointer?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:17:53Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616371",
            "id": 84616371,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE2Mzcx",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 68,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616371/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616391"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616391"
                }
            },
            "author_association": "MEMBER",
            "body": "Why isn't send a pointer?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:18:19Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {\n+        return false;\n+    }\n+\n+    free(queries->query_list[loc].name);\n+    --queries->count;\n+\n+    if (loc == queries->count) {\n+        return true;\n+    }\n+\n+    memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(P_QUERY));\n+    return true;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          uint8_t type, const uint8_t *data, size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(DHT *dht, P_QUERY send)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616391",
            "id": 84616391,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE2Mzkx",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 168,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616391/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616432"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616432"
                }
            },
            "author_association": "MEMBER",
            "body": "Why isn't pend a pointer?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:19:11Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616432",
            "id": 84616432,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE2NDMy",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 103,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616432/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616454"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616454"
                }
            },
            "author_association": "MEMBER",
            "body": "Why isn't source a pointer?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:19:32Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {\n+        return false;\n+    }\n+\n+    free(queries->query_list[loc].name);\n+    --queries->count;\n+\n+    if (loc == queries->count) {\n+        return true;\n+    }\n+\n+    memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(P_QUERY));\n+    return true;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          uint8_t type, const uint8_t *data, size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(DHT *dht, P_QUERY send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send.length)];\n+\n+    size_t written_size = q_build_pkt(send.key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send.name, send.length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send.length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send.ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static P_QUERY q_make(IP_Port ipp, const uint8_t key[TOX_PUBLIC_KEY_SIZE], const uint8_t *name, size_t length)\n+{\n+    P_QUERY new;\n+    memset(&new, 0, sizeof(P_QUERY));\n+\n+    new.ipp = ipp;\n+    id_copy(new.key, key);\n+    new.name = calloc(1, length);\n+    memcpy(new.name, name, length);\n+    new.length = length;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(Tox *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    P_QUERY new = q_make(ipp, key, name, length);\n+\n+    // Verify name isn't currently pending response\n+    if (q_check(m->dht->queries, new, 1) != -1) {\n+        return -2;\n+    }\n+\n+    // Send request\n+    if (q_send(m->dht, new) == 0) {\n+        if (q_add(m->dht->queries, new)) {\n+            return 0;\n+        }\n+\n+        return -3;\n+    }\n+\n+    return -4;\n+}\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84616454",
            "id": 84616454,
            "line": 247,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE2NDU0",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 265,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5378230,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616454/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84616454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1646057?v=4",
                "events_url": "https://api.github.com/users/JFreegman/events{/privacy}",
                "followers_url": "https://api.github.com/users/JFreegman/followers",
                "following_url": "https://api.github.com/users/JFreegman/following{/other_user}",
                "gists_url": "https://api.github.com/users/JFreegman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JFreegman",
                "id": 1646057,
                "login": "JFreegman",
                "node_id": "MDQ6VXNlcjE2NDYwNTc=",
                "organizations_url": "https://api.github.com/users/JFreegman/orgs",
                "received_events_url": "https://api.github.com/users/JFreegman/received_events",
                "repos_url": "https://api.github.com/users/JFreegman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JFreegman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JFreegman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JFreegman"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618153"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618153"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:54:32Z",
            "diff_hunk": "@@ -2609,6 +2609,9 @@ DHT *new_DHT(Logger *log, Networking_Core *net)\n         return NULL;\n     }\n \n+    dht->queries = query_new(dht->net);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618153",
            "id": 84618153,
            "in_reply_to_id": 84611720,
            "line": 2613,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE4MTUz",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 4,
            "original_start_line": null,
            "path": "toxcore/DHT.c",
            "position": null,
            "pull_request_review_id": 5384077,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618153/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618163"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618163"
                }
            },
            "author_association": "NONE",
            "body": "It used to double, then I decided I didn't like that idea. Fixed\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:54:48Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618163",
            "id": 84618163,
            "in_reply_to_id": 84611985,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE4MTYz",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 25,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5384077,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618163/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618212"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618212"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:55:56Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618212",
            "id": 84618212,
            "in_reply_to_id": 84612022,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE4MjEy",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 40,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5384077,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618212/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618225"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618225"
                }
            },
            "author_association": "NONE",
            "body": "Because I was getting a compiler warning about them in the previous version. However now I'm not so I've reverted that change.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:56:09Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618225",
            "id": 84618225,
            "in_reply_to_id": 84612302,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE4MjI1",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 51,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5384077,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618225/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618225",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618307"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618307"
                }
            },
            "author_association": "NONE",
            "body": "fixed by removing the malloc all together.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:57:58Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {\n+        return false;\n+    }\n+\n+    free(queries->query_list[loc].name);\n+    --queries->count;\n+\n+    if (loc == queries->count) {\n+        return true;\n+    }\n+\n+    memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(P_QUERY));\n+    return true;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          uint8_t type, const uint8_t *data, size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(DHT *dht, P_QUERY send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send.length)];\n+\n+    size_t written_size = q_build_pkt(send.key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send.name, send.length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send.length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send.ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static P_QUERY q_make(IP_Port ipp, const uint8_t key[TOX_PUBLIC_KEY_SIZE], const uint8_t *name, size_t length)\n+{\n+    P_QUERY new;\n+    memset(&new, 0, sizeof(P_QUERY));\n+\n+    new.ipp = ipp;\n+    id_copy(new.key, key);\n+    new.name = calloc(1, length);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618307",
            "id": 84618307,
            "in_reply_to_id": 84616212,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE4MzA3",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 190,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5384077,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618307/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618313"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618313"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T03:58:07Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {\n+        return false;\n+    }\n+\n+    free(queries->query_list[loc].name);\n+    --queries->count;\n+\n+    if (loc == queries->count) {\n+        return true;\n+    }\n+\n+    memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(P_QUERY));\n+    return true;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          uint8_t type, const uint8_t *data, size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(DHT *dht, P_QUERY send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send.length)];\n+\n+    size_t written_size = q_build_pkt(send.key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send.name, send.length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send.length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send.ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static P_QUERY q_make(IP_Port ipp, const uint8_t key[TOX_PUBLIC_KEY_SIZE], const uint8_t *name, size_t length)\n+{\n+    P_QUERY new;\n+    memset(&new, 0, sizeof(P_QUERY));\n+\n+    new.ipp = ipp;\n+    id_copy(new.key, key);\n+    new.name = calloc(1, length);\n+    memcpy(new.name, name, length);\n+    new.length = length;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(Tox *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    P_QUERY new = q_make(ipp, key, name, length);\n+\n+    // Verify name isn't currently pending response\n+    if (q_check(m->dht->queries, new, 1) != -1) {\n+        return -2;\n+    }\n+\n+    // Send request\n+    if (q_send(m->dht, new) == 0) {\n+        if (q_add(m->dht->queries, new)) {\n+            return 0;\n+        }\n+\n+        return -3;\n+    }\n+\n+    return -4;\n+}\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84618313",
            "id": 84618313,
            "in_reply_to_id": 84616454,
            "line": 247,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NjE4MzEz",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 265,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5384077,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618313/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84618313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84713178"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713178"
                }
            },
            "author_association": "MEMBER",
            "body": "Perhaps add a `NET_PACKET_TYPE_MAX = 255` and put that \"Must never exceed\" comment on it. Also, no need to shout at the reader.\n\nAlso, this change is unrelated to tox-named, but makes sense. Can you make a separate PR with just this change and reasoning about why this change is good?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:26:37Z",
            "diff_hunk": "@@ -102,34 +102,39 @@ typedef int sock_t;\n \n #define MAX_UDP_PACKET_SIZE 2048\n \n-#define NET_PACKET_PING_REQUEST    0   /* Ping request packet ID. */\n-#define NET_PACKET_PING_RESPONSE   1   /* Ping response packet ID. */\n-#define NET_PACKET_GET_NODES       2   /* Get nodes request packet ID. */\n-#define NET_PACKET_SEND_NODES_IPV6 4   /* Send nodes response packet ID for other addresses. */\n-#define NET_PACKET_COOKIE_REQUEST  24  /* Cookie request packet */\n-#define NET_PACKET_COOKIE_RESPONSE 25  /* Cookie response packet */\n-#define NET_PACKET_CRYPTO_HS       26  /* Crypto handshake packet */\n-#define NET_PACKET_CRYPTO_DATA     27  /* Crypto data packet */\n-#define NET_PACKET_CRYPTO          32  /* Encrypted data packet ID. */\n-#define NET_PACKET_LAN_DISCOVERY   33  /* LAN discovery packet ID. */\n-\n-/* See:  docs/Prevent_Tracking.txt and onion.{c, h} */\n-#define NET_PACKET_ONION_SEND_INITIAL 128\n-#define NET_PACKET_ONION_SEND_1 129\n-#define NET_PACKET_ONION_SEND_2 130\n-\n-#define NET_PACKET_ANNOUNCE_REQUEST 131\n-#define NET_PACKET_ANNOUNCE_RESPONSE 132\n-#define NET_PACKET_ONION_DATA_REQUEST 133\n-#define NET_PACKET_ONION_DATA_RESPONSE 134\n-\n-#define NET_PACKET_ONION_RECV_3 140\n-#define NET_PACKET_ONION_RECV_2 141\n-#define NET_PACKET_ONION_RECV_1 142\n-\n-/* Only used for bootstrap nodes */\n-#define BOOTSTRAP_INFO_PACKET_ID 240\n-\n+/* MUST NEVER EXCEED UINT8_MAX */\n+typedef enum NET_PACKET_TYPE {\n+    NET_PACKET_PING_REQUEST     = 0,   /* Ping request packet ID. */\n+    NET_PACKET_PING_RESPONSE    = 1,   /* Ping response packet ID. */\n+    NET_PACKET_GET_NODES        = 2,   /* Get nodes request packet ID. */\n+    NET_PACKET_SEND_NODES_IPV6  = 4,   /* Send nodes response packet ID for other addresses. */\n+    NET_PACKET_COOKIE_REQUEST   = 24,  /* Cookie request packet */\n+    NET_PACKET_COOKIE_RESPONSE  = 25,  /* Cookie response packet */\n+    NET_PACKET_CRYPTO_HS        = 26,  /* Crypto handshake packet */\n+    NET_PACKET_CRYPTO_DATA      = 27,  /* Crypto data packet */\n+    NET_PACKET_CRYPTO           = 32,  /* Encrypted data packet ID. */\n+    NET_PACKET_LAN_DISCOVERY    = 33,  /* LAN discovery packet ID. */\n+\n+    NET_PACKET_DATA_REQUEST     = 50,\n+    NET_PACKET_DATA_RESPONSE    = 51,\n+\n+    /* See:  docs/Prevent_Tracking.txt and onion.{c, h} */\n+    NET_PACKET_ONION_SEND_INITIAL   = 128,\n+    NET_PACKET_ONION_SEND_1         = 129,\n+    NET_PACKET_ONION_SEND_2         = 130,\n+\n+    NET_PACKET_ANNOUNCE_REQUEST     = 131,\n+    NET_PACKET_ANNOUNCE_RESPONSE    = 132,\n+    NET_PACKET_ONION_DATA_REQUEST   = 133,\n+    NET_PACKET_ONION_DATA_RESPONSE  = 134,\n+\n+    NET_PACKET_ONION_RECV_3 = 140,\n+    NET_PACKET_ONION_RECV_2 = 141,\n+    NET_PACKET_ONION_RECV_1 = 142,\n+\n+    /* Only used for bootstrap nodes */\n+    BOOTSTRAP_INFO_PACKET_ID = 240,",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84713178",
            "id": 84713178,
            "line": 136,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzEzMTc4",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 63,
            "original_start_line": null,
            "path": "toxcore/network.h",
            "position": 63,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713178/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713178",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84713573"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713573"
                }
            },
            "author_association": "MEMBER",
            "body": "Am I missing a commit? Where is it done?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:28:13Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {\n+        return false;\n+    }\n+\n+    free(queries->query_list[loc].name);\n+    --queries->count;\n+\n+    if (loc == queries->count) {\n+        return true;\n+    }\n+\n+    memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(P_QUERY));\n+    return true;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          uint8_t type, const uint8_t *data, size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(DHT *dht, P_QUERY send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send.length)];\n+\n+    size_t written_size = q_build_pkt(send.key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send.name, send.length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send.length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send.ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static P_QUERY q_make(IP_Port ipp, const uint8_t key[TOX_PUBLIC_KEY_SIZE], const uint8_t *name, size_t length)\n+{\n+    P_QUERY new;\n+    memset(&new, 0, sizeof(P_QUERY));\n+\n+    new.ipp = ipp;\n+    id_copy(new.key, key);\n+    new.name = calloc(1, length);\n+    memcpy(new.name, name, length);\n+    new.length = length;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(Tox *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    P_QUERY new = q_make(ipp, key, name, length);\n+\n+    // Verify name isn't currently pending response\n+    if (q_check(m->dht->queries, new, 1) != -1) {\n+        return -2;\n+    }\n+\n+    // Send request\n+    if (q_send(m->dht, new) == 0) {\n+        if (q_add(m->dht->queries, new)) {\n+            return 0;\n+        }\n+\n+        return -3;\n+    }\n+\n+    return -4;\n+}\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84713573",
            "id": 84713573,
            "in_reply_to_id": 84616454,
            "line": 247,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzEzNTcz",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 265,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713573/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84713925"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713925"
                }
            },
            "author_association": "MEMBER",
            "body": "Violation of naming conventions (do we even have those?). We rarely (or never?) have `ALL_CAPS` type names. These are not macro names. Also, what does P stand for? If it stands for PENDING, then why is it abbreviated here but not below?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:29:49Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef TOX_QUERY_H\n+#define TOX_QUERY_H\n+\n+#include \"network.h\"\n+#include \"tox.h\"\n+\n+#define QUERY_TIMEOUT 500\n+\n+typedef struct {\n+    IP_Port  ipp;\n+    uint8_t  key[TOX_PUBLIC_KEY_SIZE];\n+    uint8_t  name[TOX_QUERY_MAX_NAME_SIZE];\n+    size_t  length;\n+\n+    uint64_t query_nonce;\n+\n+    uint8_t  tries_remaining;\n+    uint64_t next_timeout;\n+} P_QUERY;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84713925",
            "id": 84713925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzEzOTI1",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 24,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713925/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84713925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84714967"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84714967"
                }
            },
            "author_association": "MEMBER",
            "body": "We need to talk about this. Traditionally, we don't include headers from layers above us. Perhaps you can suggest a way to achieve your goal without introducing (additional) cyclic dependencies?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:33:48Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef TOX_QUERY_H\n+#define TOX_QUERY_H\n+\n+#include \"network.h\"\n+#include \"tox.h\"",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84714967",
            "id": 84714967,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE0OTY3",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 10,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84714967/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84714967",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84715225"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715225"
                }
            },
            "author_association": "MEMBER",
            "body": "It's not `tox_query.h`.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:34:56Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef TOX_QUERY_H\n+#define TOX_QUERY_H",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84715225",
            "id": 84715225,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE1MjI1",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 7,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715225/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715225",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84715291"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715291"
                }
            },
            "author_association": "MEMBER",
            "body": "Redundant information?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:35:15Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84715291",
            "id": 84715291,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE1Mjkx",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 1,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715291/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715291",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84715528"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715528"
                }
            },
            "author_association": "MEMBER",
            "body": "Does astyle not fix this? Anyway: always add a newline at EOF, _especially_ in header files. This is not pedantic, this can and does break code in strange ways. Set your editor to always add NL at EOF.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:36:21Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef TOX_QUERY_H\n+#define TOX_QUERY_H\n+\n+#include \"network.h\"\n+#include \"tox.h\"\n+\n+#define QUERY_TIMEOUT 500\n+\n+typedef struct {\n+    IP_Port  ipp;\n+    uint8_t  key[TOX_PUBLIC_KEY_SIZE];\n+    uint8_t  name[TOX_QUERY_MAX_NAME_SIZE];\n+    size_t  length;\n+\n+    uint64_t query_nonce;\n+\n+    uint8_t  tries_remaining;\n+    uint64_t next_timeout;\n+} P_QUERY;\n+\n+typedef struct {\n+    size_t size;\n+    size_t count;\n+    P_QUERY *query_list;\n+\n+    tox_query_response_cb *query_response;\n+    void *query_response_object;\n+\n+} PENDING_QUERIES;\n+\n+/** query_send_request\n+ *\n+ */\n+int query_send_request(Tox *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length);\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata);\n+\n+/**\n+ * Generate a new query object\n+ */\n+PENDING_QUERIES *query_new(Networking_Core *net);\n+\n+/**\n+ * Process/iterate pending queries.\n+ *\n+ * void *object should always be a DHT *object. but I'm unablet to include DHT.h in this file\n+ *              because the DHT sturct must contain a PENDING_QUERIES struct.\n+ */\n+void query_iterate(void *object);\n+\n+#endif",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84715528",
            "id": 84715528,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE1NTI4",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 57,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715528/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84715792"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715792"
                }
            },
            "author_association": "MEMBER",
            "body": "Two empty lines before separator block comment. Also, perhaps align `=` with the one above.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:37:38Z",
            "diff_hunk": "@@ -286,7 +286,10 @@ const FILE_ID_LENGTH              = 32;\n  */\n const MAX_FILENAME_LENGTH         = 255;\n \n-\n+/**\n+ * Max size (in bytes) of names queried by toxcore\n+ */\n+const QUERY_MAX_NAME_SIZE       = 255;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84715792",
            "id": 84715792,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE1Nzky",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715792/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84715792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716080"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716080"
                }
            },
            "author_association": "MEMBER",
            "body": "Missing comment for `name`.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:39:00Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716080",
            "id": 84716080,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE2MDgw",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 26,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716080/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716199"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716199"
                }
            },
            "author_association": "MEMBER",
            "body": "- PUBKEY is not a defined term, nor is TOXID.\n- Add `.` at EOL.\n- \"IP port\" is unclear.\n- Actually I don't understand this sentence at all.\n- `$name` is unresolved. Parameters are not renamed in apidsl, so no need to use references.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:39:35Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716199",
            "id": 84716199,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE2MTk5",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 19,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716199/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716557"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716557"
                }
            },
            "author_association": "MEMBER",
            "body": "- Remove `,`, lowercase `Address`.\n- Does this not do DNS lookups? Perhaps be explicit about that. Also, what is the syntax for IPv6 addresses?\n- `@param`, not just `param`.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:41:10Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716557",
            "id": 84716557,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE2NTU3",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 24,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716557/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716775"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716775"
                }
            },
            "author_association": "MEMBER",
            "body": "These are two sentences without punctuation. The first sentence stops at \"kind\".\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:42:00Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address\n+     * passed was invalid.\n+     */\n+    BAD_HOST,\n+    /**\n+     * The port passed was invalid. The valid port range is (1, 65535).\n+     */\n+    BAD_PORT,\n+    /**\n+     * There is an existing request at this address with this name.\n+     */\n+    PENDING,\n+    /**\n+     * Unable to malloc and save this query.\n+     */\n+    MALLOC,\n+    /**\n+     * Unknown error of some kind this indicates an error in toxcore.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716775",
            "id": 84716775,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE2Nzc1",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 50,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716775/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716857"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716857"
                }
            },
            "author_association": "MEMBER",
            "body": "Whether `malloc` or another allocator is used is irrelevant.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:42:19Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address\n+     * passed was invalid.\n+     */\n+    BAD_HOST,\n+    /**\n+     * The port passed was invalid. The valid port range is (1, 65535).\n+     */\n+    BAD_PORT,\n+    /**\n+     * There is an existing request at this address with this name.\n+     */\n+    PENDING,\n+    /**\n+     * Unable to malloc and save this query.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84716857",
            "id": 84716857,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE2ODU3",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 46,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716857/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84716857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84717040"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717040"
                }
            },
            "author_association": "MEMBER",
            "body": "Apparently it resolves addresses. Mention this above. Disregard my question above.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:43:07Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84717040",
            "id": 84717040,
            "line": 767,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE3MDQw",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 33,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": 35,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717040/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84717149"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717149"
                }
            },
            "author_association": "MEMBER",
            "body": "- \"by toxcore\" is redundant. What else could invoke it?\n- \"received\"\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:43:30Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address\n+     * passed was invalid.\n+     */\n+    BAD_HOST,\n+    /**\n+     * The port passed was invalid. The valid port range is (1, 65535).\n+     */\n+    BAD_PORT,\n+    /**\n+     * There is an existing request at this address with this name.\n+     */\n+    PENDING,\n+    /**\n+     * Unable to malloc and save this query.\n+     */\n+    MALLOC,\n+    /**\n+     * Unknown error of some kind this indicates an error in toxcore.\n+     */\n+    UNKNOWN,\n+  }\n+\n+  event response const {\n+    /**\n+     * This callback will be invoked by toxcore when a response from a pending query was recived.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84717149",
            "id": 84717149,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE3MTQ5",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 57,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717149/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84717305"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717305"
                }
            },
            "author_association": "MEMBER",
            "body": "\"received\"\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:44:11Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address\n+     * passed was invalid.\n+     */\n+    BAD_HOST,\n+    /**\n+     * The port passed was invalid. The valid port range is (1, 65535).\n+     */\n+    BAD_PORT,\n+    /**\n+     * There is an existing request at this address with this name.\n+     */\n+    PENDING,\n+    /**\n+     * Unable to malloc and save this query.\n+     */\n+    MALLOC,\n+    /**\n+     * Unknown error of some kind this indicates an error in toxcore.\n+     */\n+    UNKNOWN,\n+  }\n+\n+  event response const {\n+    /**\n+     * This callback will be invoked by toxcore when a response from a pending query was recived.\n+     * Once this callback is recived, the query will have already been removed.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84717305",
            "id": 84717305,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE3MzA1",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 58,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717305/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84717990"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717990"
                }
            },
            "author_association": "MEMBER",
            "body": "This function always fails.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:47:04Z",
            "diff_hunk": "@@ -442,6 +442,73 @@ bool tox_add_tcp_relay(Tox *tox, const char *address, uint16_t port, const uint8\n     return 0;\n }\n \n+\n+\n+/**\n+ * Queries the server at IP port, with PUBKEY, for the TOXID at <unresolved>\n+ *\n+ * param address the IPv4, or IPv6 Address for the server.\n+ * param port the port the server is listening on.\n+ * param public_key the long term public key for the name server.\n+ * @return true on success.\n+ */\n+bool tox_query_request(Tox *tox, const char *address, uint16_t port, const uint8_t *public_key, const uint8_t *name,\n+                       size_t length, TOX_ERR_QUERY_REQUEST *error)\n+{\n+    if (!address || !name || !length) {\n+        SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_NULL);\n+        return false;\n+    }\n+\n+    if (port == 0) {\n+        SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_BAD_PORT);\n+        return false;\n+    }\n+\n+    switch (query_send_request(tox, address, port, public_key, name, length)) {\n+        case 0: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_OK);\n+            return true;\n+        }\n+\n+        case -1: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_BAD_HOST);\n+            return false;\n+        }\n+\n+        case -2: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_PENDING);\n+            return false;\n+        }\n+\n+        case -3: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_MALLOC);\n+            return false;\n+        }\n+\n+        case -4: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_UNKNOWN);\n+            return false;\n+        }\n+    }\n+\n+\n+    SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_UNKNOWN);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84717990",
            "id": 84717990,
            "line": 498,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE3OTkw",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 55,
            "original_start_line": null,
            "path": "toxcore/tox.c",
            "position": 64,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717990/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84717990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84718155"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84718155"
                }
            },
            "author_association": "MEMBER",
            "body": "Implement this function.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-24T15:47:43Z",
            "diff_hunk": "@@ -309,6 +309,13 @@ uint32_t tox_file_id_length(void);\n \n uint32_t tox_max_filename_length(void);\n \n+/**\n+ * Max size (in bytes) of names queried by toxcore\n+ */\n+#define TOX_QUERY_MAX_NAME_SIZE        255\n+\n+uint32_t tox_query_max_name_size(void);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84718155",
            "id": 84718155,
            "line": 317,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0NzE4MTU1",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 9,
            "original_start_line": null,
            "path": "toxcore/tox.h",
            "position": 9,
            "pull_request_review_id": 5473329,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84718155/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84718155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84873063"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84873063"
                }
            },
            "author_association": "MEMBER",
            "body": "Also missing `@param` instead of `param` here.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-25T10:27:50Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r84873063",
            "id": 84873063,
            "in_reply_to_id": 84716080,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg0ODczMDYz",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 26,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5621972,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84873063/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/84873063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8523159?v=4",
                "events_url": "https://api.github.com/users/SkyzohKey/events{/privacy}",
                "followers_url": "https://api.github.com/users/SkyzohKey/followers",
                "following_url": "https://api.github.com/users/SkyzohKey/following{/other_user}",
                "gists_url": "https://api.github.com/users/SkyzohKey/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/SkyzohKey",
                "id": 8523159,
                "login": "SkyzohKey",
                "node_id": "MDQ6VXNlcjg1MjMxNTk=",
                "organizations_url": "https://api.github.com/users/SkyzohKey/orgs",
                "received_events_url": "https://api.github.com/users/SkyzohKey/received_events",
                "repos_url": "https://api.github.com/users/SkyzohKey/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/SkyzohKey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SkyzohKey/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/SkyzohKey"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85056718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85056718"
                }
            },
            "author_association": "NONE",
            "body": "@iphydf you're not missing a commit, I submitted all my response and decided to write one more test. When I did, I started getting segfaults. The problem was network returns an IP_Port struct, not a pointer.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T06:33:30Z",
            "diff_hunk": "@@ -0,0 +1,347 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload_size) ( 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload_size + crypto_box_MACBYTES)\n+\n+/**\n+ * Will realloc *queries to double the size of the current count.\n+ */\n+static bool q_grow(PENDING_QUERIES *queries)\n+{\n+    size_t size = queries->count + 2;\n+    P_QUERY *new = realloc(queries->query_list, size * sizeof(P_QUERY));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+static bool q_verify_server(IP_Port existing, IP_Port pending)\n+{\n+    if (existing.port != pending.port) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family != pending.ip.family) {\n+        return false;\n+    }\n+\n+    if (existing.ip.family == AF_INET) {\n+        if (memcmp((uint8_t *)&existing.ip.ip4.in_addr, (uint8_t *)&pending.ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp((uint8_t *)&existing.ip.ip6.in6_addr, (uint8_t *)&pending.ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the P_QUERY on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(PENDING_QUERIES *queries, P_QUERY pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        P_QUERY test = queries->query_list[i];\n+\n+        if (!q_verify_server(test.ipp, pend.ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test.key, pend.key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test.length != pend.length) {\n+                continue;\n+            }\n+\n+            if (memcmp(test.name, pend.name, test.length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+static bool q_add(PENDING_QUERIES *queries, P_QUERY pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    queries->query_list[queries->count] = pend;\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** q_find_and_drop\n+ *\n+ * checks for a response in the pending queries list, if it exists, it'll drop it from the list.\n+ */\n+static bool q_drop(PENDING_QUERIES *queries, size_t loc)\n+{\n+    if (loc == -1) {\n+        return false;\n+    }\n+\n+    free(queries->query_list[loc].name);\n+    --queries->count;\n+\n+    if (loc == queries->count) {\n+        return true;\n+    }\n+\n+    memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(P_QUERY));\n+    return true;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          uint8_t type, const uint8_t *data, size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(DHT *dht, P_QUERY send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send.length)];\n+\n+    size_t written_size = q_build_pkt(send.key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send.name, send.length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send.length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send.ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static P_QUERY q_make(IP_Port ipp, const uint8_t key[TOX_PUBLIC_KEY_SIZE], const uint8_t *name, size_t length)\n+{\n+    P_QUERY new;\n+    memset(&new, 0, sizeof(P_QUERY));\n+\n+    new.ipp = ipp;\n+    id_copy(new.key, key);\n+    new.name = calloc(1, length);\n+    memcpy(new.name, name, length);\n+    new.length = length;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(Tox *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    P_QUERY new = q_make(ipp, key, name, length);\n+\n+    // Verify name isn't currently pending response\n+    if (q_check(m->dht->queries, new, 1) != -1) {\n+        return -2;\n+    }\n+\n+    // Send request\n+    if (q_send(m->dht, new) == 0) {\n+        if (q_add(m->dht->queries, new)) {\n+            return 0;\n+        }\n+\n+        return -3;\n+    }\n+\n+    return -4;\n+}\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85056718",
            "id": 85056718,
            "in_reply_to_id": 84616454,
            "line": 247,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDU2NzE4",
            "original_commit_id": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "original_line": null,
            "original_position": 265,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 5794057,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85056718/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85056718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85058550"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85058550"
                }
            },
            "author_association": "NONE",
            "body": "this is a habit I picked up after I removed tabs from my editor. It might be redundant, but it's not harmful, so without a better argument, I'm not planing on removing it.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T06:50:11Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85058550",
            "id": 85058550,
            "in_reply_to_id": 84715291,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDU4NTUw",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 1,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85058550/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85058550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85059381"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85059381"
                }
            },
            "author_association": "NONE",
            "body": "Switched to `Query`\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T06:58:24Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef TOX_QUERY_H\n+#define TOX_QUERY_H\n+\n+#include \"network.h\"\n+#include \"tox.h\"\n+\n+#define QUERY_TIMEOUT 500\n+\n+typedef struct {\n+    IP_Port  ipp;\n+    uint8_t  key[TOX_PUBLIC_KEY_SIZE];\n+    uint8_t  name[TOX_QUERY_MAX_NAME_SIZE];\n+    size_t  length;\n+\n+    uint64_t query_nonce;\n+\n+    uint8_t  tries_remaining;\n+    uint64_t next_timeout;\n+} P_QUERY;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85059381",
            "id": 85059381,
            "in_reply_to_id": 84713925,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDU5Mzgx",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 24,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85059381/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85059381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85059740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85059740"
                }
            },
            "author_association": "NONE",
            "body": "fixed\n\nout of curiosity, can you give an example of when/how it would break stuff?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:01:48Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef TOX_QUERY_H\n+#define TOX_QUERY_H\n+\n+#include \"network.h\"\n+#include \"tox.h\"\n+\n+#define QUERY_TIMEOUT 500\n+\n+typedef struct {\n+    IP_Port  ipp;\n+    uint8_t  key[TOX_PUBLIC_KEY_SIZE];\n+    uint8_t  name[TOX_QUERY_MAX_NAME_SIZE];\n+    size_t  length;\n+\n+    uint64_t query_nonce;\n+\n+    uint8_t  tries_remaining;\n+    uint64_t next_timeout;\n+} P_QUERY;\n+\n+typedef struct {\n+    size_t size;\n+    size_t count;\n+    P_QUERY *query_list;\n+\n+    tox_query_response_cb *query_response;\n+    void *query_response_object;\n+\n+} PENDING_QUERIES;\n+\n+/** query_send_request\n+ *\n+ */\n+int query_send_request(Tox *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length);\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata);\n+\n+/**\n+ * Generate a new query object\n+ */\n+PENDING_QUERIES *query_new(Networking_Core *net);\n+\n+/**\n+ * Process/iterate pending queries.\n+ *\n+ * void *object should always be a DHT *object. but I'm unablet to include DHT.h in this file\n+ *              because the DHT sturct must contain a PENDING_QUERIES struct.\n+ */\n+void query_iterate(void *object);\n+\n+#endif",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85059740",
            "id": 85059740,
            "in_reply_to_id": 84715528,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDU5NzQw",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 57,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85059740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85059740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060048"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060048"
                }
            },
            "author_association": "NONE",
            "body": "I don't know what you mean by two empty lines before a block comment, this is formatted like the rest above it. Do you want me to change all lines above as well?\n\nalignment is fixed\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:04:47Z",
            "diff_hunk": "@@ -286,7 +286,10 @@ const FILE_ID_LENGTH              = 32;\n  */\n const MAX_FILENAME_LENGTH         = 255;\n \n-\n+/**\n+ * Max size (in bytes) of names queried by toxcore\n+ */\n+const QUERY_MAX_NAME_SIZE       = 255;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060048",
            "id": 85060048,
            "in_reply_to_id": 84715792,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwMDQ4",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060048/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060292"
                }
            },
            "author_association": "NONE",
            "body": "fixed?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:06:44Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060292",
            "id": 85060292,
            "in_reply_to_id": 84716199,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwMjky",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 19,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060292/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060538"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060538"
                }
            },
            "author_association": "NONE",
            "body": "added\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:08:36Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060538",
            "id": 85060538,
            "in_reply_to_id": 84716080,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwNTM4",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 26,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060538/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060540"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060540"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:08:37Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060540",
            "id": 85060540,
            "in_reply_to_id": 84716557,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwNTQw",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 24,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060540/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060540",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060633"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060633"
                }
            },
            "author_association": "NONE",
            "body": "fixed\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:09:24Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address\n+     * passed was invalid.\n+     */\n+    BAD_HOST,\n+    /**\n+     * The port passed was invalid. The valid port range is (1, 65535).\n+     */\n+    BAD_PORT,\n+    /**\n+     * There is an existing request at this address with this name.\n+     */\n+    PENDING,\n+    /**\n+     * Unable to malloc and save this query.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060633",
            "id": 85060633,
            "in_reply_to_id": 84716857,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwNjMz",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 46,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060633/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060682"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060682"
                }
            },
            "author_association": "NONE",
            "body": "fixed\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:09:54Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address\n+     * passed was invalid.\n+     */\n+    BAD_HOST,\n+    /**\n+     * The port passed was invalid. The valid port range is (1, 65535).\n+     */\n+    BAD_PORT,\n+    /**\n+     * There is an existing request at this address with this name.\n+     */\n+    PENDING,\n+    /**\n+     * Unable to malloc and save this query.\n+     */\n+    MALLOC,\n+    /**\n+     * Unknown error of some kind this indicates an error in toxcore.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060682",
            "id": 85060682,
            "in_reply_to_id": 84716775,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwNjgy",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 50,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060682/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060742"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060742"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:10:27Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address\n+     * passed was invalid.\n+     */\n+    BAD_HOST,\n+    /**\n+     * The port passed was invalid. The valid port range is (1, 65535).\n+     */\n+    BAD_PORT,\n+    /**\n+     * There is an existing request at this address with this name.\n+     */\n+    PENDING,\n+    /**\n+     * Unable to malloc and save this query.\n+     */\n+    MALLOC,\n+    /**\n+     * Unknown error of some kind this indicates an error in toxcore.\n+     */\n+    UNKNOWN,\n+  }\n+\n+  event response const {\n+    /**\n+     * This callback will be invoked by toxcore when a response from a pending query was recived.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060742",
            "id": 85060742,
            "in_reply_to_id": 84717149,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwNzQy",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 57,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060742/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060745"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060745"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:10:28Z",
            "diff_hunk": "@@ -742,6 +745,53 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at IP port, with PUBKEY, for the TOXID at $name\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * param address the IPv4, or IPv6 Address for the server.\n+   * param port the port the server is listening on.\n+   * param public_key the long term public key for the name server.\n+   * @return true on success.\n+   */\n+  bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n+    const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n+    NULL,\n+    /**\n+     * The address could not be resolved to an IP address, or the IP address\n+     * passed was invalid.\n+     */\n+    BAD_HOST,\n+    /**\n+     * The port passed was invalid. The valid port range is (1, 65535).\n+     */\n+    BAD_PORT,\n+    /**\n+     * There is an existing request at this address with this name.\n+     */\n+    PENDING,\n+    /**\n+     * Unable to malloc and save this query.\n+     */\n+    MALLOC,\n+    /**\n+     * Unknown error of some kind this indicates an error in toxcore.\n+     */\n+    UNKNOWN,\n+  }\n+\n+  event response const {\n+    /**\n+     * This callback will be invoked by toxcore when a response from a pending query was recived.\n+     * Once this callback is recived, the query will have already been removed.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060745",
            "id": 85060745,
            "in_reply_to_id": 84717305,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwNzQ1",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 58,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060745/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060987"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060987"
                }
            },
            "author_association": "NONE",
            "body": "done\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:12:39Z",
            "diff_hunk": "@@ -309,6 +309,13 @@ uint32_t tox_file_id_length(void);\n \n uint32_t tox_max_filename_length(void);\n \n+/**\n+ * Max size (in bytes) of names queried by toxcore\n+ */\n+#define TOX_QUERY_MAX_NAME_SIZE        255\n+\n+uint32_t tox_query_max_name_size(void);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85060987",
            "id": 85060987,
            "in_reply_to_id": 84718155,
            "line": 317,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYwOTg3",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 9,
            "original_start_line": null,
            "path": "toxcore/tox.h",
            "position": 9,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060987/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85060987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85061106"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061106"
                }
            },
            "author_association": "NONE",
            "body": "fixed\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:13:37Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef TOX_QUERY_H\n+#define TOX_QUERY_H",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85061106",
            "id": 85061106,
            "in_reply_to_id": 84715225,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYxMTA2",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 7,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061106/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85061131"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061131"
                }
            },
            "author_association": "NONE",
            "body": "fixed\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:13:46Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef TOX_QUERY_H\n+#define TOX_QUERY_H\n+\n+#include \"network.h\"\n+#include \"tox.h\"",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85061131",
            "id": 85061131,
            "in_reply_to_id": 84714967,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYxMTMx",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 10,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061131/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85061181"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061181"
                }
            },
            "author_association": "NONE",
            "body": "what do you mean?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-26T07:14:13Z",
            "diff_hunk": "@@ -442,6 +442,73 @@ bool tox_add_tcp_relay(Tox *tox, const char *address, uint16_t port, const uint8\n     return 0;\n }\n \n+\n+\n+/**\n+ * Queries the server at IP port, with PUBKEY, for the TOXID at <unresolved>\n+ *\n+ * param address the IPv4, or IPv6 Address for the server.\n+ * param port the port the server is listening on.\n+ * param public_key the long term public key for the name server.\n+ * @return true on success.\n+ */\n+bool tox_query_request(Tox *tox, const char *address, uint16_t port, const uint8_t *public_key, const uint8_t *name,\n+                       size_t length, TOX_ERR_QUERY_REQUEST *error)\n+{\n+    if (!address || !name || !length) {\n+        SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_NULL);\n+        return false;\n+    }\n+\n+    if (port == 0) {\n+        SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_BAD_PORT);\n+        return false;\n+    }\n+\n+    switch (query_send_request(tox, address, port, public_key, name, length)) {\n+        case 0: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_OK);\n+            return true;\n+        }\n+\n+        case -1: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_BAD_HOST);\n+            return false;\n+        }\n+\n+        case -2: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_PENDING);\n+            return false;\n+        }\n+\n+        case -3: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_MALLOC);\n+            return false;\n+        }\n+\n+        case -4: {\n+            SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_UNKNOWN);\n+            return false;\n+        }\n+    }\n+\n+\n+    SET_ERROR_PARAMETER(error, TOX_ERR_QUERY_REQUEST_UNKNOWN);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85061181",
            "id": 85061181,
            "in_reply_to_id": 84717990,
            "line": 498,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDYxMTgx",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 55,
            "original_start_line": null,
            "path": "toxcore/tox.c",
            "position": 64,
            "pull_request_review_id": 5795766,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061181/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85061181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85324639"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324639"
                }
            },
            "author_association": "MEMBER",
            "body": "Is something inside the DHT depending on query? Would it otherwise make sense to create a new module with the query stuff in it?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:22:27Z",
            "diff_hunk": "@@ -154,7 +154,9 @@ add_module(toxdht\n   toxcore/ping.c\n   toxcore/ping.h\n   toxcore/ping_array.c\n-  toxcore/ping_array.h)\n+  toxcore/ping_array.h\n+  toxcore/query.c",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85324639",
            "id": 85324639,
            "line": 158,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI0NjM5",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 6,
            "original_start_line": null,
            "path": "CMakeLists.txt",
            "position": 6,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324639/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85324736"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324736"
                }
            },
            "author_association": "MEMBER",
            "body": "Add newline after `{` and use hanging indentation instead of alignment.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:23:00Z",
            "diff_hunk": "@@ -0,0 +1,396 @@\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include <check.h>\n+\n+#include \"../toxcore/DHT.h\"\n+// #include \"../toxcore/DHT.c\"\n+#include \"../toxcore/tox.h\"\n+#include \"../toxcore/Messenger.h\"\n+#include \"../toxcore/query.c\"\n+\n+#include \"helpers.h\"\n+\n+#if defined(_WIN32) || defined(__WIN32__) || defined (WIN32)\n+#include <windows.h>\n+#define c_sleep(x) Sleep(1*x)\n+#else\n+#include <unistd.h>\n+#define c_sleep(x) usleep(1000*x)\n+#endif\n+\n+static unsigned int response_cookie = 348394;\n+static uint8_t name[] = \"requested_user.this_domain.tld\";\n+static size_t name_length = strlen(\"requested_user.this_domain.tld\") - 1;\n+static uint8_t toxid[TOX_ADDRESS_SIZE] = {0xDD, 0x2A, 0x13, 0x40, 0xFE, 0xCE, 0x44, 0x12, 0x06, 0xB5, 0xF3,",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85324736",
            "id": 85324736,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI0NzM2",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 26,
            "original_start_line": null,
            "path": "auto_tests/query_test.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324736/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324736",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85324833"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324833"
                }
            },
            "author_association": "MEMBER",
            "body": "\"not equal to\" - decapitalise.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:23:42Z",
            "diff_hunk": "@@ -0,0 +1,396 @@\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include <check.h>\n+\n+#include \"../toxcore/DHT.h\"\n+// #include \"../toxcore/DHT.c\"\n+#include \"../toxcore/tox.h\"\n+#include \"../toxcore/Messenger.h\"\n+#include \"../toxcore/query.c\"\n+\n+#include \"helpers.h\"\n+\n+#if defined(_WIN32) || defined(__WIN32__) || defined (WIN32)\n+#include <windows.h>\n+#define c_sleep(x) Sleep(1*x)\n+#else\n+#include <unistd.h>\n+#define c_sleep(x) usleep(1000*x)\n+#endif\n+\n+static unsigned int response_cookie = 348394;\n+static uint8_t name[] = \"requested_user.this_domain.tld\";\n+static size_t name_length = strlen(\"requested_user.this_domain.tld\") - 1;\n+static uint8_t toxid[TOX_ADDRESS_SIZE] = {0xDD, 0x2A, 0x13, 0x40, 0xFE, 0xCE, 0x44, 0x12, 0x06, 0xB5, 0xF3,\n+                                          0xD2, 0x02, 0xE6, 0x14, 0x6E, 0x76, 0x61, 0x72, 0x70, 0x21, 0x44,\n+                                          0x99, 0xB7, 0x2C, 0x55, 0x11, 0xFC, 0xE8, 0x39, 0xF8, 0x5B, 0x28,\n+                                          0xD7, 0xEA, 0xCB, 0xC4, 0x6C\n+                                         };\n+\n+static bool done = false;\n+\n+static void tox_query_response(Tox *tox, const uint8_t *request, size_t length, const uint8_t *tox_id,\n+                               void *user_data)\n+{\n+    ck_assert_msg(1, \"query callback\");\n+    ck_assert_msg(user_data == &response_cookie, \"Invalid Cookie in response callback\");\n+    ck_assert_msg(memcmp(tox_id, toxid, TOX_ADDRESS_SIZE) == 0, \"Unexpected ToxID from callback\");\n+    done = true;\n+}\n+\n+\n+static int query_handle_toxid_request(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata)\n+{\n+\n+    Messenger *m = (Messenger *)object;\n+\n+    if (pkt[0] != NET_PACKET_DATA_REQUEST) {\n+        ck_assert_msg(pkt[0] == NET_PACKET_DATA_REQUEST, \"Bad incoming query request -- Packet = %u && length %u\", pkt[0],\n+                      length);\n+    }\n+\n+    length -= 1;\n+    ck_assert_msg(length > crypto_box_PUBLICKEYBYTES, \"Bad length after 1 %u\", length);\n+\n+    uint8_t sender_key[crypto_box_PUBLICKEYBYTES];\n+    memcpy(sender_key, pkt + 1, crypto_box_PUBLICKEYBYTES);\n+    length -= crypto_box_PUBLICKEYBYTES;\n+    ck_assert_msg(length > crypto_box_NONCEBYTES, \"Bad length after key %u\", length);\n+\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    memcpy(nonce, pkt + 1 + crypto_box_PUBLICKEYBYTES, crypto_box_NONCEBYTES);\n+    length -= crypto_box_NONCEBYTES;\n+    ck_assert_msg(length == name_length + crypto_box_MACBYTES , \"Bad length after nonce, %u instead of %u\", length,\n+                  name_length + crypto_box_MACBYTES);\n+\n+    uint8_t clear[length];\n+\n+    decrypt_data(sender_key, m->dht->self_secret_key, nonce, pkt + 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES,\n+                 length, clear);\n+\n+    ck_assert_msg(memcmp(clear, name, name_length) == 0, \"Incoming packet is NOT the name\");",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85324833",
            "id": 85324833,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI0ODMz",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 73,
            "original_start_line": null,
            "path": "auto_tests/query_test.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324833/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85324833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85325163"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85325163"
                }
            },
            "author_association": "MEMBER",
            "body": "Sort includes.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:26:06Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85325163",
            "id": 85325163,
            "line": 15,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI1MTYz",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 16,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85325163/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85325163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85325405"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85325405"
                }
            },
            "author_association": "MEMBER",
            "body": "This is a trivial computation. Consider removing the argument and doing the addition at the call site.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:27:53Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85325405",
            "id": 85325405,
            "line": 19,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI1NDA1",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 20,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": 19,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85325405/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85325405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85327441"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85327441"
                }
            },
            "author_association": "MEMBER",
            "body": "`!= true` is redundant.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:40:51Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85327441",
            "id": 85327441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI3NDQx",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 108,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85327441/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85327441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85327655"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85327655"
                }
            },
            "author_association": "MEMBER",
            "body": "Violation of single responsibility: make a separate function to ensure that the logical precondition of the following code holds.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:41:59Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85327655",
            "id": 85327655,
            "line": 105,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI3NjU1",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 107,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": 105,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85327655/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85327655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328125"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328125"
                }
            },
            "author_association": "MEMBER",
            "body": "Remove copy of function name.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:44:46Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328125",
            "id": 85328125,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI4MTI1",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 64,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328125/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328125",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328243"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328243"
                }
            },
            "author_association": "MEMBER",
            "body": "\"position\"\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:45:14Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328243",
            "id": 85328243,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI4MjQz",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 66,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328243/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328607"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328607"
                }
            },
            "author_association": "MEMBER",
            "body": "Comparison of non-equal types. `count` is `size_t`, the range of values representable by `i`'s type is possibly smaller.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:47:12Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328607",
            "id": 85328607,
            "line": 71,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI4NjA3",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 73,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": 71,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328607/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328791"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328791"
                }
            },
            "author_association": "MEMBER",
            "body": "Inconsistent: `sizeof(*pend)` above, `sizeof(Query)` here.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:48:17Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328791",
            "id": 85328791,
            "line": 121,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI4Nzkx",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 123,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": 121,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328791/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328934"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328934"
                }
            },
            "author_association": "MEMBER",
            "body": "Avoid non-trivial or ambiguous abbreviations. `pkt` could mean `public key t...something`. Use `packet` instead.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:49:14Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85328934",
            "id": 85328934,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI4OTM0",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 128,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328934/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85328934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329606"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329606"
                }
            },
            "author_association": "MEMBER",
            "body": "You can replace this and the next two lines with: `Query new = { ipp };`. Also, use a more descriptive name than `new` (e.g. `new_query`).\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:53:25Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329606",
            "id": 85329606,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI5NjA2",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 175,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329606/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329681"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329681"
                }
            },
            "author_association": "MEMBER",
            "body": "Remove.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:53:55Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329681",
            "id": 85329681,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI5Njgx",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 190,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329681/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329782"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329782"
                }
            },
            "author_association": "MEMBER",
            "body": "On which system is this cast necessary?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:54:35Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329782",
            "id": 85329782,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI5Nzgy",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 201,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329782/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329840"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329840"
                }
            },
            "author_association": "MEMBER",
            "body": "The above three lines can be a single line.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:54:56Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329840",
            "id": 85329840,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI5ODQw",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 207,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329840/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329887"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329887"
                }
            },
            "author_association": "MEMBER",
            "body": "Move declaration of `info` to here.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:55:15Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85329887",
            "id": 85329887,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzI5ODg3",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 209,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329887/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85329887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330020"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330020"
                }
            },
            "author_association": "MEMBER",
            "body": "Avoid `new` as a name.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:56:06Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    Query new = q_make(&ipp, key, name, length);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330020",
            "id": 85330020,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMwMDIw",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 235,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330020/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330092"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330092"
                }
            },
            "author_association": "MEMBER",
            "body": "Undocumented magic error constants.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:56:30Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    Query new = q_make(&ipp, key, name, length);\n+\n+    // Verify name isn't currently pending response\n+    if (q_check(m->dht->queries, &new, 1) != -1) {\n+        return -2;\n+    }\n+\n+    // Send request\n+    if (q_send(m->dht, &new) == 0) {\n+        if (q_add(m->dht->queries, &new)) {\n+            return 0;\n+        }\n+\n+        return -3;\n+    }\n+\n+    return -4;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330092",
            "id": 85330092,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMwMDky",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 251,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330092/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330330"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330330"
                }
            },
            "author_association": "MEMBER",
            "body": "This should probably be right after the first if statement. By itself, this has no context.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:57:48Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    Query new = q_make(&ipp, key, name, length);\n+\n+    // Verify name isn't currently pending response\n+    if (q_check(m->dht->queries, &new, 1) != -1) {\n+        return -2;\n+    }\n+\n+    // Send request\n+    if (q_send(m->dht, &new) == 0) {\n+        if (q_add(m->dht->queries, &new)) {\n+            return 0;\n+        }\n+\n+        return -3;\n+    }\n+\n+    return -4;\n+}\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata)\n+{\n+    DHT *dht = (DHT *)object;\n+\n+    if (pkt[0] != NET_PACKET_DATA_RESPONSE) {\n+        return -1;\n+    }\n+\n+    if (length <= QUERY_PKT_ENCRYPTED_SIZE(crypto_box_PUBLICKEYBYTES)) {\n+        return -1;\n+    }\n+\n+    // We verify the sender is in our list before we even try to decrypt anything\n+    unsigned int i;\n+\n+    for (i = 0; i < dht->queries->count; ++i) {\n+        if (q_verify_server(&source, &dht->queries->query_list[i].ipp)) {\n+            break;\n+        }\n+    }\n+\n+\n+    length -= 1;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330330",
            "id": 85330330,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMwMzMw",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 276,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330330/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330450"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330450"
                }
            },
            "author_association": "MEMBER",
            "body": "Invert condition.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:58:21Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    Query new = q_make(&ipp, key, name, length);\n+\n+    // Verify name isn't currently pending response\n+    if (q_check(m->dht->queries, &new, 1) != -1) {\n+        return -2;\n+    }\n+\n+    // Send request\n+    if (q_send(m->dht, &new) == 0) {\n+        if (q_add(m->dht->queries, &new)) {\n+            return 0;\n+        }\n+\n+        return -3;\n+    }\n+\n+    return -4;\n+}\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata)\n+{\n+    DHT *dht = (DHT *)object;\n+\n+    if (pkt[0] != NET_PACKET_DATA_RESPONSE) {\n+        return -1;\n+    }\n+\n+    if (length <= QUERY_PKT_ENCRYPTED_SIZE(crypto_box_PUBLICKEYBYTES)) {\n+        return -1;\n+    }\n+\n+    // We verify the sender is in our list before we even try to decrypt anything\n+    unsigned int i;\n+\n+    for (i = 0; i < dht->queries->count; ++i) {\n+        if (q_verify_server(&source, &dht->queries->query_list[i].ipp)) {\n+            break;\n+        }\n+    }\n+\n+\n+    length -= 1;\n+\n+    uint8_t sender_key[crypto_box_PUBLICKEYBYTES];\n+    memcpy(sender_key, pkt + 1, crypto_box_PUBLICKEYBYTES);\n+    length -= crypto_box_PUBLICKEYBYTES;\n+\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    memcpy(nonce, pkt + 1 + crypto_box_PUBLICKEYBYTES, crypto_box_NONCEBYTES);\n+    length -= crypto_box_NONCEBYTES;\n+\n+    uint8_t clear[length];\n+\n+    int res = decrypt_data(sender_key, dht->self_secret_key, nonce,\n+                           pkt + 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES, length, clear);\n+\n+    if (res == -1) {\n+        return -1;\n+    }\n+\n+    Query test = q_make(&source, sender_key, clear, length - crypto_box_MACBYTES);\n+\n+    int loc = q_check(dht->queries, &test, 0);\n+\n+    if (loc != -1) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330450",
            "id": 85330450,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMwNDUw",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 299,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330450/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330521"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330521"
                }
            },
            "author_association": "MEMBER",
            "body": "Leaking `new`.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T12:58:43Z",
            "diff_hunk": "@@ -0,0 +1,342 @@\n+/** query.c\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include \"query.h\"\n+\n+#include \"crypto_core.h\"\n+#include \"logger.h\"\n+#include \"DHT.h\"\n+#include \"Messenger.h\"\n+#include \"network.h\"\n+#include \"util.h\"\n+\n+// #include <assert.h>\n+\n+#define QUERY_PKT_ENCRYPTED_SIZE(payload) (1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + payload + crypto_box_MACBYTES)\n+\n+/**\n+ * Increases the size of the query_list to count + 2.\n+ */\n+static bool q_grow(Pending_Queries *queries)\n+{\n+    size_t size = queries->count + 2;\n+    Query *new = realloc(queries->query_list, size * sizeof(Query));\n+\n+    if (!new) {\n+        return false;\n+    }\n+\n+    queries->size  = size;\n+    queries->query_list = new;\n+\n+    return true;\n+}\n+\n+/** returns true if existing and pending resolve to the same server address and port. */\n+static bool q_verify_server(const IP_Port *existing, const IP_Port *pending)\n+{\n+    if (existing->port != pending->port) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family != pending->ip.family) {\n+        return false;\n+    }\n+\n+    if (existing->ip.family == AF_INET) {\n+        if (memcmp(&existing->ip.ip4.in_addr, &pending->ip.ip4.in_addr, sizeof(struct in_addr)) != 0) {\n+            return false;\n+        }\n+    } else {\n+        if (memcmp(&existing->ip.ip6.in6_addr, &pending->ip.ip6.in6_addr, sizeof(struct in6_addr)) != 0) {\n+            return false;\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** q_check\n+ *\n+ * Checks for an existing entry in the pending queries list. Returns the positon of the Query on\n+ * success, and -1 if the given query isn't found.\n+ */\n+static int q_check(const Pending_Queries *queries, const Query *pend, bool outgoing)\n+{\n+    unsigned i;\n+\n+    for (i = 0; i < queries->count; ++i) {\n+        Query *test = &queries->query_list[i];\n+\n+        if (!q_verify_server(&test->ipp, &pend->ipp)) {\n+            continue;\n+        }\n+\n+        if (!id_equal(test->key, pend->key)) {\n+            continue;\n+        }\n+\n+        if (outgoing) {\n+            if (test->length != pend->length) {\n+                continue;\n+            }\n+\n+            if (memcmp(&test->name, &pend->name, test->length) != 0) {\n+                continue;\n+            }\n+        }\n+\n+        // if (memcmp(test.nonce, pend.nonce, ) {\n+        // continue;\n+        // }\n+\n+        return i;\n+    }\n+\n+    return -1;\n+}\n+\n+/** Adds pend to the query_list. */\n+static bool q_add(Pending_Queries *queries, const Query *pend)\n+{\n+    if (queries->count >= queries->size) {\n+        if (q_grow(queries) != true) {\n+            return false;\n+        }\n+    }\n+\n+    memcpy(&queries->query_list[queries->count], pend, sizeof(*pend));\n+    ++queries->count;\n+\n+    return true;\n+}\n+\n+/** Drops the query at position loc from the list. */\n+static void q_drop(Pending_Queries *queries, size_t loc)\n+{\n+    if (loc && queries->count > loc + 1) {\n+        memmove(&queries->query_list[loc], &queries->query_list[loc + 1], sizeof(Query));\n+    }\n+    --queries->count;\n+}\n+\n+static size_t q_build_pkt(const uint8_t *their_public_key, const uint8_t *our_public_key, const uint8_t *our_secret_key,\n+                          const uint8_t type, const uint8_t *data, const size_t length, uint8_t *built)\n+{\n+    // Encrypt the outgoing data\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    new_nonce(nonce);\n+\n+    uint8_t encrypted[length + crypto_box_MACBYTES];\n+    int status = encrypt_data(their_public_key, our_secret_key, nonce, data, length, encrypted);\n+\n+    if (status == -1) {\n+        return -1;\n+    }\n+\n+    // Build the packet\n+    size_t size = 0;\n+    built[0] = type;\n+    size += 1;\n+\n+    memcpy(built + size, our_public_key, crypto_box_PUBLICKEYBYTES);\n+    size += crypto_box_PUBLICKEYBYTES;\n+\n+    memcpy(built + size, nonce, crypto_box_NONCEBYTES);\n+    size += crypto_box_NONCEBYTES;\n+\n+    memcpy(built + size, encrypted, status);\n+\n+    return 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES + status;\n+}\n+\n+static int q_send(const DHT *dht, const Query *send)\n+{\n+    uint8_t packet[QUERY_PKT_ENCRYPTED_SIZE(send->length)];\n+\n+    size_t written_size = q_build_pkt(send->key, dht->self_public_key, dht->self_secret_key, NET_PACKET_DATA_REQUEST,\n+                                      send->name, send->length, packet);\n+    // TODO(grayhatter) add tox_assert(written_size == QUERY_PKT_ENCRYPTED_SIZE(send->length));\n+\n+    if (written_size != -1) {\n+        return sendpacket(dht->net, send->ipp, packet, written_size) != written_size;\n+    }\n+\n+    return -1;\n+}\n+\n+static Query q_make(IP_Port *ipp, const uint8_t key[crypto_box_PUBLICKEYBYTES], const uint8_t *name, const size_t length)\n+{\n+    Query new;\n+    memset(&new, 0, sizeof(Query));\n+\n+    memcpy(&new.ipp, ipp, sizeof(IP_Port));\n+    id_copy(new.key, key);\n+    memcpy(new.name, name, length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE );\n+    new.length = length < QUERY_MAX_NAME_SIZE ? length : QUERY_MAX_NAME_SIZE;\n+\n+    // new.query_nonce = random_64b(); // TODO(grayhatter) readd nonce\n+\n+    new.tries_remaining = 2;\n+    new.next_timeout = unix_time() + QUERY_TIMEOUT;\n+    return new;\n+}\n+\n+/** query_send_request\n+ *\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length)\n+{\n+    Messenger *m = (Messenger *)tox;\n+\n+    struct addrinfo *info, *root;\n+\n+    if (getaddrinfo((char *)address, NULL, NULL, &root) != 0) {\n+        return -1;\n+    }\n+\n+    IP_Port ipp;\n+    memset(&ipp, 0, sizeof(IP_Port));\n+    ipp.port = htons(port);\n+\n+    info = root;\n+\n+    do {\n+        if (info->ai_socktype && info->ai_socktype != SOCK_DGRAM) {\n+            continue;\n+        }\n+\n+        ipp.ip.family = info->ai_family;\n+\n+        if (info->ai_family == AF_INET) {\n+            ipp.ip.ip4.in_addr = ((struct sockaddr_in *)info->ai_addr)->sin_addr;\n+            break;\n+        } else if (info->ai_family == AF_INET6) {\n+            ipp.ip.ip6.in6_addr = ((struct sockaddr_in6 *)info->ai_addr)->sin6_addr;\n+            break;\n+        } else {\n+            continue;\n+        }\n+    } while ((info = info->ai_next));\n+\n+    freeaddrinfo(root);\n+\n+    if (info == NULL) {\n+        return -1; // No host found\n+    }\n+\n+    Query new = q_make(&ipp, key, name, length);\n+\n+    // Verify name isn't currently pending response\n+    if (q_check(m->dht->queries, &new, 1) != -1) {\n+        return -2;\n+    }\n+\n+    // Send request\n+    if (q_send(m->dht, &new) == 0) {\n+        if (q_add(m->dht->queries, &new)) {\n+            return 0;\n+        }\n+\n+        return -3;\n+    }\n+\n+    return -4;\n+}\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata)\n+{\n+    DHT *dht = (DHT *)object;\n+\n+    if (pkt[0] != NET_PACKET_DATA_RESPONSE) {\n+        return -1;\n+    }\n+\n+    if (length <= QUERY_PKT_ENCRYPTED_SIZE(crypto_box_PUBLICKEYBYTES)) {\n+        return -1;\n+    }\n+\n+    // We verify the sender is in our list before we even try to decrypt anything\n+    unsigned int i;\n+\n+    for (i = 0; i < dht->queries->count; ++i) {\n+        if (q_verify_server(&source, &dht->queries->query_list[i].ipp)) {\n+            break;\n+        }\n+    }\n+\n+\n+    length -= 1;\n+\n+    uint8_t sender_key[crypto_box_PUBLICKEYBYTES];\n+    memcpy(sender_key, pkt + 1, crypto_box_PUBLICKEYBYTES);\n+    length -= crypto_box_PUBLICKEYBYTES;\n+\n+    uint8_t nonce[crypto_box_NONCEBYTES];\n+    memcpy(nonce, pkt + 1 + crypto_box_PUBLICKEYBYTES, crypto_box_NONCEBYTES);\n+    length -= crypto_box_NONCEBYTES;\n+\n+    uint8_t clear[length];\n+\n+    int res = decrypt_data(sender_key, dht->self_secret_key, nonce,\n+                           pkt + 1 + crypto_box_PUBLICKEYBYTES + crypto_box_NONCEBYTES, length, clear);\n+\n+    if (res == -1) {\n+        return -1;\n+    }\n+\n+    Query test = q_make(&source, sender_key, clear, length - crypto_box_MACBYTES);\n+\n+    int loc = q_check(dht->queries, &test, 0);\n+\n+    if (loc != -1) {\n+        if (dht->queries->query_response) {\n+            dht->queries->query_response(dht->queries->query_response_object, dht->queries->query_list[loc].name,\n+                                         dht->queries->query_list[loc].length, clear, userdata);\n+        }\n+\n+        q_drop(dht->queries, loc);\n+        return 0;\n+    }\n+\n+    return -1;\n+}\n+\n+Pending_Queries *query_new(Networking_Core *net)\n+{\n+    Pending_Queries *new = calloc(1, sizeof(Pending_Queries));\n+\n+    if (!new) {\n+        return NULL;\n+    }\n+\n+    new->query_list = calloc(1, sizeof(Query));\n+\n+    if (new->query_list == NULL) {\n+        return NULL;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330521",
            "id": 85330521,
            "line": 316,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMwNTIx",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 323,
            "original_start_line": null,
            "path": "toxcore/query.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330521/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330942"
                }
            },
            "author_association": "MEMBER",
            "body": "Redundancy of information is to be avoided, because it increases maintenance load. Renaming the file may render this line out of date.\n\nBesides that, I don't need to give you a reason _not_ to include useless information. It is your obligation to give a reason _for_ doing it.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T13:01:39Z",
            "diff_hunk": "@@ -0,0 +1,57 @@\n+/** query.h",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85330942",
            "id": 85330942,
            "in_reply_to_id": 84715291,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMwOTQy",
            "original_commit_id": "b538668b9829c8754a92d42b265e626843db66e4",
            "original_line": null,
            "original_position": 1,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330942/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85330942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331003"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331003"
                }
            },
            "author_association": "MEMBER",
            "body": "Sort.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T13:01:57Z",
            "diff_hunk": "@@ -0,0 +1,60 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef QUERY_H\n+#define QUERY_H\n+\n+#include \"network.h\"\n+#include \"crypto_core.h\"",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331003",
            "id": 85331003,
            "line": 8,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMxMDAz",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 10,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331003/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331055"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331055"
                }
            },
            "author_association": "MEMBER",
            "body": "Seconds? Milliseconds? Days?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T13:02:16Z",
            "diff_hunk": "@@ -0,0 +1,60 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef QUERY_H\n+#define QUERY_H\n+\n+#include \"network.h\"\n+#include \"crypto_core.h\"\n+\n+\n+#define QUERY_TIMEOUT 500",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331055",
            "id": 85331055,
            "line": 12,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMxMDU1",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 13,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331055/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331430"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331430"
                }
            },
            "author_association": "MEMBER",
            "body": "Avoid \"I\" in technical documentation. Also, fix typos.\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T13:04:06Z",
            "diff_hunk": "@@ -0,0 +1,60 @@\n+/** query.h\n+ *\n+ * Makes requests for information using the DHT or Onion as appropriate.\n+ */\n+\n+#ifndef QUERY_H\n+#define QUERY_H\n+\n+#include \"network.h\"\n+#include \"crypto_core.h\"\n+\n+\n+#define QUERY_TIMEOUT 500\n+#define QUERY_MAX_NAME_SIZE 255\n+\n+typedef struct {\n+    IP_Port  ipp;\n+    uint8_t  key[crypto_box_PUBLICKEYBYTES];\n+    uint8_t  name[QUERY_MAX_NAME_SIZE];\n+    size_t  length;\n+\n+    uint64_t query_nonce;\n+\n+    uint8_t  tries_remaining;\n+    uint64_t next_timeout;\n+} Query;\n+\n+typedef struct {\n+    size_t size;\n+    size_t count;\n+    Query *query_list;\n+\n+    void (*query_response)(void *tox, const uint8_t *request, size_t length, const uint8_t *tox_id,\n+                                   void *user_data) ;\n+    void *query_response_object;\n+\n+} Pending_Queries;\n+\n+/** query_send_request\n+ *\n+ */\n+int query_send_request(void *tox, const char *address, uint16_t port, const uint8_t *key,\n+                       const uint8_t *name, size_t length);\n+\n+int query_handle_toxid_response(void *object, IP_Port source, const uint8_t *pkt, uint16_t length, void *userdata);\n+\n+/**\n+ * Generate a new query object\n+ */\n+Pending_Queries *query_new(Networking_Core *net);\n+\n+/**\n+ * Process/iterate pending queries.\n+ *\n+ * void *object should always be a DHT *object. but I'm unablet to include DHT.h in this file",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331430",
            "id": 85331430,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMxNDMw",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 55,
            "original_start_line": null,
            "path": "toxcore/query.h",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331430/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331558"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331558"
                }
            },
            "author_association": "MEMBER",
            "body": "associated\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T13:04:47Z",
            "diff_hunk": "@@ -742,6 +745,55 @@ bool bootstrap(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] pub\n bool add_tcp_relay(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key)\n     with error for bootstrap;\n \n+namespace query {\n+\n+  /**\n+   * Queries the server at given address, port, public key, for the ToxID associated with supplied name.\n+   *\n+   * TODO(grayhatter) add a bool to send request from a one time use keypair. (Needs net_crypto/dht refactor)\n+   * NOTE(requires net_crypto.c support)\n+   *\n+   * @param address the IPv4 or IPv6 address for the server. Will attempt to resolve DNS addresses.\n+   * @param port the port the server is listening on.\n+   * @param public_key the long term public key for the name server.\n+   * @param name the string (name) you want to give to the server to request the assoiated ToxID.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331558",
            "id": 85331558,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMxNTU4",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 27,
            "original_start_line": null,
            "path": "toxcore/tox.api.h",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331558/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331818"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331818"
                }
            },
            "author_association": "MEMBER",
            "body": "`@param`\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T13:05:59Z",
            "diff_hunk": "@@ -442,6 +443,73 @@ bool tox_add_tcp_relay(Tox *tox, const char *address, uint16_t port, const uint8\n     return 0;\n }\n \n+\n+\n+/**\n+ * Queries the server at IP port, with PUBKEY, for the TOXID at <unresolved>\n+ *\n+ * param address the IPv4, or IPv6 Address for the server.",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331818",
            "id": 85331818,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMxODE4",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 17,
            "original_start_line": null,
            "path": "toxcore/tox.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331818/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331930"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331930"
                }
            },
            "author_association": "MEMBER",
            "body": "This function is more or less equivalent to `return false`. As a side-effect it also sets the error code, but it does nothing useful. What is its purpose?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T13:06:32Z",
            "diff_hunk": "@@ -0,0 +1,396 @@\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n+\n+#include <check.h>\n+\n+#include \"../toxcore/DHT.h\"\n+// #include \"../toxcore/DHT.c\"\n+#include \"../toxcore/tox.h\"\n+#include \"../toxcore/Messenger.h\"\n+#include \"../toxcore/query.c\"\n+\n+#include \"helpers.h\"\n+\n+#if defined(_WIN32) || defined(__WIN32__) || defined (WIN32)\n+#include <windows.h>\n+#define c_sleep(x) Sleep(1*x)\n+#else\n+#include <unistd.h>\n+#define c_sleep(x) usleep(1000*x)\n+#endif\n+\n+static unsigned int response_cookie = 348394;\n+static uint8_t name[] = \"requested_user.this_domain.tld\";\n+static size_t name_length = strlen(\"requested_user.this_domain.tld\") - 1;\n+static uint8_t toxid[TOX_ADDRESS_SIZE] = {0xDD, 0x2A, 0x13, 0x40, 0xFE, 0xCE, 0x44, 0x12, 0x06, 0xB5, 0xF3,",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85331930",
            "id": 85331930,
            "in_reply_to_id": 85324736,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMxOTMw",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 26,
            "original_start_line": null,
            "path": "auto_tests/query_test.c",
            "position": null,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331930/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85331930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85332205"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85332205"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is this part of the DHT? Does any DHT functionality depend on it?\n",
            "commit_id": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "created_at": "2016-10-27T13:08:04Z",
            "diff_hunk": "@@ -239,10 +240,13 @@ typedef struct {\n #endif\n     uint64_t       last_run;\n \n-    Cryptopacket_Handles cryptopackethandlers[256];\n+    Cryptopacket_Handles cryptopackethandlers[UINT8_MAX + 1];\n \n     Node_format to_bootstrap[MAX_CLOSE_TO_BOOTSTRAP_NODES];\n     unsigned int num_to_bootstrap;\n+\n+    Pending_Queries *queries;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#discussion_r85332205",
            "id": 85332205,
            "line": 248,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MzMyMjA1",
            "original_commit_id": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "original_line": null,
            "original_position": 18,
            "original_start_line": null,
            "path": "toxcore/DHT.h",
            "position": 18,
            "pull_request_review_id": 6046360,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85332205/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-11-01T07:21:55Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/85332205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "see also https://docs.google.com/document/d/1Y415qZcZQeKVsqZJ7gfH62pwOqQAAplXxcBSuvfOiV4/edit\n",
            "created_at": "2016-10-23T06:41:44Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#issuecomment-255572533",
            "id": 255572533,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU3MjUzMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/255572533/reactions"
            },
            "updated_at": "2016-10-23T06:41:44Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/255572533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There are also some TODOs in the code, some are even in the tox.h.\n",
            "created_at": "2016-10-23T19:59:01Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#issuecomment-255610471",
            "id": 255610471,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYxMDQ3MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/255610471/reactions"
            },
            "updated_at": "2016-10-23T19:59:01Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/255610471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1855294?v=4",
                "events_url": "https://api.github.com/users/nurupo/events{/privacy}",
                "followers_url": "https://api.github.com/users/nurupo/followers",
                "following_url": "https://api.github.com/users/nurupo/following{/other_user}",
                "gists_url": "https://api.github.com/users/nurupo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nurupo",
                "id": 1855294,
                "login": "nurupo",
                "node_id": "MDQ6VXNlcjE4NTUyOTQ=",
                "organizations_url": "https://api.github.com/users/nurupo/orgs",
                "received_events_url": "https://api.github.com/users/nurupo/received_events",
                "repos_url": "https://api.github.com/users/nurupo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nurupo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nurupo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nurupo"
            }
        },
        {
            "author_association": "NONE",
            "body": "@nurupo @zetok  Yeah, I wanted to get eyes on this now because it's ≈working. So that I don't get too much deeper without getting comments that may change a lot more than just comment/overhead documentation. \n",
            "created_at": "2016-10-23T21:03:36Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#issuecomment-255614237",
            "id": 255614237,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYxNDIzNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/255614237/reactions"
            },
            "updated_at": "2016-10-23T21:03:36Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/255614237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "author_association": "NONE",
            "body": "closes #192 \n",
            "created_at": "2016-10-24T01:11:17Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#issuecomment-255628342",
            "id": 255628342,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTYyODM0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/255628342/reactions"
            },
            "updated_at": "2016-10-24T01:11:17Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/255628342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "author_association": "NONE",
            "body": "Review status: 0 of 11 files reviewed at latest revision, 60 unresolved discussions, some commit checks failed.\n\n---\n\n_[CMakeLists.txt, line 158 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgO-r5-158:-KVTffjljoqwLjLzKdse:b-k20stn) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/CMakeLists.txt#L158)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Is something inside the DHT depending on query? Would it otherwise make sense to create a new module with the query stuff in it?\n> </details>\n> No, but query uses the existing DHT key to do lookups.\n\nI could do everything internally, and separate it from the DHT but this way was easier and IMO simpler.\n\nWith the pending updates to DHT, and net_crypto that would then be the easiest way.  If that is the way we want to go that leaves defining a roadmap, so I know where this sits.\n\n---\n\n_[auto_tests/query_test.c, line 26 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgW-r5-26:-KVTgNzGqHNM48jwnF8L:bgrjopt) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/auto_tests/query_test.c#L26)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> This function is more or less equivalent to `return false`. As a side-effect it also sets the error code, but it does nothing useful. What is its purpose?\n> </details>\n> done\n\nplease start a new conversation because github moved some comments\n\n---\n\n_[auto_tests/query_test.c, line 73 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgW-r5-73:-KVTgUrE8R4aacppnsht:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/auto_tests/query_test.c#L73)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> \"not equal to\" - decapitalise.\n> </details>\n> Done.\n\n---\n\n_[toxcore/DHT.c, line 2612 at r3](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgP-r3-2612:-KVTgWqiR1KND_HwwCcD:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/c4388ee1344d577e8a4d04269f77ab2690e38f2f/toxcore/DHT.c#L2612)):_\n<details><summary>\n\n<i>Previously, GrayHatter (Gregory Mullen) wrote…</i></summary>\n\n\n\n> done\n> </details>\n> Done.\n\n---\n\n_[toxcore/network.h, line 136 at r4](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgS-r4-136:-KVTg_c133J4mC3ASux-:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/b538668b9829c8754a92d42b265e626843db66e4/toxcore/network.h#L136)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Perhaps add a `NET_PACKET_TYPE_MAX = 255` and put that \"Must never exceed\" comment on it. Also, no need to shout at the reader.\n> \n> Also, this change is unrelated to tox-named, but makes sense. Can you make a separate PR with just this change and reasoning about why this change is good?\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 68 at r3](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r3-68:-KVThBQgS5kYZ3zdrX1x:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/c4388ee1344d577e8a4d04269f77ab2690e38f2f/toxcore/query.c#L68)):_\n<details><summary>\n\n<i>Previously, JFreegman wrote…</i></summary>\n\n\n\n> Why isn't pend a pointer?\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 103 at r3](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r3-103:-KVThEox4vJo-ZBw3IeH:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/c4388ee1344d577e8a4d04269f77ab2690e38f2f/toxcore/query.c#L103)):_\n<details><summary>\n\n<i>Previously, JFreegman wrote…</i></summary>\n\n\n\n> Why isn't pend a pointer?\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 168 at r3](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r3-168:-KVThP679e1HJm55Dkn5:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/c4388ee1344d577e8a4d04269f77ab2690e38f2f/toxcore/query.c#L168)):_\n<details><summary>\n\n<i>Previously, JFreegman wrote…</i></summary>\n\n\n\n> Why isn't send a pointer?\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 183 at r3](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r3-183:-KVThRKJEo4z_7Z8haro:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/c4388ee1344d577e8a4d04269f77ab2690e38f2f/toxcore/query.c#L183)):_\n<details><summary>\n\n<i>Previously, JFreegman wrote…</i></summary>\n\n\n\n> Why doesn't this return a pointer? and why doesn't it take ipp and key as pointers?\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 16 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-16:-KVTh-PdLtg6XdD0_BCl:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L16)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Sort includes.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 20 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-20:-KVTjA7RYfdGlIbFLs5B:b47p6vf) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L20)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> This is a trivial computation. Consider removing the argument and doing the addition at the call site.\n> </details>\n> Right, but it's one that needs to be duplicated and kept DRY.  If/when we change the packet size, to include versioning, or [other] this protects single point bugs from cropping up.\n\nThat said, I'm not opposed to removing this, even though I think this way is better.\n\n---\n\n_[toxcore/query.c, line 64 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-64:-KVTh983pbokVa1NhD8U:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L64)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Remove copy of function name.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 66 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-66:-KVTh9v89T6z9xHsVYcK:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L66)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> \"position\"\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 73 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-73:-KVTjxUpVjU4v1C6JwvJ:b-mnnsy6) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L73)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Comparison of non-equal types. `count` is `size_t`, the range of values representable by `i`'s type is possibly smaller.\n> </details>\n> We could use `size_t` but more importantly what type should this function return?\n\n---\n\n_[toxcore/query.c, line 108 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-108:-KVThFruNlHb8PpurcaU:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L108)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> `!= true` is redundant.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 123 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-123:-KVThMV0iD4eEFLUYNfp:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L123)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Inconsistent: `sizeof(*pend)` above, `sizeof(Query)` here.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 128 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-128:-KVThNrCCrE03s-uNX-y:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L128)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Avoid non-trivial or ambiguous abbreviations. `pkt` could mean `public key t...something`. Use `packet` instead.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 175 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-175:-KVThS9CmOUny6TxMN8K:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L175)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> You can replace this and the next two lines with: `Query new = { ipp };`. Also, use a more descriptive name than `new` (e.g. `new_query`).\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 190 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-190:-KVThUpd7y4nRE74WpDG:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L190)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Remove.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 201 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-201:-KVThW01ZbRRNWboTfqC:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L201)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> On which system is this cast necessary?\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 207 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-207:-KVThWc0RBBbUqoHxBaR:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L207)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> The above three lines can be a single line.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 209 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-209:-KVThYBowcgMynSD8-YA:b9e2wui) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L209)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Move declaration of `info` to here.\n> </details>\n> done \n\n(this comment moved)\n\n---\n\n_[toxcore/query.c, line 235 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-235:-KVTha__81iQlQuMXU3F:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L235)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Avoid `new` as a name.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 251 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-251:-KVThb_cCI0EjQXMmzsa:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L251)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Undocumented magic error constants.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 276 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-276:-KVThdxpk74zEwdRmR7h:btxdjxe) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L276)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> This should probably be right after the first if statement. By itself, this has no context.\n> </details>\n> moved to after the 2nd\n\n---\n\n_[toxcore/query.c, line 299 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-299:-KVTkaU9CrhqNPTI8pvL:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L299)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Invert condition.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.c, line 323 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgX-r5-323:-KVThorTx1ya456LpqM8:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.c#L323)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Leaking `new`.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.h, line 1 at r4](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgY-r4-1:-KVThsC7ensG5DylCWUZ:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/b538668b9829c8754a92d42b265e626843db66e4/toxcore/query.h#L1)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Redundancy of information is to be avoided, because it increases maintenance load. Renaming the file may render this line out of date.\n> \n> Besides that, I don't need to give you a reason _not_ to include useless information. It is your obligation to give a reason _for_ doing it.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.h, line 10 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgY-r5-10:-KVTi5RtzK6leNPcXJx2:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.h#L10)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Sort.\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.h, line 13 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgY-r5-13:-KVTi92C7w6lIaI8QTvt:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.h#L13)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Seconds? Milliseconds? Days?\n> </details>\n> Done.\n\n---\n\n_[toxcore/query.h, line 55 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgY-r5-55:-KVTiC8OX90UofHtUB6L:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/query.h#L55)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Avoid \"I\" in technical documentation. Also, fix typos.\n> </details>\n> Done.\n\n---\n\n_[toxcore/tox.api.h, line 765 at r4](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgT-r4-765:-KVTke7_lHWSz-JvQvzD:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/b538668b9829c8754a92d42b265e626843db66e4/toxcore/tox.api.h#L765)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Apparently it resolves addresses. Mention this above. Disregard my question above.\n> </details>\n> Done.\n\n---\n\n_[toxcore/tox.api.h, line 759 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgT-r5-759:-KVTib0Ln527Q2eR3h3T:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/tox.api.h#L759)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> associated\n> </details>\n> Done.\n\n---\n\n_[toxcore/tox.c, line 451 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgU-r5-451:-KVTifl_5TmqYt6xVk3a:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/tox.c#L451)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> `@param`\n> </details>\n> Done.\n\n---\n\n_[toxcore/tox.h, line 313 at r1](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgV-r1-313:-KVTihqKCHcwHvI8dNMx:b-896fix) ([raw file](https://github.com/toktok/c-toxcore/blob/2fceb90bd70896ff022b71c6855987c7b7d10307/toxcore/tox.h#L313)):_\n<details><summary>\n\n<i>Previously, zetok wrote…</i></summary>\n\n\n\n> Should be added that it's in bytes, since some people think that this refers to number of chars.\n> </details>\n> Done.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/toktok/c-toxcore/200)_\n\n<!-- Sent from Reviewable.io -->\n",
            "created_at": "2016-11-01T07:21:58Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#issuecomment-257504100",
            "id": 257504100,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzUwNDEwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/257504100/reactions"
            },
            "updated_at": "2016-11-01T07:21:58Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/257504100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "author_association": "NONE",
            "body": "Review status: 0 of 11 files reviewed at latest revision, 60 unresolved discussions, some commit checks failed.\n\n---\n\n_[toxcore/DHT.h, line 248 at r5](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgQ-r5-248:-KVTl3iuw_DHNrVBdo8N:b3f0kaa) ([raw file](https://github.com/toktok/c-toxcore/blob/20ec0b254a70a997fde4172d5e503a0c81536d60/toxcore/DHT.h#L248)):_\n<details><summary>\n\n<i>Previously, iphydf wrote…</i></summary>\n\n\n\n> Why is this part of the DHT? Does any DHT functionality depend on it?\n> </details>\n> nothing in DHT depends on it, but I'm using the DHT to access Network_Core so this was the path of least resistance.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/toktok/c-toxcore/200)_\n\n<!-- Sent from Reviewable.io -->\n",
            "created_at": "2016-11-02T01:39:10Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#issuecomment-257749101",
            "id": 257749101,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1Nzc0OTEwMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/257749101/reactions"
            },
            "updated_at": "2016-11-02T01:39:10Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/257749101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Review status: 0 of 11 files reviewed at latest revision, 63 unresolved discussions, some commit checks failed.\n\n---\n\n_[toxcore/query.h, line 52 at r6](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KV_w2nj9i8KilBvAGtM:-KV_w2nj9i8KilBvAGtN:b7o6955) ([raw file](https://github.com/toktok/c-toxcore/blob/3f4adab0a0e94d0b3456bfa966fcc97b09a32483/toxcore/query.h#L52)):_\n\n> ``` objc\n>  *\n>  * void *object is expected to always be a DHT *object. That cant be enforced by type here because\n>  *      the DHT sturct contains a Pending_Queries struct defined in this file.\n> ```\n\nstruct\nAlso, it can be enforced: use forward declarations.\nBut, don't. Why should it be a DHT object? Why not a queries (or whatever) object?\n\n---\n\n_[toxcore/tox.api.h, line 290 at r6](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KV_xD7dWnjip0atnyY7:-KV_xD7dWnjip0atnyY8:b-xzz8mj) ([raw file](https://github.com/toktok/c-toxcore/blob/3f4adab0a0e94d0b3456bfa966fcc97b09a32483/toxcore/tox.api.h#L290)):_\n\n> ``` objc\n> \n> /**\n>  * Max size (in bytes) of names queried by toxcore\n> ```\n\nAdd '.' at EOL.\n\n---\n\n_[toxcore/tox.api.h, line 764 at r6](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KV_whGTwPyrLKAuqI8z:-KV_whGTwPyrLKAuqI9-:bxxwr14) ([raw file](https://github.com/toktok/c-toxcore/blob/3f4adab0a0e94d0b3456bfa966fcc97b09a32483/toxcore/tox.api.h#L764)):_\n\n> ``` objc\n>    */\n>   bool request(string address, uint16_t port, const uint8_t[PUBLIC_KEY_SIZE] public_key,\n>     const uint8_t[length <= MAX_QUERY_NAME_SIZE] name) {\n> ```\n\nAlign with `(`. In general, follow the style of surrounding code.\n\n---\n\n_[toxcore/tox.c, line 496 at r4](https://reviewable.io:443/reviews/toktok/c-toxcore/200#-KVKH93EDOTLiJOOezgU-r4-496:-KV_wvWcBXnz0658syhz:ba87u0f) ([raw file](https://github.com/toktok/c-toxcore/blob/b538668b9829c8754a92d42b265e626843db66e4/toxcore/tox.c#L496)):_\n<details><summary>\n\n<i>Previously, GrayHatter (Gregory Mullen) wrote…</i></summary>\n\n\n\n> what do you mean?\n> </details>\n> The function is roughly equivalent to `return false`. It always evaluates to the same value.\n\n---\n\n_Comments from [Reviewable](https://reviewable.io:443/reviews/toktok/c-toxcore/200)_\n\n<!-- Sent from Reviewable.io -->\n",
            "created_at": "2016-11-02T16:53:18Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#issuecomment-257926512",
            "id": 257926512,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzkyNjUxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/257926512/reactions"
            },
            "updated_at": "2016-11-02T16:53:18Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/257926512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@GrayHatter this is messed up. Please open a new PR.\n",
            "created_at": "2016-11-06T01:30:11Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/200#issuecomment-258654076",
            "id": 258654076,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODY1NDA3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/258654076/reactions"
            },
            "updated_at": "2016-11-06T01:30:11Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/258654076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200/comments",
    "commit_data": [
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0/comments",
            "commit": {
                "author": {
                    "date": "2016-09-30T22:01:17Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-22T22:45:12Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "replace NET_PACKET defines with an enum",
                "tree": {
                    "sha": "8f455a4b73f8588e547ff4ad2b1a70c0ce26f198",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/8f455a4b73f8588e547ff4ad2b1a70c0ce26f198"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0",
                "verification": {
                    "payload": "tree 8f455a4b73f8588e547ff4ad2b1a70c0ce26f198\nparent 6d0c8060c1e1034a5d5047799b0493c137e53364\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1475272877 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477176312 -0700\n\nreplace NET_PACKET defines with an enum\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYC+v4AAoJEAVYy+p76Ffds6oIAJXnrVVSCpRG6gb5satAe7RH\nvhGd1MHyqlXSLmf/5HVdrnrUcRlFOk9cBfjiFie2jPjLeUIr0vLmbWEnyjUUcReb\n7eUngxeQFJVdD2gbSfmoAS0BlZn1Rm1N8uD4Fc0dQTolU6T6XOanmQOnsXQ/q2Ik\nd9MSBQV92aTXOEJwIqJApM7n53usW37f1EyETteWaTHXyOSE7XcdcM1PrvXsgzko\npgPu+IxbZ33dtxYYlsw51TXi8M2g7LFtue/l0IDwL7FdYkOHuVHubJ+2dk2jau4S\nl+Q6azaumVC1bwCoU3Di9VSeMH6GqzJGM1XC0kLGk3KpOz/Rhcs9nDqj1NVCBNc=\n=d98m\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6MDIyZWVmYmM4ZDNiYTQ2NmFjMTIxZTFlZTVlYTNjNTBjZTdmOWJkMA==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/6d0c8060c1e1034a5d5047799b0493c137e53364",
                    "sha": "6d0c8060c1e1034a5d5047799b0493c137e53364",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/6d0c8060c1e1034a5d5047799b0493c137e53364"
                }
            ],
            "sha": "022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/eb635eff2ea97a9d2f687edecffc76f448dce478/comments",
            "commit": {
                "author": {
                    "date": "2016-10-01T03:29:53Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-22T22:45:12Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Basic skel structure of the Query functions",
                "tree": {
                    "sha": "fcfe1ae75f98516df129bcabe516ab834db0263c",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/fcfe1ae75f98516df129bcabe516ab834db0263c"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/eb635eff2ea97a9d2f687edecffc76f448dce478",
                "verification": {
                    "payload": "tree fcfe1ae75f98516df129bcabe516ab834db0263c\nparent 022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1475292593 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477176312 -0700\n\nBasic skel structure of the Query functions\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYC+v4AAoJEAVYy+p76Ffd9qgH/3sEnR4OT/frjSwkDvNER8Ta\nJnWnCVUkCcBsH0LHkJ7wyH7Duvp21P89Fv227UkqY5nkLuTxUepu1nQr+0+hd/Y/\n/90TqFPrU80I6BRkmWfEcnVvb6yOuZvHq5Vvbq2megWx0i4KEnQcyP+4UOU4Lw0Z\nPgvc6mUtw4jOOq2tXEFprqKsIFb3M6+E0SorZoGK6ssiJn1CPVR8YcS9zYrBdRAp\nm+R355GuPfs8Lq0IMzB/eUC4kqEtKAMgbgI9zzPxRYzbjIZrDL/tXVg1vkKq0XQM\nrV2KIy3CyXaoJ3ZhS9d/kUTkVT4+aXOSfdOZzEOqkGmX1d6kz85NvEm/Amio77k=\n=XGLC\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/eb635eff2ea97a9d2f687edecffc76f448dce478",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6ZWI2MzVlZmYyZWE5N2E5ZDJmNjg3ZWRlY2ZmYzc2ZjQ0OGRjZTQ3OA==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0",
                    "sha": "022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/022eefbc8d3ba466ac121e1ee5ea3c50ce7f9bd0"
                }
            ],
            "sha": "eb635eff2ea97a9d2f687edecffc76f448dce478",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/eb635eff2ea97a9d2f687edecffc76f448dce478"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/90065eb1bb783a5dcbae38cc53c91a187bf0992c/comments",
            "commit": {
                "author": {
                    "date": "2016-10-02T22:17:57Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-22T22:46:56Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "query.c basic add to pending functions",
                "tree": {
                    "sha": "d133008d9320ec529c4df525f18bb91f086c1a6f",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/d133008d9320ec529c4df525f18bb91f086c1a6f"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/90065eb1bb783a5dcbae38cc53c91a187bf0992c",
                "verification": {
                    "payload": "tree d133008d9320ec529c4df525f18bb91f086c1a6f\nparent eb635eff2ea97a9d2f687edecffc76f448dce478\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1475446677 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477176416 -0700\n\nquery.c basic add to pending functions\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYC+xgAAoJEAVYy+p76Ffd2f0H/3WrbHy4hPO290zJZZXbzIBG\nbDkelmcVBRadUcgOH4UWL8zNr13Qouh6drYjgLDI9FPO7CbetE3npxB2n2ya/s8G\nTUPkNL2VtbK+vqE0HD5WJrdB970dhTtMr2J5/5ZDnoUJ1uTqIuZRlcTG7rTyWO8A\nYP9pDfyCBIFBQES/n4aw0LgvJINZTQ5Sar+Rc0ucCfMrTkGck0Zq3thiHKvSw2/N\nBPz8Z0Udc2zHOMowkjaZCs4QvdOlkgE+4IJXUjiv72FL3nqCnH5Qmf4KzHSBcSKV\nwKSN31QBPNVj7gZ0i6rmEGCUYiPOdKwFKBEB3U17vcJisJ6j/wnLq+mFgiWFvhM=\n=QpQB\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/90065eb1bb783a5dcbae38cc53c91a187bf0992c",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6OTAwNjVlYjFiYjc4M2E1ZGNiYWUzOGNjNTNjOTFhMTg3YmYwOTkyYw==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/eb635eff2ea97a9d2f687edecffc76f448dce478",
                    "sha": "eb635eff2ea97a9d2f687edecffc76f448dce478",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/eb635eff2ea97a9d2f687edecffc76f448dce478"
                }
            ],
            "sha": "90065eb1bb783a5dcbae38cc53c91a187bf0992c",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/90065eb1bb783a5dcbae38cc53c91a187bf0992c"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/9bf926261bd17b8ecb45be9ce7f8282f3de11901/comments",
            "commit": {
                "author": {
                    "date": "2016-10-17T01:05:51Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-22T22:46:56Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "uint8_t to char for query fxns",
                "tree": {
                    "sha": "ac07b6546bcec0ccd1416b3e639bb813e5946443",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/ac07b6546bcec0ccd1416b3e639bb813e5946443"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/9bf926261bd17b8ecb45be9ce7f8282f3de11901",
                "verification": {
                    "payload": "tree ac07b6546bcec0ccd1416b3e639bb813e5946443\nparent 90065eb1bb783a5dcbae38cc53c91a187bf0992c\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1476666351 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477176416 -0700\n\nuint8_t to char for query fxns\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYC+xgAAoJEAVYy+p76FfdWYkH/A9B+huPogN5g5darxSoWmX+\ndnvwsZ00HeZyQp48zHMdTNNbTKJADXnHlTKph6yyavcjuyiPBz1kaxrCvRVRnkeH\nO93byn0uhME/4c+/Od6EBU3KKgL4PGUMK09RiOsn596e7iR8putqsueZ4TUuEtR+\nGYWwdJnXuf4hF3MKcasNlw8x7XWMZ7LRsC/DnocAV85K7JVWXho9pgaEdOKUv+9l\nHzKS9lIZ6cfuH/zRR0vnyOmL3zuUtexQuxPj+/59AaZZH+2+q5qbaT3SKIMRiTf6\njiOvRMX/jxcoXOeYdT4mqkgbOBX42VktA7JRSsbW9PR9GlMjsb8XnWTJwAR8MXk=\n=m55K\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/9bf926261bd17b8ecb45be9ce7f8282f3de11901",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6OWJmOTI2MjYxYmQxN2I4ZWNiNDViZTljZTdmODI4MmYzZGUxMTkwMQ==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/90065eb1bb783a5dcbae38cc53c91a187bf0992c",
                    "sha": "90065eb1bb783a5dcbae38cc53c91a187bf0992c",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/90065eb1bb783a5dcbae38cc53c91a187bf0992c"
                }
            ],
            "sha": "9bf926261bd17b8ecb45be9ce7f8282f3de11901",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/9bf926261bd17b8ecb45be9ce7f8282f3de11901"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/591012f159b55f771c17ae410fdffdf2444fc1d0/comments",
            "commit": {
                "author": {
                    "date": "2016-10-22T22:45:03Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-22T23:01:57Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Tox-Named add functions to send the packet",
                "tree": {
                    "sha": "78b81144dc4e12cb0b9e85065915924f66a18979",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/78b81144dc4e12cb0b9e85065915924f66a18979"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/591012f159b55f771c17ae410fdffdf2444fc1d0",
                "verification": {
                    "payload": "tree 78b81144dc4e12cb0b9e85065915924f66a18979\nparent 9bf926261bd17b8ecb45be9ce7f8282f3de11901\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477176303 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477177317 -0700\n\nTox-Named add functions to send the packet\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYC+/lAAoJEAVYy+p76Ffd5iUH/2WplZh3azbQLZZRQ/L7FZ7A\nPdTmFLJxVLVALNu/X2pyjXzIpH8/7JcGl61UFiTsmWaj6+yL+V3rXjAl/34TXkyT\nA/lpFk6nh+JT0SPnFBanyP+1VaWgKg3hit0uAC/yHocM9EWvQSL6B5Qer+xZfACJ\nIjeE1ZEMMJOT21QOb+hGJm6V4o1ZonylrboLtXxpInZyiNGMTh3+T1AXgu4Hh5YB\n7qRc9VYoxkk3mtAuVRBo4I1s6XZeIYNK25wV9FXgkiYy3X3rINoM122xNgm5xcb4\nwtDXzEYi8pEERG5cbxrDwwigBRHcasbVO7EPbtLFJINBfY6bQSwrXIAMQPICFvI=\n=hpDW\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/591012f159b55f771c17ae410fdffdf2444fc1d0",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6NTkxMDEyZjE1OWI1NWY3NzFjMTdhZTQxMGZkZmZkZjI0NDRmYzFkMA==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/9bf926261bd17b8ecb45be9ce7f8282f3de11901",
                    "sha": "9bf926261bd17b8ecb45be9ce7f8282f3de11901",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/9bf926261bd17b8ecb45be9ce7f8282f3de11901"
                }
            ],
            "sha": "591012f159b55f771c17ae410fdffdf2444fc1d0",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/591012f159b55f771c17ae410fdffdf2444fc1d0"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128/comments",
            "commit": {
                "author": {
                    "date": "2016-10-23T03:01:04Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-23T03:01:04Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Added first part of test, outgoing query working",
                "tree": {
                    "sha": "9f18ddfc1ee83f62efd43c8d6680c301dd7b87bf",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/9f18ddfc1ee83f62efd43c8d6680c301dd7b87bf"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128",
                "verification": {
                    "payload": "tree 9f18ddfc1ee83f62efd43c8d6680c301dd7b87bf\nparent 591012f159b55f771c17ae410fdffdf2444fc1d0\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477191664 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477191664 -0700\n\nAdded first part of test, outgoing query working\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYDCfwAAoJEAVYy+p76FfdpiYH/ApBmf4guuKXVV3T1MFeuas/\nNFuGymhIUNzR8GW7mIr6FZ2OR0Gq9TsKgXD/4eWtIhNLptx8R5Z+OHT4sKcKCBdm\nl9eVTY2K4vR/4+tjAbLPsnJmnIuYoAah64iGJhEyyvNRKbbFh7wzSfI6OyJo7N2W\nEcBsK98IIf1Evz9Mu6liBQH9hE0qvtJbBsSijCtN0SEOtVl3yih3W1lRib1i8J6o\naDx8m19Ip9MSUOR3GgqE6eqFq4uttFM9gqEX+apVELFjI58nzlU/OxApyBwnzlT1\n/+LUh1xGuaMXN3+SwXcEhJDVuwuoyPqHTTy7XLwnBiymwpSspPm8J5cAIA8fkLs=\n=U7t3\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6Y2QzYjY0YzM4Mjk5ZWNmNWFmYWY4ZTc1ZDM4ZTRjNmZkZTNiZjEyOA==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/591012f159b55f771c17ae410fdffdf2444fc1d0",
                    "sha": "591012f159b55f771c17ae410fdffdf2444fc1d0",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/591012f159b55f771c17ae410fdffdf2444fc1d0"
                }
            ],
            "sha": "cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/643889a1b38a643d37069465cc97fffc37899ca9/comments",
            "commit": {
                "author": {
                    "date": "2016-10-23T05:55:41Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-23T05:55:41Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Add name resolution support to toxcore\n\nThis finished the name resolution features of tox-named, which will\nhopefully replace ToxDNS. Incoming, and outgoing packets are tested and\nverified with the auto test.\n\nThere are still a few more additions, including, but not limited to packet\nresend timeouts, and max number of retrys.",
                "tree": {
                    "sha": "ed752233f598f2ff36ba933b56cdc1bc91bca268",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/ed752233f598f2ff36ba933b56cdc1bc91bca268"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/643889a1b38a643d37069465cc97fffc37899ca9",
                "verification": {
                    "payload": "tree ed752233f598f2ff36ba933b56cdc1bc91bca268\nparent cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477202141 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477202141 -0700\n\nAdd name resolution support to toxcore\n\nThis finished the name resolution features of tox-named, which will\nhopefully replace ToxDNS. Incoming, and outgoing packets are tested and\nverified with the auto test.\n\nThere are still a few more additions, including, but not limited to packet\nresend timeouts, and max number of retrys.\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYDFGqAAoJEAVYy+p76Ffdv1MH/3bDtN47MsSJUya2o6qGQb1P\nueFknP7ooUXgt0sR9aVgq/CXB63jYXJ/tDN9PsgG1XDyhAApjGuf+CvLvmtz32z2\n8MsFEdoBfIJ55Ly8Kw60JSsWWqK51X+wp/L5JsFb0iPbxNV673rfDFTw13k0S+5m\nep1ZI/pXgvVRixu1YtGW5RHEOrYKhhnhlHNsnrDRlI62GYYtyIG3/WfJXJ4GG1LT\nNV9D+z8XyFrnqLysglBLZk2hUKS/cIvX2BGxIPCS06ZjKF2pRRNCivYgMt0o0AtS\nI49M/GbohSAEJP+ttL9x4mjnJpFXXwg8TpR5WChWy9NLdYGp7JItSmsad4Fq6vM=\n=OYNc\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/643889a1b38a643d37069465cc97fffc37899ca9",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6NjQzODg5YTFiMzhhNjQzZDM3MDY5NDY1Y2M5N2ZmZmMzNzg5OWNhOQ==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128",
                    "sha": "cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/cd3b64c38299ecf5afaf8e75d38e4c6fde3bf128"
                }
            ],
            "sha": "643889a1b38a643d37069465cc97fffc37899ca9",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/643889a1b38a643d37069465cc97fffc37899ca9"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/dddf4f77621f4b84b67054dbe393e6874062b192/comments",
            "commit": {
                "author": {
                    "date": "2016-10-23T06:13:34Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-23T06:13:34Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Add ipv6 to the auto_test",
                "tree": {
                    "sha": "4f2b4cfdf4d451935c80e29ddd1181cc71242848",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/4f2b4cfdf4d451935c80e29ddd1181cc71242848"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/dddf4f77621f4b84b67054dbe393e6874062b192",
                "verification": {
                    "payload": "tree 4f2b4cfdf4d451935c80e29ddd1181cc71242848\nparent 643889a1b38a643d37069465cc97fffc37899ca9\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477203214 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477203214 -0700\n\nAdd ipv6 to the auto_test\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYDFUOAAoJEAVYy+p76FfdtdIH/RlzO2iOfZqgAomoHJKKgAA6\n+DtcPdBLTFGS0xqeJDn748TruiY0ng+h6oTkHn5ZXKGhLwqE+CK1Q6mDkDmwwLvl\n1b0iIQhRuE3gmMYoGLFYSyCfd+9DaBVNiDmTQ1t8WAewu/+or2PSHFNdx/HWE60x\nFd7H5o1VjKoUItQ8mTc7AucEi1s8wbJ3s8LXalj/omtztjb5G0Qw/ayH+kT1qUuY\nEaZ/FteKmTrPZUP6IGYi8rB6ihiXm8SxO7J2S9E2tfCekDcvFgK4TGeTmUDDtnWF\nXcmOWvav/O2Q+neTIioOHP6uauzW+IGFH4k9NVBP1mlGyf8ERR19xCMmp1ErF+g=\n=kOyX\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/dddf4f77621f4b84b67054dbe393e6874062b192",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6ZGRkZjRmNzc2MjFmNGI4NGI2NzA1NGRiZTM5M2U2ODc0MDYyYjE5Mg==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/643889a1b38a643d37069465cc97fffc37899ca9",
                    "sha": "643889a1b38a643d37069465cc97fffc37899ca9",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/643889a1b38a643d37069465cc97fffc37899ca9"
                }
            ],
            "sha": "dddf4f77621f4b84b67054dbe393e6874062b192",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/dddf4f77621f4b84b67054dbe393e6874062b192"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/0dd5c78d389c4493d9d938560bdafe2cbea88ac5/comments",
            "commit": {
                "author": {
                    "date": "2016-10-23T06:21:32Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-23T06:21:32Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "removed debug printf's",
                "tree": {
                    "sha": "11cb726c64cc64b6dd3a41df4bd0c1cb08fb2cbb",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/11cb726c64cc64b6dd3a41df4bd0c1cb08fb2cbb"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/0dd5c78d389c4493d9d938560bdafe2cbea88ac5",
                "verification": {
                    "payload": "tree 11cb726c64cc64b6dd3a41df4bd0c1cb08fb2cbb\nparent dddf4f77621f4b84b67054dbe393e6874062b192\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477203692 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477203692 -0700\n\nremoved debug printf's\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYDFbsAAoJEAVYy+p76FfdIjEH/2m5W5qYFbr7pepI6XVxlHFB\nJ/E00fRXDJ6iYajpSccDJZJjs41lbGN4eQcvaLokfCITD+CSxZshroHVNCtfSiCS\nAeOTml2dPSM79iuTKiJHeFxpmXhb4kDD4Krf4gTah175xDyz4LJMyJQ7gad3fThO\neoXTcSyKNrimaJr5YH7592q3EOvtIo5gxltuqsau3ejrg9gMSrZ50WelNiwbCM3+\n1X5zjKfFaox6/GV/GzPIowaXaL6nA4OQptOcM7rc25a6EXtGuct4J2ejo51dwV3z\nRCz9UYvmAu1VmW0i+Owaew02PpL25HPbRkvu84XBwisF3hgrj2tsa1YyIDPnZD4=\n=z//h\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/0dd5c78d389c4493d9d938560bdafe2cbea88ac5",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6MGRkNWM3OGQzODljNDQ5M2Q5ZDkzODU2MGJkYWZlMmNiZWE4OGFjNQ==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/dddf4f77621f4b84b67054dbe393e6874062b192",
                    "sha": "dddf4f77621f4b84b67054dbe393e6874062b192",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/dddf4f77621f4b84b67054dbe393e6874062b192"
                }
            ],
            "sha": "0dd5c78d389c4493d9d938560bdafe2cbea88ac5",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/0dd5c78d389c4493d9d938560bdafe2cbea88ac5"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/2fceb90bd70896ff022b71c6855987c7b7d10307/comments",
            "commit": {
                "author": {
                    "date": "2016-10-23T06:39:31Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-23T06:39:31Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "disable ipv6 on travis\n\nIt was wishful thinking to hope it might work",
                "tree": {
                    "sha": "9fefd812aaf587656c41df9856161dc73d3d4a1e",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/9fefd812aaf587656c41df9856161dc73d3d4a1e"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/2fceb90bd70896ff022b71c6855987c7b7d10307",
                "verification": {
                    "payload": "tree 9fefd812aaf587656c41df9856161dc73d3d4a1e\nparent 0dd5c78d389c4493d9d938560bdafe2cbea88ac5\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477204771 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477204771 -0700\n\ndisable ipv6 on travis\n\nIt was wishful thinking to hope it might work\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYDFsjAAoJEAVYy+p76FfdVUgIAI/PJN8KYtPArZMLiBKWrtyI\n6vG0qRzzC2vf3L4p3kF5bRENLWVOhtnNbEtTJOd+251T7h7Q9ZQDWGJuoAW5CBvf\n1NivQUQJ0AUR9a/vG3uis7C+IsKwpS6Nvx66Gjcg64Md1MauJE0cjkoaLju3aNgf\nQPGioYQ8IdSGrDfc7Bbpa2CU1fxNMpg170jSm6Q+cxlMNOwoFkkSRs6J8EIwUb15\nJS2nAe6cjifdG8hBgYBDNciX2/DIlO9FfnDROe4eH7QkiINK/cgFV8Bv9JqN8gsT\nyCB4DBjWxrxBFwbiTY9qScxYmRSM5lPbzCpS4aa2Xpp2bgQWlf0okYRPA9i1CUU=\n=27TZ\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/2fceb90bd70896ff022b71c6855987c7b7d10307",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6MmZjZWI5MGJkNzA4OTZmZjAyMmI3MWM2ODU1OTg3YzdiN2QxMDMwNw==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/0dd5c78d389c4493d9d938560bdafe2cbea88ac5",
                    "sha": "0dd5c78d389c4493d9d938560bdafe2cbea88ac5",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/0dd5c78d389c4493d9d938560bdafe2cbea88ac5"
                }
            ],
            "sha": "2fceb90bd70896ff022b71c6855987c7b7d10307",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/2fceb90bd70896ff022b71c6855987c7b7d10307"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/044475df2c52fd630997248add1cf296632996fc/comments",
            "commit": {
                "author": {
                    "date": "2016-10-23T21:50:27Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-23T21:50:27Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "add unit test todo reminders to the auto_test",
                "tree": {
                    "sha": "9504932b70011044b56e3ff27361ad0ceafa3984",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/9504932b70011044b56e3ff27361ad0ceafa3984"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/044475df2c52fd630997248add1cf296632996fc",
                "verification": {
                    "payload": "tree 9504932b70011044b56e3ff27361ad0ceafa3984\nparent 2fceb90bd70896ff022b71c6855987c7b7d10307\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477259427 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477259427 -0700\n\nadd unit test todo reminders to the auto_test\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYDTCjAAoJEAVYy+p76FfdBwgH/iJDpePUxwNkUI0feK1mWMks\n/QKTIgbW8KiVVZwgB5Q+IgGvCqIwhuD20q0Uurq2SudOTXg3ZOlRf2IHDuTqEbFx\n/6jGjI8Fwn4V51MMrdA1gIu003VNy1vGXWyNFxiGmU7NX8vvBSF/n17bqx0ns9h3\nZzFsETXq9FivgnLpe2jxobtgfxHyAyfuFVf3GMxblUz9h/h8yQ0ldZcgCgfDi/qg\nt62jK1D5JJH3KwVmSjZ/lZqpEFD9hncV6CgSnlMMMm5iTZTWUJCXX0fYE8s88WwK\ni3RMv+FE2dcGSpPfzWgcfTg4HQmSsR+a5bVmdJfNwFZmvLIMr9uErp/UAfQSp80=\n=2IJd\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/044475df2c52fd630997248add1cf296632996fc",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6MDQ0NDc1ZGYyYzUyZmQ2MzA5OTcyNDhhZGQxY2YyOTY2MzI5OTZmYw==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/2fceb90bd70896ff022b71c6855987c7b7d10307",
                    "sha": "2fceb90bd70896ff022b71c6855987c7b7d10307",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/2fceb90bd70896ff022b71c6855987c7b7d10307"
                }
            ],
            "sha": "044475df2c52fd630997248add1cf296632996fc",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/044475df2c52fd630997248add1cf296632996fc"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/c4388ee1344d577e8a4d04269f77ab2690e38f2f/comments",
            "commit": {
                "author": {
                    "date": "2016-10-23T22:10:19Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-23T22:10:19Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Completed comments in tox-named",
                "tree": {
                    "sha": "fb228c631711f8697e173283f4621b8b301179da",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/fb228c631711f8697e173283f4621b8b301179da"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/c4388ee1344d577e8a4d04269f77ab2690e38f2f",
                "verification": {
                    "payload": "tree fb228c631711f8697e173283f4621b8b301179da\nparent 044475df2c52fd630997248add1cf296632996fc\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477260619 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477260619 -0700\n\nCompleted comments in tox-named\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYDTVLAAoJEAVYy+p76Ffd9fMH/jJUGFiOCaJnbinj0vE7f1XD\n2FwD7Et8bR4u9W0XGLuBi+aBZxulix/WNT37RHgdYvdDODEYL1kudLLQsrDBLhZK\n6tfN5YLTdOnRVk9N/O0o4q45TFxhJVN2L/yCTCdgsRVUNggcjQMIXSJuT37bYcCz\ngzh4VR0JCAp/AVPTEWo7E2MBgb+COacBM+XOLF+kl43ijJ1bgftQwrT3WNAWkEny\ncQ3clYZ1DPeOKjTibIkkc24gEBeIY9w4Kvo7bMxJy340EnUokeO1Xq4yxyVFyXkg\n4Cfh7bpk/AMcuJBWALS/ihDdVLzxXLJPD+rOevmyRBKBYb7KCkM7VdLXbDKUP9c=\n=eRvJ\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6YzQzODhlZTEzNDRkNTc3ZThhNGQwNDI2OWY3N2FiMjY5MGUzOGYyZg==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/044475df2c52fd630997248add1cf296632996fc",
                    "sha": "044475df2c52fd630997248add1cf296632996fc",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/044475df2c52fd630997248add1cf296632996fc"
                }
            ],
            "sha": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/c4388ee1344d577e8a4d04269f77ab2690e38f2f"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/b538668b9829c8754a92d42b265e626843db66e4/comments",
            "commit": {
                "author": {
                    "date": "2016-10-24T04:50:50Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-24T04:50:50Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Speed and size improvements to tox-named functions\n\nper @JFreegman's suggestions, a lot of the structs where changed to pointers.\n\nAlso removed a malloc in the P_QUERY struct *name => name[size];",
                "tree": {
                    "sha": "92313869d170f68acd64fdde03bf417ea2969306",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/92313869d170f68acd64fdde03bf417ea2969306"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/b538668b9829c8754a92d42b265e626843db66e4",
                "verification": {
                    "payload": "tree 92313869d170f68acd64fdde03bf417ea2969306\nparent c4388ee1344d577e8a4d04269f77ab2690e38f2f\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477284650 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477284650 -0700\n\nSpeed and size improvements to tox-named functions\n\nper @JFreegman's suggestions, a lot of the structs where changed to pointers.\n\nAlso removed a malloc in the P_QUERY struct *name => name[size];\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYDZOYAAoJEAVYy+p76Ffd6AcIAJqEB8Wh5koMdAzkFNerRhgD\nrD9P25p1fRlPcr3zfvQIuVgjUPFX8Ix1Kh6SgdeaBsTQfe/HE4p+R1mFSnhg9LU6\noSkELezsGN8dSeysjq8mN7N6ulru3u4eQJa+RahqrplyyF7EQ0fiwIErQ6ZnI0Bi\ntMrZ9uPUVM26lFHESP5Kr1MQbNXIwOd43lLt66kleo1k6SB6OTRR0YGXjleSw5kZ\nmoCSmoisoNIDhDwwJAH6tNF2wN5Vu/eHhF1cEIUJYKdCctMiJghTEzc7NPEPSQ9J\nEAcf69RSR3TfeFOwcQz//TuGN/UZgg+CPVqJv3ZofPe0yQlN0PfnLKbdf0KcMJs=\n=XVLG\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/b538668b9829c8754a92d42b265e626843db66e4",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6YjUzODY2OGI5ODI5Yzg3NTRhOTJkNDJiMjY1ZTYyNjg0M2RiNjZlNA==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/c4388ee1344d577e8a4d04269f77ab2690e38f2f",
                    "sha": "c4388ee1344d577e8a4d04269f77ab2690e38f2f",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/c4388ee1344d577e8a4d04269f77ab2690e38f2f"
                }
            ],
            "sha": "b538668b9829c8754a92d42b265e626843db66e4",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/b538668b9829c8754a92d42b265e626843db66e4"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/20ec0b254a70a997fde4172d5e503a0c81536d60/comments",
            "commit": {
                "author": {
                    "date": "2016-10-26T07:17:20Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-10-26T07:17:20Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Comments and fixes from review by @iphydf",
                "tree": {
                    "sha": "f2e4ff2aa01dfa3cf5c3cf03d461771a0100c8e7",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/f2e4ff2aa01dfa3cf5c3cf03d461771a0100c8e7"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/20ec0b254a70a997fde4172d5e503a0c81536d60",
                "verification": {
                    "payload": "tree f2e4ff2aa01dfa3cf5c3cf03d461771a0100c8e7\nparent b538668b9829c8754a92d42b265e626843db66e4\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477466240 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477466240 -0700\n\nComments and fixes from review by @iphydf\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYEFiAAAoJEAVYy+p76Ffde20H/3GRZMW4s5hyetURE/57vvHI\naFdayuybggUqcl2aFZo6Rf4hZPS6G0kixhdlYwjo2TOZKt/eIjlGegXdK4H0XWd7\nq0OTGn2ZyenmxAejAXk+dYkE6NHkEJN+/E9ZphisgGvGriTMNOEFd2xROjnZUFXg\nM1cvN7KMz1sNUwKFyca5hJRi3hX8UkJcs4+PbTc3nNLuOkoGlDNbGxaNrHVXsESu\nBE2bJjQfq4DcwPGt694bEaWxJSDoK2cc06u6iDYayZTrSXwHjIc9jhUbIwCYhF2+\nQiOxCKwq+foQ3VSA6JMVOmXA4sH26G0ZEyhTN414bk9F07sAJVqUnJgH+cGzBws=\n=+AiS\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/20ec0b254a70a997fde4172d5e503a0c81536d60",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6MjBlYzBiMjU0YTcwYTk5N2ZkZTQxNzJkNWU1MDNhMGM4MTUzNmQ2MA==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/b538668b9829c8754a92d42b265e626843db66e4",
                    "sha": "b538668b9829c8754a92d42b265e626843db66e4",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/b538668b9829c8754a92d42b265e626843db66e4"
                }
            ],
            "sha": "20ec0b254a70a997fde4172d5e503a0c81536d60",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/20ec0b254a70a997fde4172d5e503a0c81536d60"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/db585d45c7fcbf16cda30aad5b22eeae2f2d7f34/comments",
            "commit": {
                "author": {
                    "date": "2016-11-01T06:19:27Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-11-01T06:19:27Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "query fixes to style, documentation, bugs (leaking alloc)",
                "tree": {
                    "sha": "e356f6ac06f2a0dfe908f36d9ac4822979e8395f",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/e356f6ac06f2a0dfe908f36d9ac4822979e8395f"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/db585d45c7fcbf16cda30aad5b22eeae2f2d7f34",
                "verification": {
                    "payload": "tree e356f6ac06f2a0dfe908f36d9ac4822979e8395f\nparent 20ec0b254a70a997fde4172d5e503a0c81536d60\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477981167 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477981167 -0700\n\nquery fixes to style, documentation, bugs (leaking alloc)\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYGDPvAAoJEAVYy+p76FfdjVwH+wZqBpIRnRRwRDelmVmodMkp\nCm/HFq+0zd9No5xX1nEKrjqF6eZ4IPHMuTnLtbc6iuXEW89+Am0kHRmJuKnrjy7J\n7OH4gn4bQ/fcEhj3LjSQYj2i/PL2O6EmZPHvVKMLGLklVTHGI6095aUTDHlPMgoZ\nU4hsHCYTubN4eon7kmCRP4E2WmMIhmh0AL0276nOiLHd7lJcTQXa2hrOkxTr96J/\nBrqPqLqLC+BS/u4nZtWs2pKHs3qseA5iOZrBIXx4NV0d3iZs1Ve2c8Art8uH4ybU\nF5zUHSpF9kl9yWqh8cUT2kpNKzrVFhrwY8bMOmiChvJ0O7rXy94BC1jn5wKY/ro=\n=CJ7S\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/db585d45c7fcbf16cda30aad5b22eeae2f2d7f34",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6ZGI1ODVkNDVjN2ZjYmYxNmNkYTMwYWFkNWIyMmVlYWUyZjJkN2YzNA==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/20ec0b254a70a997fde4172d5e503a0c81536d60",
                    "sha": "20ec0b254a70a997fde4172d5e503a0c81536d60",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/20ec0b254a70a997fde4172d5e503a0c81536d60"
                }
            ],
            "sha": "db585d45c7fcbf16cda30aad5b22eeae2f2d7f34",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/db585d45c7fcbf16cda30aad5b22eeae2f2d7f34"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/18de3d3e7cbc6e825d3cbcce580a96f73148b45d/comments",
            "commit": {
                "author": {
                    "date": "2016-11-01T07:03:55Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-11-01T07:03:55Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "fixup! query fixes to style, documentation, bugs (leaking alloc)",
                "tree": {
                    "sha": "0a48a558377c92b33943c3c6dce93f02373b29d4",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/0a48a558377c92b33943c3c6dce93f02373b29d4"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/18de3d3e7cbc6e825d3cbcce580a96f73148b45d",
                "verification": {
                    "payload": "tree 0a48a558377c92b33943c3c6dce93f02373b29d4\nparent db585d45c7fcbf16cda30aad5b22eeae2f2d7f34\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477983835 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477983835 -0700\n\nfixup! query fixes to style, documentation, bugs (leaking alloc)\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYGD5bAAoJEAVYy+p76FfdNaUH/1HDXaidlouKKF1tqS4Bhllv\nVWipHPekdHLb4ND956hzqHRTkD00acCsIrY4jLlhzK16aG+y6ibChBP0QU/3NsAE\ndR2wwUCYiyaoKgwK97qySnOr51XON3yc2aBumoUrvzMBYaorWp8uSm2wxQ5UOQ2t\nN94I4Xf2cvjNUVKyOON+L/qdQFkkQ5p0FfOQgEycIN1Pid/LuU3pCvu6bQBrncGb\nF+7elYXoIbB3urIOPIR+A3azwVLTUjBhYE8c5icFMS8yJ0ZtAUpbqC5/lrQuVbrA\n7IIgl9+/DwNwJoaz65EROL5aa9UbswUnFxrnrC2TuTaFGcJG6RKrJZSE6BQa5HE=\n=1OwK\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/18de3d3e7cbc6e825d3cbcce580a96f73148b45d",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6MThkZTNkM2U3Y2JjNmU4MjVkM2NiY2NlNTgwYTk2ZjczMTQ4YjQ1ZA==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/db585d45c7fcbf16cda30aad5b22eeae2f2d7f34",
                    "sha": "db585d45c7fcbf16cda30aad5b22eeae2f2d7f34",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/db585d45c7fcbf16cda30aad5b22eeae2f2d7f34"
                }
            ],
            "sha": "18de3d3e7cbc6e825d3cbcce580a96f73148b45d",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/18de3d3e7cbc6e825d3cbcce580a96f73148b45d"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/e7465d5bcc2a4b819415171787d69d6dadd0dde3/comments",
            "commit": {
                "author": {
                    "date": "2016-11-01T07:13:20Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-11-01T07:13:20Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Fix typo in api header docs",
                "tree": {
                    "sha": "63e5266bbf2f8a322be9591923aae690c0d854bb",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/63e5266bbf2f8a322be9591923aae690c0d854bb"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/e7465d5bcc2a4b819415171787d69d6dadd0dde3",
                "verification": {
                    "payload": "tree 63e5266bbf2f8a322be9591923aae690c0d854bb\nparent 18de3d3e7cbc6e825d3cbcce580a96f73148b45d\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477984400 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477984400 -0700\n\nFix typo in api header docs\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYGECQAAoJEAVYy+p76Ffdd4AH/1M2qhdVQnwY7/PiU2pCmcFn\n706Tilg3Q7Qi7t1JM67dxaX3ev7jvaLKcoLOqF2HQSqxRvI2/5x1ONQNtyHu0oa+\n2Oj4bIB1nskLwPQ4FcN4zi/AL43gEE5llsBAPbu+B/UFIn1bpUfYm+IF9ETrJfp7\nNcmDOKffEgLGhaIL8rrcSDOORQpBCpp5dSXaXee79TdLF8mL1fo61QtlUBWQcgJv\nxzH+Y1bHHbZlNomYFkP7M/YQo6M4jNb5Mbk+G9/+ROpouxD2jdqRddeeKehxZ96+\ng6fu0d6vC67bzf9tn6Ut60QCRRSpnQaAYrUCJyum4/xY6eBeGxy79VIiIno119o=\n=vDzX\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/e7465d5bcc2a4b819415171787d69d6dadd0dde3",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6ZTc0NjVkNWJjYzJhNGI4MTk0MTUxNzE3ODdkNjlkNmRhZGQwZGRlMw==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/18de3d3e7cbc6e825d3cbcce580a96f73148b45d",
                    "sha": "18de3d3e7cbc6e825d3cbcce580a96f73148b45d",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/18de3d3e7cbc6e825d3cbcce580a96f73148b45d"
                }
            ],
            "sha": "e7465d5bcc2a4b819415171787d69d6dadd0dde3",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/e7465d5bcc2a4b819415171787d69d6dadd0dde3"
        },
        {
            "author": null,
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/3f4adab0a0e94d0b3456bfa966fcc97b09a32483/comments",
            "commit": {
                "author": {
                    "date": "2016-11-01T07:21:38Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2016-11-01T07:21:38Z",
                    "email": "greg@grayhatter.com",
                    "name": "Gregory Mullen (grayhatter)"
                },
                "message": "Invert error checking in query.c to simplify flow",
                "tree": {
                    "sha": "adc0c0793fd613eadfb88bd4dc94575ed60d9151",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/adc0c0793fd613eadfb88bd4dc94575ed60d9151"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
                "verification": {
                    "payload": "tree adc0c0793fd613eadfb88bd4dc94575ed60d9151\nparent e7465d5bcc2a4b819415171787d69d6dadd0dde3\nauthor Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477984898 -0700\ncommitter Gregory Mullen (grayhatter) <greg@grayhatter.com> 1477984898 -0700\n\nInvert error checking in query.c to simplify flow\n",
                    "reason": "no_user",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJYGEKCAAoJEAVYy+p76FfdSIEIAIBWrzSKnIhXUZAeEIpl25mD\npiewmRt9Boc0jw0tkAk5EqoNQ98gN3Z4Fq2GIuPE569KWSmyLLgmuGzPWnMx8K8S\n13wOzC76dIxxhT1y/NfnfzLHHr+RdX0sKuWSGax+VU4WKXHRbj1hk77+zzV45tQW\nIIJtKynjD5ygq3UcAEda3TYtAnTorakZOdGBcqnXZd2tfcY+ukrCZRnEKKxKk9ug\nGXq5HYV+KmWQUgcy5jNzHtIOEBsFiG3PjN82o5vFO+aK6E+yFS4SgLMmjXX8fN/k\n4ALbndG4zz4Ed926Et8X5/NjbZmgRNDEA3GEUSdc4bYfqsWPCLzoYQUvDRDGssw=\n=Siti\n-----END PGP SIGNATURE-----",
                    "verified": false
                }
            },
            "committer": null,
            "html_url": "https://github.com/TokTok/c-toxcore/commit/3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "node_id": "MDY6Q29tbWl0MjgwMTM1NDI6M2Y0YWRhYjBhMGU5NGQwYjM0NTZiZmE5NjZmY2M5N2IwOWEzMjQ4Mw==",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/e7465d5bcc2a4b819415171787d69d6dadd0dde3",
                    "sha": "e7465d5bcc2a4b819415171787d69d6dadd0dde3",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/e7465d5bcc2a4b819415171787d69d6dadd0dde3"
                }
            ],
            "sha": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/3f4adab0a0e94d0b3456bfa966fcc97b09a32483"
        }
    ],
    "commits_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200/commits",
    "created_at": "2016-10-23T05:59:56Z",
    "diff_url": "https://github.com/TokTok/c-toxcore/pull/200.diff",
    "draft": false,
    "head": {
        "label": "GrayHatter:toxdns",
        "ref": "toxdns",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/GrayHatter/toxcore/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/GrayHatter/toxcore/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/GrayHatter/toxcore/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/GrayHatter/toxcore/branches{/branch}",
            "clone_url": "https://github.com/GrayHatter/toxcore.git",
            "collaborators_url": "https://api.github.com/repos/GrayHatter/toxcore/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/GrayHatter/toxcore/comments{/number}",
            "commits_url": "https://api.github.com/repos/GrayHatter/toxcore/commits{/sha}",
            "compare_url": "https://api.github.com/repos/GrayHatter/toxcore/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/GrayHatter/toxcore/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/GrayHatter/toxcore/contributors",
            "created_at": "2014-12-15T00:31:10Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/GrayHatter/toxcore/deployments",
            "description": "The future of online communications.",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/GrayHatter/toxcore/downloads",
            "events_url": "https://api.github.com/repos/GrayHatter/toxcore/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/GrayHatter/toxcore/forks",
            "full_name": "GrayHatter/toxcore",
            "git_commits_url": "https://api.github.com/repos/GrayHatter/toxcore/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/GrayHatter/toxcore/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/GrayHatter/toxcore/git/tags{/sha}",
            "git_url": "git://github.com/GrayHatter/toxcore.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://tox.chat",
            "hooks_url": "https://api.github.com/repos/GrayHatter/toxcore/hooks",
            "html_url": "https://github.com/GrayHatter/toxcore",
            "id": 28013542,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/GrayHatter/toxcore/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/GrayHatter/toxcore/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/GrayHatter/toxcore/issues{/number}",
            "keys_url": "https://api.github.com/repos/GrayHatter/toxcore/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/GrayHatter/toxcore/labels{/name}",
            "language": "C",
            "languages_url": "https://api.github.com/repos/GrayHatter/toxcore/languages",
            "license": {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "node_id": "MDc6TGljZW5zZTk=",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
            },
            "merges_url": "https://api.github.com/repos/GrayHatter/toxcore/merges",
            "milestones_url": "https://api.github.com/repos/GrayHatter/toxcore/milestones{/number}",
            "mirror_url": null,
            "name": "toxcore",
            "node_id": "MDEwOlJlcG9zaXRvcnkyODAxMzU0Mg==",
            "notifications_url": "https://api.github.com/repos/GrayHatter/toxcore/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
                "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
                "followers_url": "https://api.github.com/users/GrayHatter/followers",
                "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
                "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GrayHatter",
                "id": 243408,
                "login": "GrayHatter",
                "node_id": "MDQ6VXNlcjI0MzQwOA==",
                "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
                "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
                "repos_url": "https://api.github.com/users/GrayHatter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GrayHatter"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/GrayHatter/toxcore/pulls{/number}",
            "pushed_at": "2017-05-15T00:05:39Z",
            "releases_url": "https://api.github.com/repos/GrayHatter/toxcore/releases{/id}",
            "size": 77801,
            "ssh_url": "git@github.com:GrayHatter/toxcore.git",
            "stargazers_count": 13,
            "stargazers_url": "https://api.github.com/repos/GrayHatter/toxcore/stargazers",
            "statuses_url": "https://api.github.com/repos/GrayHatter/toxcore/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/GrayHatter/toxcore/subscribers",
            "subscription_url": "https://api.github.com/repos/GrayHatter/toxcore/subscription",
            "svn_url": "https://github.com/GrayHatter/toxcore",
            "tags_url": "https://api.github.com/repos/GrayHatter/toxcore/tags",
            "teams_url": "https://api.github.com/repos/GrayHatter/toxcore/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/GrayHatter/toxcore/git/trees{/sha}",
            "updated_at": "2019-05-18T13:54:10Z",
            "url": "https://api.github.com/repos/GrayHatter/toxcore",
            "visibility": "public",
            "watchers": 13,
            "watchers_count": 13,
            "web_commit_signoff_required": false
        },
        "sha": "3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
            "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
            "followers_url": "https://api.github.com/users/GrayHatter/followers",
            "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
            "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/GrayHatter",
            "id": 243408,
            "login": "GrayHatter",
            "node_id": "MDQ6VXNlcjI0MzQwOA==",
            "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
            "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
            "repos_url": "https://api.github.com/users/GrayHatter/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/GrayHatter"
        }
    },
    "html_url": "https://github.com/TokTok/c-toxcore/pull/200",
    "id": 90506223,
    "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/200",
    "labels": [
        {
            "color": "84b6eb",
            "default": true,
            "description": "New feature for the user, not a new feature for build script",
            "id": 403702218,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw0MDM3MDIyMTg=",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/labels/enhancement"
        },
        {
            "color": "d4c5f9",
            "default": false,
            "description": "Network",
            "id": 438496130,
            "name": "network",
            "node_id": "MDU6TGFiZWw0Mzg0OTYxMzA=",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/labels/network"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b1942d6b2d6eb52261edc893f425028e478a0a43",
    "merged_at": null,
    "milestone": {
        "closed_at": "2016-11-25T16:08:26Z",
        "closed_issues": 20,
        "created_at": "2016-11-05T22:00:58Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
            "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
            "followers_url": "https://api.github.com/users/iphydf/followers",
            "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
            "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/iphydf",
            "id": 10647936,
            "login": "iphydf",
            "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
            "organizations_url": "https://api.github.com/users/iphydf/orgs",
            "received_events_url": "https://api.github.com/users/iphydf/received_events",
            "repos_url": "https://api.github.com/users/iphydf/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/iphydf"
        },
        "description": "",
        "due_on": "2016-11-25T08:00:00Z",
        "html_url": "https://github.com/TokTok/c-toxcore/milestone/11",
        "id": 2116775,
        "labels_url": "https://api.github.com/repos/TokTok/c-toxcore/milestones/11/labels",
        "node_id": "MDk6TWlsZXN0b25lMjExNjc3NQ==",
        "number": 11,
        "open_issues": 0,
        "state": "closed",
        "title": "v0.0.5",
        "updated_at": "2016-11-25T16:08:26Z",
        "url": "https://api.github.com/repos/TokTok/c-toxcore/milestones/11"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0OTA1MDYyMjM=",
    "number": 200,
    "patch_url": "https://github.com/TokTok/c-toxcore/pull/200.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/TokTok/c-toxcore/statuses/3f4adab0a0e94d0b3456bfa966fcc97b09a32483",
    "title": "Tox-Named",
    "updated_at": "2016-11-06T01:30:11Z",
    "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/200",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/243408?v=4",
        "events_url": "https://api.github.com/users/GrayHatter/events{/privacy}",
        "followers_url": "https://api.github.com/users/GrayHatter/followers",
        "following_url": "https://api.github.com/users/GrayHatter/following{/other_user}",
        "gists_url": "https://api.github.com/users/GrayHatter/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/GrayHatter",
        "id": 243408,
        "login": "GrayHatter",
        "node_id": "MDQ6VXNlcjI0MzQwOA==",
        "organizations_url": "https://api.github.com/users/GrayHatter/orgs",
        "received_events_url": "https://api.github.com/users/GrayHatter/received_events",
        "repos_url": "https://api.github.com/users/GrayHatter/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/GrayHatter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GrayHatter/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/GrayHatter"
    }
}