{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/issues/2485/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2485/commits"
        },
        "html": {
            "href": "https://github.com/TokTok/c-toxcore/pull/2485"
        },
        "issue": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/issues/2485"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2485/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2485"
        },
        "statuses": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/statuses/22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75"
        }
    },
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
        "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
        "followers_url": "https://api.github.com/users/Green-Sky/followers",
        "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
        "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Green-Sky",
        "id": 2938071,
        "login": "Green-Sky",
        "node_id": "MDQ6VXNlcjI5MzgwNzE=",
        "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
        "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
        "repos_url": "https://api.github.com/users/Green-Sky/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Green-Sky"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
            "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
            "followers_url": "https://api.github.com/users/Green-Sky/followers",
            "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
            "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Green-Sky",
            "id": 2938071,
            "login": "Green-Sky",
            "node_id": "MDQ6VXNlcjI5MzgwNzE=",
            "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
            "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
            "repos_url": "https://api.github.com/users/Green-Sky/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Green-Sky"
        }
    ],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "TokTok:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/TokTok/c-toxcore/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/TokTok/c-toxcore/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/TokTok/c-toxcore/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/TokTok/c-toxcore/branches{/branch}",
            "clone_url": "https://github.com/TokTok/c-toxcore.git",
            "collaborators_url": "https://api.github.com/repos/TokTok/c-toxcore/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/comments{/number}",
            "commits_url": "https://api.github.com/repos/TokTok/c-toxcore/commits{/sha}",
            "compare_url": "https://api.github.com/repos/TokTok/c-toxcore/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/TokTok/c-toxcore/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/TokTok/c-toxcore/contributors",
            "created_at": "2016-07-06T08:15:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/TokTok/c-toxcore/deployments",
            "description": "The future of online communications.",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/TokTok/c-toxcore/downloads",
            "events_url": "https://api.github.com/repos/TokTok/c-toxcore/events",
            "fork": true,
            "forks": 283,
            "forks_count": 283,
            "forks_url": "https://api.github.com/repos/TokTok/c-toxcore/forks",
            "full_name": "TokTok/c-toxcore",
            "git_commits_url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/TokTok/c-toxcore/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/TokTok/c-toxcore/git/tags{/sha}",
            "git_url": "git://github.com/TokTok/c-toxcore.git",
            "has_discussions": false,
            "has_downloads": false,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "https://tox.chat",
            "hooks_url": "https://api.github.com/repos/TokTok/c-toxcore/hooks",
            "html_url": "https://github.com/TokTok/c-toxcore",
            "id": 62703642,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/TokTok/c-toxcore/issues{/number}",
            "keys_url": "https://api.github.com/repos/TokTok/c-toxcore/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/TokTok/c-toxcore/labels{/name}",
            "language": "C",
            "languages_url": "https://api.github.com/repos/TokTok/c-toxcore/languages",
            "license": {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "node_id": "MDc6TGljZW5zZTk=",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
            },
            "merges_url": "https://api.github.com/repos/TokTok/c-toxcore/merges",
            "milestones_url": "https://api.github.com/repos/TokTok/c-toxcore/milestones{/number}",
            "mirror_url": null,
            "name": "c-toxcore",
            "node_id": "MDEwOlJlcG9zaXRvcnk2MjcwMzY0Mg==",
            "notifications_url": "https://api.github.com/repos/TokTok/c-toxcore/notifications{?since,all,participating}",
            "open_issues": 210,
            "open_issues_count": 210,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17427091?v=4",
                "events_url": "https://api.github.com/users/TokTok/events{/privacy}",
                "followers_url": "https://api.github.com/users/TokTok/followers",
                "following_url": "https://api.github.com/users/TokTok/following{/other_user}",
                "gists_url": "https://api.github.com/users/TokTok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TokTok",
                "id": 17427091,
                "login": "TokTok",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE3NDI3MDkx",
                "organizations_url": "https://api.github.com/users/TokTok/orgs",
                "received_events_url": "https://api.github.com/users/TokTok/received_events",
                "repos_url": "https://api.github.com/users/TokTok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TokTok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TokTok/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/TokTok"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls{/number}",
            "pushed_at": "2024-02-23T16:21:31Z",
            "releases_url": "https://api.github.com/repos/TokTok/c-toxcore/releases{/id}",
            "size": 37461,
            "ssh_url": "git@github.com:TokTok/c-toxcore.git",
            "stargazers_count": 2116,
            "stargazers_url": "https://api.github.com/repos/TokTok/c-toxcore/stargazers",
            "statuses_url": "https://api.github.com/repos/TokTok/c-toxcore/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/TokTok/c-toxcore/subscribers",
            "subscription_url": "https://api.github.com/repos/TokTok/c-toxcore/subscription",
            "svn_url": "https://github.com/TokTok/c-toxcore",
            "tags_url": "https://api.github.com/repos/TokTok/c-toxcore/tags",
            "teams_url": "https://api.github.com/repos/TokTok/c-toxcore/teams",
            "topics": [
                "cryptography",
                "encryption",
                "network",
                "p2p",
                "security",
                "toxcore"
            ],
            "trees_url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees{/sha}",
            "updated_at": "2024-02-23T18:58:26Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore",
            "visibility": "public",
            "watchers": 2116,
            "watchers_count": 2116,
            "web_commit_signoff_required": false
        },
        "sha": "4e603bb61391b55eb3a41a042bd2b635bcc78854",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/17427091?v=4",
            "events_url": "https://api.github.com/users/TokTok/events{/privacy}",
            "followers_url": "https://api.github.com/users/TokTok/followers",
            "following_url": "https://api.github.com/users/TokTok/following{/other_user}",
            "gists_url": "https://api.github.com/users/TokTok/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/TokTok",
            "id": 17427091,
            "login": "TokTok",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE3NDI3MDkx",
            "organizations_url": "https://api.github.com/users/TokTok/orgs",
            "received_events_url": "https://api.github.com/users/TokTok/received_events",
            "repos_url": "https://api.github.com/users/TokTok/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/TokTok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TokTok/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/TokTok"
        }
    },
    "body": "supersedes https://github.com/TokTok/c-toxcore/pull/2482, when https://github.com/TokTok/c-toxcore/pull/2392 is merged\n\n<!-- Reviewable:start -->\n- - -\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/TokTok/c-toxcore/2485)\n<!-- Reviewable:end -->\n",
    "closed_at": "2023-12-20T12:12:41Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2485#discussion_r1432581833"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2485"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/1432581833"
                }
            },
            "author_association": "MEMBER",
            "body": "*latter *ideally",
            "commit_id": "22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75",
            "created_at": "2023-12-20T11:12:05Z",
            "diff_hunk": "@@ -0,0 +1,789 @@\n+// SPDX-License-Identifier: GPL-3.0-or-later\n+// Copyright © 2023 The TokTok team.\n+\n+// this file can be used to generate event.c files\n+// requires c++17\n+\n+#include <fstream>\n+#include <iostream>\n+#include <string>\n+#include <algorithm>\n+#include <vector>\n+#include <variant>\n+#include <map>\n+\n+std::string str_tolower(std::string s) {\n+    std::transform(s.begin(), s.end(), s.begin(), [](unsigned char c){ return std::tolower(c); });\n+    return s;\n+}\n+\n+std::string str_toupper(std::string s) {\n+    std::transform(s.begin(), s.end(), s.begin(), [](unsigned char c){ return std::toupper(c); });\n+    return s;\n+}\n+\n+std::string output_folder = \"out\";\n+\n+struct EventTypeTrivial {\n+    std::string type; // eg uint32_t\n+    std::string name; // eg friend_number\n+};\n+\n+struct EventTypeByteRange {\n+    // type is always uint8_t * for data AND uint32_t for length\n+    std::string name_data; // eg data\n+    std::string name_length; // eg data_length\n+    std::string name_length_cb; // eg length // TODO: merge with normal?\n+};\n+\n+// TODO: EventTypeByteArray\n+\n+using EventType = std::variant<EventTypeTrivial, EventTypeByteRange>;\n+\n+// helper type for the visitor #4\n+template<class... Ts> struct overloaded : Ts... { using Ts::operator()...; };\n+// explicit deduction guide (not needed as of C++20)\n+template<class... Ts> overloaded(Ts...) -> overloaded<Ts...>;\n+\n+std::string bin_pack_name_from_type(const std::string& type) {\n+    if (type == \"uint64_t\") {\n+        return \"bin_pack_u64\";\n+    } else if (type == \"uint32_t\") {\n+        return \"bin_pack_u32\";\n+    } else if (type == \"uint16_t\") {\n+        return \"bin_pack_u16\";\n+    } else if (type == \"uint8_t\") {\n+        return \"bin_pack_u8\";\n+    } else if (type == \"bool\") {\n+        return \"bin_pack_bool\";\n+    // only unpack is special TODO(Green-Sky): should we change that?\n+    //} else if (type == \"Tox_User_Status\") {\n+        //return \"tox_pack_user_status\";\n+    //} else if (type == \"Tox_Conference_Type\") {\n+        //return \"tox_pack_conference_type\";\n+    } else {\n+        //std::cerr << \"unknown type \" << type << \"\\n\";\n+        //exit(1);\n+        // assume enum -> u32\n+        return \"bin_pack_u32\";\n+    }\n+}\n+std::string bin_unpack_name_from_type(const std::string& type) {\n+    if (type == \"uint64_t\") {\n+        return \"bin_unpack_u64\";\n+    } else if (type == \"uint32_t\") {\n+        return \"bin_unpack_u32\";\n+    } else if (type == \"uint16_t\") {\n+        return \"bin_unpack_u16\";\n+    } else if (type == \"uint8_t\") {\n+        return \"bin_unpack_u8\";\n+    } else if (type == \"bool\") {\n+        return \"bin_unpack_bool\";\n+    } else if (type == \"Tox_User_Status\") {\n+        return \"tox_unpack_user_status\";\n+    } else if (type == \"Tox_Conference_Type\") {\n+        return \"tox_unpack_conference_type\";\n+    } else if (type == \"Tox_Message_Type\") {\n+        return \"tox_unpack_message_type\";\n+    } else if (type == \"Tox_File_Control\") {\n+        return \"tox_unpack_file_control\";\n+    } else if (type == \"Tox_Connection\") {\n+        return \"tox_unpack_connection\";\n+    } else if (type == \"Tox_Group_Privacy_State\") {\n+        return \"tox_unpack_group_privacy_state\";\n+    } else if (type == \"Tox_Group_Voice_State\") {\n+        return \"tox_unpack_group_voice_state\";\n+    } else if (type == \"Tox_Group_Topic_Lock\") {\n+        return \"tox_unpack_group_topic_lock\";\n+    } else if (type == \"Tox_Group_Join_Fail\") {\n+        return \"tox_unpack_group_join_fail\";\n+    } else if (type == \"Tox_Group_Mod_Event\") {\n+        return \"tox_unpack_group_mod_event\";\n+    } else if (type == \"Tox_Group_Exit_Type\") {\n+        return \"tox_unpack_group_exit_type\";\n+    } else {\n+        std::cerr << \"unknown type \" << type << \"\\n\";\n+        exit(1);\n+        // assume enum -> u32\n+        return \"bin_unpack_u32\";\n+    }\n+}\n+\n+void generate_event_impl(const std::string& event_name, const std::vector<EventType>& event_types) {\n+    const std::string event_name_l = str_tolower(event_name);\n+    std::string file_name = output_folder + \"/\" + event_name_l + \".c\";\n+\n+    std::ofstream f(file_name);\n+    if (!f.good()) {\n+        std::cerr << \"error opening file to write \" << file_name << \"\\n\";\n+        exit(1);\n+    }\n+\n+    f << R\"(/* SPDX-License-Identifier: GPL-3.0-or-later\n+ * Copyright © 2023 The TokTok team.\n+ */\n+\n+#include \"events_alloc.h\"\n+\n+#include <assert.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+#include \"../bin_pack.h\"\n+#include \"../bin_unpack.h\"\n+#include \"../ccompat.h\"\n+#include \"../tox.h\"\n+#include \"../tox_events.h\"\n+#include \"../tox_unpack.h\"\n+\n+\n+/*****************************************************\n+ *\n+ * :: struct and accessors\n+ *\n+ *****************************************************/\n+\n+\n+)\";\n+\n+    // gen struct\n+    f << \"struct Tox_Event_\" << event_name << \" {\\n\";\n+    for (const auto& t : event_types) {\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    f << \"    \" << t.type << \" \" << t.name << \";\\n\";\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    f << \"    \" << \"uint8_t\" << \" *\" << t.name_data << \";\\n\";\n+                    f << \"    \" << \"uint32_t\" << \" \" << t.name_length << \";\\n\";\n+                }\n+            },\n+            t\n+        );\n+    }\n+    f << \"};\\n\\n\";\n+\n+    // gen setters and getters\n+    for (const auto& t : event_types) {\n+        // setter\n+        f << \"non_null()\\n\";\n+        f << \"static \" << (t.index() == 0 ? \"void\" : \"bool\") << \" tox_event_\" << event_name_l << \"_set_\";\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    f << t.name;\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    f << t.name_data;\n+                }\n+            },\n+            t\n+        );\n+        f << \"(Tox_Event_\" << event_name << \" *\" << event_name_l << \",\\n\";\n+        f << \"        \";\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    f << t.type << \" \" << t.name << \")\\n\";\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    f << \"const uint8_t *\" << t.name_data << \", uint32_t \" << t.name_length << \")\\n\";\n+                }\n+            },\n+            t\n+        );\n+        f << \"{\\n    assert(\" << event_name_l << \" != nullptr);\\n\";\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    f << \"    \" << event_name_l << \"->\" << t.name << \" = \" << t.name << \";\\n\";\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    f << \"\\n    if (\" << event_name_l << \"->\" << t.name_data << \" != nullptr) {\\n\";\n+                    f << \"        free(\" << event_name_l << \"->\" << t.name_data << \");\\n\";\n+                    f << \"        \" << event_name_l << \"->\" << t.name_data << \" = nullptr;\\n\";\n+                    f << \"        \" << event_name_l << \"->\" << t.name_length << \" = 0;\\n\";\n+                    f << \"    }\\n\\n\";\n+                    f << \"    \" << event_name_l << \"->\" << t.name_data << \" = (uint8_t *)malloc(\" << t.name_length << \");\\n\\n\";\n+                    f << \"    if (\" << event_name_l << \"->\" << t.name_data << \" == nullptr) {\\n\";\n+                    f << \"        return false;\\n    }\\n\\n\";\n+                    f << \"    memcpy(\" << event_name_l << \"->\" << t.name_data << \", \" << t.name_data << \", \" << t.name_length << \");\\n\";\n+                    f << \"    \" << event_name_l << \"->\" << t.name_length << \" = \" << t.name_length << \";\\n\";\n+                    f << \"    return true;\\n\";\n+                }\n+            },\n+            t\n+        );\n+        f << \"}\\n\";\n+\n+        // getter\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    //f << \"non_null()\\n\"; // TODO: is this missing in the original?\n+                    f << t.type << \" tox_event_\" << event_name_l << \"_get_\" << t.name;\n+                    f << \"(const Tox_Event_\" << event_name << \" *\" << event_name_l << \")\\n\";\n+                    f << \"{\\n    assert(\" << event_name_l << \" != nullptr);\\n\";\n+                    f << \"    return \" << event_name_l << \"->\" << t.name << \";\\n}\\n\\n\";\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    //f << \"non_null()\\n\"; // TODO: is this missing in the original?\n+                    f << \"uint32_t tox_event_\" << event_name_l << \"_get_\" << t.name_length;\n+                    f << \"(const Tox_Event_\" << event_name << \" *\" << event_name_l << \")\\n\";\n+                    f << \"{\\n    assert(\" << event_name_l << \" != nullptr);\\n\";\n+                    f << \"    return \" << event_name_l << \"->\" << t.name_length << \";\\n}\\n\";\n+                    f << \"const uint8_t *tox_event_\" << event_name_l << \"_get_\" << t.name_data;\n+                    f << \"(const Tox_Event_\" << event_name << \" *\" << event_name_l << \")\\n\";\n+                    f << \"{\\n    assert(\" << event_name_l << \" != nullptr);\\n\";\n+                    f << \"    return \" << event_name_l << \"->\" << t.name_data << \";\\n}\\n\\n\";\n+                }\n+            },\n+            t\n+        );\n+    }\n+\n+\n+    // gen contruct\n+    f << \"non_null()\\n\";\n+    f << \"static void tox_event_\" << event_name_l << \"_construct(Tox_Event_\" << event_name << \" *\" << event_name_l << \")\\n{\\n\";\n+    // TODO: initialize all members properly\n+    // TODO: check if _NONE is universal\n+    // str_toupper(\n+    f << \"    *\" << event_name_l << \" = (Tox_Event_\" << event_name << \") {\\n        0\\n    };\\n}\\n\";\n+\n+    // gen destruct\n+    f << \"non_null()\\n\";\n+    f << \"static void tox_event_\" << event_name_l << \"_destruct(Tox_Event_\" << event_name << \" *\" << event_name_l << \", const Memory *mem)\\n{\\n\";\n+    size_t data_count = 0;\n+    for (const auto& t : event_types) {\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial&) {},\n+                [&](const EventTypeByteRange& t) {\n+                    f << \"    free(\" << event_name_l << \"->\" << t.name_data << \");\\n\";\n+                    //f << \"    mem->funcs->free(mem->obj, \" << event_name_l << \"->\" << t.name_data << \");\\n\";\n+                    data_count++;\n+                }\n+            },\n+            t\n+        );\n+    }\n+    if (data_count == 0) {\n+        f << \"    return;\\n\";\n+    }\n+    f << \"}\\n\\n\";\n+\n+    // pack\n+    f << \"bool tox_event_\" << event_name_l << \"_pack(\\n\";\n+    f << \"    const Tox_Event_\" << event_name << \" *event, Bin_Pack *bp)\\n{\\n\";\n+    f << \"    assert(event != nullptr);\\n\";\n+    f << \"    return bin_pack_array(bp, 2)\\n\";\n+    f << \"           && bin_pack_u32(bp, TOX_EVENT_\" << str_toupper(event_name) << \")\";\n+    if (event_types.size() > 1) {\n+        f << \"\\n           && bin_pack_array(bp, \" << event_types.size() << \")\";\n+    }\n+\n+    for (const auto& t : event_types) {\n+        f << \"\\n           && \";\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    f << bin_pack_name_from_type(t.type);\n+                    f << \"(bp, event->\" << t.name << \")\";\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    f << \"bin_pack_bin(bp, event->\" << t.name_data << \", event->\" << t.name_length << \")\";\n+                }\n+            },\n+            t\n+        );\n+    }\n+    f << \";\\n}\\n\\n\";\n+\n+    // unpack\n+    f << \"non_null()\\n\";\n+    f << \"static bool tox_event_\" << event_name_l << \"_unpack_into(\\n\";\n+    f << \"    Tox_Event_\" << event_name << \" *event, Bin_Unpack *bu)\\n{\\n\";\n+    f << \"    assert(event != nullptr);\\n\";\n+    if (event_types.size() > 1) {\n+        f << \"    if (!bin_unpack_array_fixed(bu, \" << event_types.size() << \", nullptr)) {\\n        return false;\\n    }\\n\\n\";\n+    }\n+\n+    bool first = true;\n+    for (const auto& t : event_types) {\n+        if (first) {\n+            f << \"    return \";\n+        } else {\n+            f << \"\\n           && \";\n+        }\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    f << bin_unpack_name_from_type(t.type);\n+                    f << \"(bu, &event->\" << t.name << \")\";\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    f << \"bin_unpack_bin(bu, &event->\" << t.name_data << \", &event->\" << t.name_length << \")\";\n+                }\n+            },\n+            t\n+        );\n+        first = false;\n+    }\n+    f << \";\\n}\\n\\n\";\n+\n+    f << R\"(\n+/*****************************************************\n+ *\n+ * :: new/free/add/get/size/unpack\n+ *\n+ *****************************************************/\n+\n+)\";\n+\n+    f << \"const Tox_Event_\" << event_name << \" *tox_event_get_\" << event_name_l << \"(const Tox_Event *event)\\n{\\n\";\n+    f << \"    return event->type == TOX_EVENT_\" << str_toupper(event_name) << \" ? event->data.\" << event_name_l << \" : nullptr;\\n}\\n\\n\";\n+\n+    // new\n+    f << \"Tox_Event_\" << event_name << \" *tox_event_\" << event_name_l << \"_new(const Memory *mem)\\n{\\n\";\n+    f << \"    Tox_Event_\" << event_name << \" *const \" << event_name_l << \" =\\n\";\n+    f << \"        (Tox_Event_\" << event_name << \" *)mem_alloc(mem, sizeof(Tox_Event_\" << event_name << \"));\\n\\n\";\n+    f << \"    if (\" << event_name_l << \" == nullptr) {\\n        return nullptr;\\n    }\\n\\n\";\n+    f << \"    tox_event_\" << event_name_l << \"_construct(\" << event_name_l << \");\\n\";\n+    f << \"    return \" << event_name_l << \";\\n}\\n\\n\";\n+\n+    // free\n+    f << \"void tox_event_\" << event_name_l << \"_free(Tox_Event_\" << event_name << \" *\" << event_name_l << \", const Memory *mem)\\n{\\n\";\n+    f << \"    if (\" << event_name_l << \" != nullptr) {\\n\";\n+    f << \"        tox_event_\" << event_name_l << \"_destruct(\" << event_name_l << \", mem);\\n    }\\n\";\n+    f << \"    mem_delete(mem, \" << event_name_l << \");\\n}\\n\\n\";\n+\n+    // add\n+    f << \"non_null()\\n\";\n+    f << \"static Tox_Event_\" << event_name << \" *tox_events_add_\" << event_name_l << \"(Tox_Events *events, const Memory *mem)\\n{\\n\";\n+    f << \"    Tox_Event_\" << event_name << \" *const \" << event_name_l << \" = tox_event_\" << event_name_l << \"_new(mem);\\n\\n\";\n+    f << \"    if (\" << event_name_l << \" == nullptr) {\\n\";\n+    f << \"        return nullptr;\\n    }\\n\\n\";\n+    f << \"    Tox_Event event;\\n\";\n+    f << \"    event.type = TOX_EVENT_\" << str_toupper(event_name) << \";\\n\";\n+    f << \"    event.data.\" << event_name_l << \" = \" << event_name_l << \";\\n\\n\";\n+    f << \"    tox_events_add(events, &event);\\n\";\n+    f << \"    return \" << event_name_l << \";\\n}\\n\\n\";\n+\n+    // get\n+    f << \"const Tox_Event_\" << event_name << \" *tox_events_get_\" << event_name_l << \"(const Tox_Events *events, uint32_t index)\\n{\\n\";\n+    f << \"    uint32_t \" << event_name_l << \"_index = 0;\\n\";\n+    f << \"    const uint32_t size = tox_events_get_size(events);\\n\\n\";\n+    f << \"    for (uint32_t i = 0; i < size; ++i) {\\n\";\n+    f << \"        if (\" << event_name_l << \"_index > index) {\\n\";\n+    f << \"            return nullptr;\\n        }\\n\\n\";\n+    f << \"        if (events->events[i].type == TOX_EVENT_\" << str_toupper(event_name) << \") {\\n\";\n+    f << \"            const Tox_Event_\" << event_name << \" *\" << event_name_l << \" = events->events[i].data.\" << event_name_l << \";\\n\";\n+    f << \"            if (\" << event_name_l << \"_index == index) {\\n\";\n+    f << \"                return \" << event_name_l << \";\\n            }\\n\";\n+    f << \"            ++\" << event_name_l << \"_index;\\n        }\\n    }\\n\\n    return nullptr;\\n}\\n\\n\";\n+\n+    // get size\n+    f << \"uint32_t tox_events_get_\" << event_name_l << \"_size(const Tox_Events *events)\\n{\\n\";\n+    f << \"    uint32_t \" << event_name_l << \"_size = 0;\\n\";\n+    f << \"    const uint32_t size = tox_events_get_size(events);\\n\\n\";\n+    f << \"    for (uint32_t i = 0; i < size; ++i) {\\n\";\n+    f << \"        if (events->events[i].type == TOX_EVENT_\" << str_toupper(event_name) << \") {\\n\";\n+    f << \"            ++\" << event_name_l << \"_size;\\n        }\\n    }\\n\\n\";\n+    f << \"    return \" << event_name_l << \"_size;\\n}\\n\\n\";\n+\n+    // unpack\n+    f << \"bool tox_event_\" << event_name_l << \"_unpack(\\n\";\n+    f << \"    Tox_Event_\" << event_name << \" **event, Bin_Unpack *bu, const Memory *mem)\\n{\\n\";\n+    f << \"    assert(event != nullptr);\\n\";\n+    f << \"    *event = tox_event_\" << event_name_l << \"_new(mem);\\n\\n\";\n+    f << \"    if (*event == nullptr) {\\n        return false;\\n    }\\n\\n\";\n+    f << \"    return tox_event_\" << event_name_l << \"_unpack_into(*event, bu);\\n}\\n\\n\";\n+\n+    // alloc\n+    f << \"non_null()\\n\";\n+    f << \"static Tox_Event_\" << event_name << \" *tox_event_\" << event_name_l << \"_alloc(void *user_data)\\n{\\n\";\n+    f << \"    Tox_Events_State *state = tox_events_alloc(user_data);\\n\";\n+    f << \"    assert(state != nullptr);\\n\\n\";\n+    f << \"    if (state->events == nullptr) {\\n        return nullptr;\\n    }\\n\\n\";\n+    f << \"    Tox_Event_\" << event_name << \" *\" << event_name_l << \" = tox_events_add_\" << event_name_l << \"(state->events, state->mem);\\n\\n\";\n+    f << \"    if (\" << event_name_l << \" == nullptr) {\\n\";\n+    f << \"        state->error = TOX_ERR_EVENTS_ITERATE_MALLOC;\\n        return nullptr;\\n    }\\n\\n\";\n+    f << \"    return \" << event_name_l << \";\\n}\\n\\n\";\n+\n+\n+    f << R\"(\n+/*****************************************************\n+ *\n+ * :: event handler\n+ *\n+ *****************************************************/\n+\n+\n+)\";\n+    f << \"void tox_events_handle_\" << event_name_l << \"(Tox *tox\";\n+\n+    for (const auto& t : event_types) {\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    f << \", \" << t.type << \" \" << t.name;\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    f << \", const uint8_t *\" << t.name_data << \", size_t \" << t.name_length_cb;\n+                }\n+            },\n+            t\n+        );\n+    }\n+\n+    f << \",\\n        void *user_data)\\n{\\n\";\n+    f << \"    Tox_Event_\" << event_name << \" *\" << event_name_l << \" = tox_event_\" << event_name_l << \"_alloc(user_data);\\n\\n\";\n+    f << \"    if (\" << event_name_l << \" == nullptr) {\\n        return;\\n    }\\n\\n\";\n+\n+    for (const auto& t : event_types) {\n+        std::visit(\n+            overloaded{\n+                [&](const EventTypeTrivial& t) {\n+                    f << \"    tox_event_\" << event_name_l << \"_set_\" << t.name << \"(\" << event_name_l << \", \" << t.name << \");\\n\";\n+                },\n+                [&](const EventTypeByteRange& t) {\n+                    f << \"    tox_event_\" << event_name_l << \"_set_\" << t.name_data << \"(\" << event_name_l << \", \" << t.name_data << \", \" << t.name_length_cb << \");\\n\";\n+                }\n+            },\n+            t\n+        );\n+    }\n+    f << \"}\\n\";\n+}\n+\n+// c++ generate_event_c.cpp -std=c++17 && ./a.out Friend_Lossy_Packet && diff --color ../../toxcore/events/friend_lossy_packet.c out/friend_lossy_packet.c\n+int main(int argc, char** argv) {\n+    // TODO: json?\n+    std::map<std::string, std::vector<EventType>> event_defs {\n+        {\n+            \"Conference_Connected\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"conference_number\"},\n+            }\n+        },\n+        {\n+            \"Conference_Invite\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"friend_number\"},\n+                EventTypeTrivial{\"Tox_Conference_Type\", \"type\"},\n+                EventTypeByteRange{\"cookie\", \"cookie_length\", \"length\"}, // the later two are idealy the same\n+            }\n+        },\n+        {\n+            \"Conference_Message\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"conference_number\"},\n+                EventTypeTrivial{\"uint32_t\", \"peer_number\"},\n+                EventTypeTrivial{\"Tox_Message_Type\", \"type\"},\n+                EventTypeByteRange{\"message\", \"message_length\", \"length\"}, // the later two are idealy the same\n+            }\n+        },\n+        {\n+            \"Conference_Peer_List_Changed\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"conference_number\"},\n+            }\n+        },\n+        {\n+            \"Conference_Peer_Name\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"conference_number\"},\n+                EventTypeTrivial{\"uint32_t\", \"peer_number\"},\n+                EventTypeByteRange{\"name\", \"name_length\", \"length\"}, // the later two are idealy the same\n+            }\n+        },\n+        {\n+            \"Conference_Title\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"conference_number\"},\n+                EventTypeTrivial{\"uint32_t\", \"peer_number\"},\n+                EventTypeByteRange{\"title\", \"title_length\", \"length\"}, // the later two are idealy the same\n+            }\n+        },\n+\n+        {\n+            \"File_Chunk_Request\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"friend_number\"},\n+                EventTypeTrivial{\"uint32_t\", \"file_number\"},\n+                EventTypeTrivial{\"uint64_t\", \"position\"},\n+                EventTypeTrivial{\"uint16_t\", \"length\"},\n+            }\n+        },\n+        {\n+            \"File_Recv\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"friend_number\"},\n+                EventTypeTrivial{\"uint32_t\", \"file_number\"},\n+                EventTypeTrivial{\"uint32_t\", \"kind\"},\n+                EventTypeTrivial{\"uint64_t\", \"file_size\"},\n+                EventTypeByteRange{\"filename\", \"filename_length\", \"length\"}, // the later two are idealy the same\n+            }\n+        },\n+        {\n+            \"File_Recv_Chunk\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"friend_number\"},\n+                EventTypeTrivial{\"uint32_t\", \"file_number\"},\n+                EventTypeTrivial{\"uint64_t\", \"position\"},\n+                EventTypeByteRange{\"data\", \"data_length\", \"length\"}, // the later two are idealy the same\n+            }\n+        },\n+        {\n+            \"File_Recv_Control\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"friend_number\"},\n+                EventTypeTrivial{\"uint32_t\", \"file_number\"},\n+                EventTypeTrivial{\"Tox_File_Control\", \"control\"},\n+            }\n+        },\n+\n+        {\n+            \"Friend_Connection_Status\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"friend_number\"},\n+                EventTypeTrivial{\"Tox_Connection\", \"connection_status\"},\n+            }\n+        },\n+        {\n+            \"Friend_Lossless_Packet\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"friend_number\"},\n+                EventTypeByteRange{\"data\", \"data_length\", \"length\"}, // the later two are idealy the same\n+            }\n+        },\n+        {\n+            \"Friend_Lossy_Packet\",\n+            {\n+                EventTypeTrivial{\"uint32_t\", \"friend_number\"},\n+                EventTypeByteRange{\"data\", \"data_length\", \"length\"}, // the later two are idealy the same",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2485#discussion_r1432581833",
            "id": 1432581833,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs5VY3bJ",
            "original_commit_id": "33a131dbb312dcf8f47f9ddc2c35ddfddc29e9ca",
            "original_line": 566,
            "original_position": 566,
            "original_start_line": null,
            "path": "other/event_tooling/generate_event_c.cpp",
            "position": null,
            "pull_request_review_id": 1790680349,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2485",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/1432581833/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-20T11:12:10Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/1432581833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "## [Codecov](https://app.codecov.io/gh/TokTok/c-toxcore/pull/2485?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok) Report\nAll modified and coverable lines are covered by tests :white_check_mark:\n> Comparison is base [(`4e603bb`)](https://app.codecov.io/gh/TokTok/c-toxcore/commit/4e603bb61391b55eb3a41a042bd2b635bcc78854?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok) 69.90% compared to head [(`22cd38a`)](https://app.codecov.io/gh/TokTok/c-toxcore/pull/2485?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok) 69.82%.\n\n\n<details><summary>Additional details and impacted files</summary>\n\n\n```diff\n@@            Coverage Diff             @@\n##           master    #2485      +/-   ##\n==========================================\n- Coverage   69.90%   69.82%   -0.08%     \n==========================================\n  Files          75       75              \n  Lines       25999    25999              \n==========================================\n- Hits        18174    18155      -19     \n- Misses       7825     7844      +19     \n```\n\n\n\n</details>\n\n[:umbrella: View full report in Codecov by Sentry](https://app.codecov.io/gh/TokTok/c-toxcore/pull/2485?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok).   \n:loudspeaker: Have feedback on the report? [Share it here](https://about.codecov.io/codecov-pr-comment-feedback/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok).\n",
            "created_at": "2023-12-20T00:36:19Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2485#issuecomment-1863661654",
            "id": 1863661654,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/2485",
            "node_id": "IC_kwDOA7zIGs5vFThW",
            "performed_via_github_app": {
                "created_at": "2016-09-25T14:18:27Z",
                "description": "Codecov provides highly integrated tools to group, merge, archive and compare coverage reports. Whether your team is comparing changes in a pull request or reviewing a single commit, Codecov will improve the code review workflow and quality.\r\n\r\n## Code coverage done right.®\r\n\r\n1. Upload coverage reports from your CI builds.\r\n2. Codecov merges all builds and languages into one beautiful coherent report.\r\n3. Get commit statuses, pull request comments and coverage overlay via our browser extension.\r\n\r\nWhen Codecov merges your uploads it keeps track of the CI provider (inc. build details) and user specified context, e.g. `#unittest` ~ `#smoketest` or `#oldcode` ~ `#newcode`. You can track the `#unittest` coverage independently of other groups. [Learn more here](\r\nhttp://docs.codecov.io/docs/flags)\r\n\r\nThrough **Codecov's Browser Extension** reports overlay directly in GitHub UI to assist in code review in [Chrome](https://chrome.google.com/webstore/detail/codecov/gedikamndpbemklijjkncpnolildpbgo) or Firefox (https://addons.mozilla.org/en-US/firefox/addon/codecov/)\r\n\r\n*Highly detailed* **pull request comments** and *customizable* **commit statuses** will improve your team's workflow and code coverage incrementally.\r\n\r\n**File backed configuration** all through the `codecov.yml`. \r\n\r\n## FAQ\r\n- Do you **merge multiple uploads** to the same commit? **Yes**\r\n- Do you **support multiple languages** in the same project? **Yes**\r\n- Can you **group coverage reports** by project and/or test type? **Yes**\r\n- How does **pricing** work? Only paid users can view reports and post statuses/comments. ",
                "events": [
                    "check_run",
                    "check_suite",
                    "create",
                    "delete",
                    "fork",
                    "member",
                    "membership",
                    "organization",
                    "public",
                    "pull_request",
                    "push",
                    "release",
                    "repository",
                    "status",
                    "team_add"
                ],
                "external_url": "https://codecov.io",
                "html_url": "https://github.com/apps/codecov",
                "id": 254,
                "name": "Codecov",
                "node_id": "MDM6QXBwMjU0",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/8226205?v=4",
                    "events_url": "https://api.github.com/users/codecov/events{/privacy}",
                    "followers_url": "https://api.github.com/users/codecov/followers",
                    "following_url": "https://api.github.com/users/codecov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/codecov/gists{/gist_id}",
                    "gravatar_id": "",
                    "html_url": "https://github.com/codecov",
                    "id": 8226205,
                    "login": "codecov",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjgyMjYyMDU=",
                    "organizations_url": "https://api.github.com/users/codecov/orgs",
                    "received_events_url": "https://api.github.com/users/codecov/received_events",
                    "repos_url": "https://api.github.com/users/codecov/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/codecov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/codecov/subscriptions",
                    "type": "Organization",
                    "url": "https://api.github.com/users/codecov"
                },
                "permissions": {
                    "administration": "read",
                    "checks": "write",
                    "contents": "read",
                    "emails": "read",
                    "issues": "read",
                    "members": "read",
                    "metadata": "read",
                    "pull_requests": "write",
                    "statuses": "write"
                },
                "slug": "codecov",
                "updated_at": "2023-09-08T15:29:16Z"
            },
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/1863661654/reactions"
            },
            "updated_at": "2023-12-20T11:20:05Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/1863661654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/254?v=4",
                "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/codecov",
                "id": 22429695,
                "login": "codecov[bot]",
                "node_id": "MDM6Qm90MjI0Mjk2OTU=",
                "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/codecov%5Bbot%5D"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/2485/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
                "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
                "followers_url": "https://api.github.com/users/Green-Sky/followers",
                "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
                "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Green-Sky",
                "id": 2938071,
                "login": "Green-Sky",
                "node_id": "MDQ6VXNlcjI5MzgwNzE=",
                "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
                "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
                "repos_url": "https://api.github.com/users/Green-Sky/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Green-Sky"
            },
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/f31ea1088adbe41493dc56714d2ac62784e9dc20/comments",
            "commit": {
                "author": {
                    "date": "2023-12-19T19:47:21Z",
                    "email": "green@g-s.xyz",
                    "name": "Green Sky"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-12-20T09:46:59Z",
                    "email": "green@g-s.xyz",
                    "name": "Green Sky"
                },
                "message": "add the event impl generation tool",
                "tree": {
                    "sha": "c598c85713539cef3c14cc9721a96734c1136bd8",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/c598c85713539cef3c14cc9721a96734c1136bd8"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/f31ea1088adbe41493dc56714d2ac62784e9dc20",
                "verification": {
                    "payload": "tree c598c85713539cef3c14cc9721a96734c1136bd8\nparent 4e603bb61391b55eb3a41a042bd2b635bcc78854\nauthor Green Sky <green@g-s.xyz> 1703015241 +0100\ncommitter Green Sky <green@g-s.xyz> 1703065619 +0100\n\nadd the event impl generation tool\n",
                    "reason": "valid",
                    "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAAhcAAAAHc3NoLXJzYQAAAAMBAAEAAAIBAKgXLklhJVc5L/ZM0SujWN\ns596XSF/gY5yoy0hyl2uw9bUE1c/WybmbLq3ftaA4to07GY4vKBAsroq99MsESm1V+ylLz\nGGYKn3oXpKdN2iuSolUJYIoQkXhKIOtrk1it/Ll7fzXO8fW9NWjWclTmdHlXV4xmDV71ku\n2bm6VDaSKz7liQNNXL7jQ7TyPROPKImI4GZ9v12zPLyMO+L7hyH6Pu2bDginIKoUWAFFHD\n11ZwKv8J0PDS9l/Bi+X7ySDwrZOeaDFZBCVMk5GlgEfhijwvtV/SoUJyy4qfoNPLmyP+Ke\n0LkeY3OChKpjqb8Z6EqEc90tW9zm0vqJvHrcYig/cuVrU1R/C65VdGRlQn3K52H1X6rbv6\nR6/2OWot1SGRgDUoBWA8PCqJunvsbhpluowlTzyF6afiWIlNcp9/xMoJZPGEzSKtqZQ6N7\nSEP5KvMmONfAMuudhJsjXOL8d7CtGh1dzBTn0ur6fwJr+pcb+rGGZWfYSwX6s1t33OylFE\n0f2u9cEYWNcSa6/8k0Jb/Nskely4gtDSuphG8z8PFzQQgpsa8WApfYhfmOahltKNPjWvrQ\nDNH6FenaD7k1FkDI4FyAOJgquMqzchZVIlPfjpe2vo5jAwIhcsEjpopvofUhkqPBciSp7z\nxnx6hWQF4iH9qG1BYLPTb0+99yivx3ZrAAAAA2dpdAAAAAAAAAAGc2hhNTEyAAACFAAAAA\nxyc2Etc2hhMi01MTIAAAIAOFV4/zVnlzZ7yrfRdbZgT0LFKXeak3GxwD/y4SBghqGVKNRX\nHGc2P8Tyg/V/c/XczbMjp+WmQDpDAen2u5mvJ+7dV6c5aTPn2vscPsBCWfFZQYuU8P2zG9\nt6Y6yEUgD+g5WsCAgR9AoGlH2j+qQ6cv8nAQ37yKA2KUlDGS3M/fV7Epz/QtxdGZAcYJfG\nrd/dME8F96Uumbkx/Tf/NS0gO+1buZMnuAAy6Joh8x/2lE/3pYlMXfDQtKTng6a/X4hulD\n8VgErMWfGLUx5GFDIWwt1C2T2eGB8v05+IQ+pdNyMNOwQTYooDH+1JWeOEX4SjP2xqFORV\noLu2O9DM3czOb6leCnqB8OuuPC2KIvtdWtyAqhy5RtEkjo3Q2fA2zi/PdBOZCVqo2g6mXh\n+kc6NWrvVuRum8Xz3GOgdEKB62Abdc7GyRTHQfvk7XwdzproyXi5wg+H/irCiqObkJI5vC\nSf3nykS3snIqM03tn5UT664zofj21iPWx82/d21bqhhCaT7rs/unqEF3bxZV7VwM1z1N/X\nDv9Hm/4n0mL6DtXlrDDOAPdfyja9xOynuq3qpWVo3pjBgmhqmq9v3p4rdp5VxrmxzBXyTY\noCak1z5MNEhNGre6UXlI6GkYqn0U4LthoHuUmEry38bfGLH4jYJaENAMHGvSDwqvah3NwU\nnoYEQ=\n-----END SSH SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
                "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
                "followers_url": "https://api.github.com/users/Green-Sky/followers",
                "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
                "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Green-Sky",
                "id": 2938071,
                "login": "Green-Sky",
                "node_id": "MDQ6VXNlcjI5MzgwNzE=",
                "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
                "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
                "repos_url": "https://api.github.com/users/Green-Sky/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Green-Sky"
            },
            "html_url": "https://github.com/TokTok/c-toxcore/commit/f31ea1088adbe41493dc56714d2ac62784e9dc20",
            "node_id": "C_kwDOIA7XmNoAKGYzMWVhMTA4OGFkYmU0MTQ5M2RjNTY3MTRkMmFjNjI3ODRlOWRjMjA",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/4e603bb61391b55eb3a41a042bd2b635bcc78854",
                    "sha": "4e603bb61391b55eb3a41a042bd2b635bcc78854",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/4e603bb61391b55eb3a41a042bd2b635bcc78854"
                }
            ],
            "sha": "f31ea1088adbe41493dc56714d2ac62784e9dc20",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/f31ea1088adbe41493dc56714d2ac62784e9dc20"
        },
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
                "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
                "followers_url": "https://api.github.com/users/Green-Sky/followers",
                "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
                "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Green-Sky",
                "id": 2938071,
                "login": "Green-Sky",
                "node_id": "MDQ6VXNlcjI5MzgwNzE=",
                "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
                "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
                "repos_url": "https://api.github.com/users/Green-Sky/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Green-Sky"
            },
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75/comments",
            "commit": {
                "author": {
                    "date": "2023-12-20T00:23:54Z",
                    "email": "green@g-s.xyz",
                    "name": "Green Sky"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2023-12-20T11:13:45Z",
                    "email": "green@g-s.xyz",
                    "name": "Green Sky"
                },
                "message": "adopt event impl generation tool to #2392",
                "tree": {
                    "sha": "d625e3a6bbf961cdf826f29e0b9babf69d61581c",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/d625e3a6bbf961cdf826f29e0b9babf69d61581c"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75",
                "verification": {
                    "payload": "tree d625e3a6bbf961cdf826f29e0b9babf69d61581c\nparent f31ea1088adbe41493dc56714d2ac62784e9dc20\nauthor Green Sky <green@g-s.xyz> 1703031834 +0100\ncommitter Green Sky <green@g-s.xyz> 1703070825 +0100\n\nadopt event impl generation tool to #2392\n",
                    "reason": "valid",
                    "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAAhcAAAAHc3NoLXJzYQAAAAMBAAEAAAIBAKgXLklhJVc5L/ZM0SujWN\ns596XSF/gY5yoy0hyl2uw9bUE1c/WybmbLq3ftaA4to07GY4vKBAsroq99MsESm1V+ylLz\nGGYKn3oXpKdN2iuSolUJYIoQkXhKIOtrk1it/Ll7fzXO8fW9NWjWclTmdHlXV4xmDV71ku\n2bm6VDaSKz7liQNNXL7jQ7TyPROPKImI4GZ9v12zPLyMO+L7hyH6Pu2bDginIKoUWAFFHD\n11ZwKv8J0PDS9l/Bi+X7ySDwrZOeaDFZBCVMk5GlgEfhijwvtV/SoUJyy4qfoNPLmyP+Ke\n0LkeY3OChKpjqb8Z6EqEc90tW9zm0vqJvHrcYig/cuVrU1R/C65VdGRlQn3K52H1X6rbv6\nR6/2OWot1SGRgDUoBWA8PCqJunvsbhpluowlTzyF6afiWIlNcp9/xMoJZPGEzSKtqZQ6N7\nSEP5KvMmONfAMuudhJsjXOL8d7CtGh1dzBTn0ur6fwJr+pcb+rGGZWfYSwX6s1t33OylFE\n0f2u9cEYWNcSa6/8k0Jb/Nskely4gtDSuphG8z8PFzQQgpsa8WApfYhfmOahltKNPjWvrQ\nDNH6FenaD7k1FkDI4FyAOJgquMqzchZVIlPfjpe2vo5jAwIhcsEjpopvofUhkqPBciSp7z\nxnx6hWQF4iH9qG1BYLPTb0+99yivx3ZrAAAAA2dpdAAAAAAAAAAGc2hhNTEyAAACFAAAAA\nxyc2Etc2hhMi01MTIAAAIAJw1hBrw+Tb1mHZ0/qNXcxFqVCWDZjGsUXKqysxKuJeX09TjT\nUDCZsjbmJGwzUBEZrkDACpt94c8l9QwbQIB3iwz6+vAsN0SPqvLp2PdVWyhvCBWojDXo0v\n5I+i+qv1v2AX/5p8yvK2ko2IRY3hPWTKiVLmlcBqsie52RTq6fGjQBDNrjbVbZUfLYB33G\niChD18YGA9Log+PmyxBn/plUxLezTe4LW+frbPXCJctzgQ2CLMqWQqm3QzUQwdAwTZJjgb\nIbesdmp9FHSUr0mzEit4nVsaVRP62/zC8W0V32ZJZR0DciWel0oignoMLc9GIy6uctDmMu\nrduSYw77Z4oOz+hIf2sEnJNVdZPMMORYMvr3FgVmqS4C7y1xyJ0ngMvkSmcEcX7msq5a+j\nwc2vuO6wp+Mf7XoXWtBIailywuxjjgSDyJylUw0yJrzWNr5W0PCSJcE5MS0soTSBhGPyRw\nLqHFYrBHL6+oB9SCaniah4b+c4HT9RBIBJy8TZ5ZZ8eBOH3RcDUeJ2hr1bUA6pJMSdYKxs\nKwzwgXSj9uyM3khDzc4sX1zCWlovUoTICbmq2X2XdlhdGpRKq+qUp0tnWXsMgcRPeg+Hlu\n+7ShpgU104vxIEKZmXZhJgW0NV0KGFguNRMNVDzeEXxqQpFCApCyhRrdKzVgSvKMlq2Bht\n86PxQ=\n-----END SSH SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
                "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
                "followers_url": "https://api.github.com/users/Green-Sky/followers",
                "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
                "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Green-Sky",
                "id": 2938071,
                "login": "Green-Sky",
                "node_id": "MDQ6VXNlcjI5MzgwNzE=",
                "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
                "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
                "repos_url": "https://api.github.com/users/Green-Sky/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Green-Sky"
            },
            "html_url": "https://github.com/TokTok/c-toxcore/commit/22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75",
            "node_id": "C_kwDOIA7XmNoAKDIyY2QzOGFkNTBhYjhkZDhjYjIzY2JiYzhlMjQwYmY1NTEwYzFkNzU",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/f31ea1088adbe41493dc56714d2ac62784e9dc20",
                    "sha": "f31ea1088adbe41493dc56714d2ac62784e9dc20",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/f31ea1088adbe41493dc56714d2ac62784e9dc20"
                }
            ],
            "sha": "22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75"
        }
    ],
    "commits_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2485/commits",
    "created_at": "2023-12-20T00:30:48Z",
    "diff_url": "https://github.com/TokTok/c-toxcore/pull/2485.diff",
    "draft": false,
    "head": {
        "label": "Green-Sky:tool_for_reorder_pr",
        "ref": "tool_for_reorder_pr",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/Green-Sky/c-toxcore/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/Green-Sky/c-toxcore/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/Green-Sky/c-toxcore/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/Green-Sky/c-toxcore/branches{/branch}",
            "clone_url": "https://github.com/Green-Sky/c-toxcore.git",
            "collaborators_url": "https://api.github.com/repos/Green-Sky/c-toxcore/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/Green-Sky/c-toxcore/comments{/number}",
            "commits_url": "https://api.github.com/repos/Green-Sky/c-toxcore/commits{/sha}",
            "compare_url": "https://api.github.com/repos/Green-Sky/c-toxcore/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/Green-Sky/c-toxcore/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/Green-Sky/c-toxcore/contributors",
            "created_at": "2022-09-17T15:05:38Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/Green-Sky/c-toxcore/deployments",
            "description": "The future of online communications.",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/Green-Sky/c-toxcore/downloads",
            "events_url": "https://api.github.com/repos/Green-Sky/c-toxcore/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/Green-Sky/c-toxcore/forks",
            "full_name": "Green-Sky/c-toxcore",
            "git_commits_url": "https://api.github.com/repos/Green-Sky/c-toxcore/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/Green-Sky/c-toxcore/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/Green-Sky/c-toxcore/git/tags{/sha}",
            "git_url": "git://github.com/Green-Sky/c-toxcore.git",
            "has_discussions": false,
            "has_downloads": false,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "https://tox.chat/",
            "hooks_url": "https://api.github.com/repos/Green-Sky/c-toxcore/hooks",
            "html_url": "https://github.com/Green-Sky/c-toxcore",
            "id": 537843608,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/Green-Sky/c-toxcore/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/Green-Sky/c-toxcore/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/Green-Sky/c-toxcore/issues{/number}",
            "keys_url": "https://api.github.com/repos/Green-Sky/c-toxcore/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/Green-Sky/c-toxcore/labels{/name}",
            "language": "C",
            "languages_url": "https://api.github.com/repos/Green-Sky/c-toxcore/languages",
            "license": {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "node_id": "MDc6TGljZW5zZTk=",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
            },
            "merges_url": "https://api.github.com/repos/Green-Sky/c-toxcore/merges",
            "milestones_url": "https://api.github.com/repos/Green-Sky/c-toxcore/milestones{/number}",
            "mirror_url": null,
            "name": "c-toxcore",
            "node_id": "R_kgDOIA7XmA",
            "notifications_url": "https://api.github.com/repos/Green-Sky/c-toxcore/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
                "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
                "followers_url": "https://api.github.com/users/Green-Sky/followers",
                "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
                "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Green-Sky",
                "id": 2938071,
                "login": "Green-Sky",
                "node_id": "MDQ6VXNlcjI5MzgwNzE=",
                "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
                "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
                "repos_url": "https://api.github.com/users/Green-Sky/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Green-Sky"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/Green-Sky/c-toxcore/pulls{/number}",
            "pushed_at": "2024-01-15T22:50:35Z",
            "releases_url": "https://api.github.com/repos/Green-Sky/c-toxcore/releases{/id}",
            "size": 22995,
            "ssh_url": "git@github.com:Green-Sky/c-toxcore.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/Green-Sky/c-toxcore/stargazers",
            "statuses_url": "https://api.github.com/repos/Green-Sky/c-toxcore/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/Green-Sky/c-toxcore/subscribers",
            "subscription_url": "https://api.github.com/repos/Green-Sky/c-toxcore/subscription",
            "svn_url": "https://github.com/Green-Sky/c-toxcore",
            "tags_url": "https://api.github.com/repos/Green-Sky/c-toxcore/tags",
            "teams_url": "https://api.github.com/repos/Green-Sky/c-toxcore/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/Green-Sky/c-toxcore/git/trees{/sha}",
            "updated_at": "2022-10-01T18:07:30Z",
            "url": "https://api.github.com/repos/Green-Sky/c-toxcore",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
            "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
            "followers_url": "https://api.github.com/users/Green-Sky/followers",
            "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
            "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Green-Sky",
            "id": 2938071,
            "login": "Green-Sky",
            "node_id": "MDQ6VXNlcjI5MzgwNzE=",
            "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
            "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
            "repos_url": "https://api.github.com/users/Green-Sky/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Green-Sky"
        }
    },
    "html_url": "https://github.com/TokTok/c-toxcore/pull/2485",
    "id": 1651244879,
    "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/2485",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75",
    "merged_at": "2023-12-20T12:12:41Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 262,
        "created_at": "2022-02-28T22:51:30Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
            "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
            "followers_url": "https://api.github.com/users/iphydf/followers",
            "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
            "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/iphydf",
            "id": 10647936,
            "login": "iphydf",
            "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
            "organizations_url": "https://api.github.com/users/iphydf/orgs",
            "received_events_url": "https://api.github.com/users/iphydf/received_events",
            "repos_url": "https://api.github.com/users/iphydf/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/iphydf"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/TokTok/c-toxcore/milestone/48",
        "id": 7722757,
        "labels_url": "https://api.github.com/repos/TokTok/c-toxcore/milestones/48/labels",
        "node_id": "MI_kwDOA7zIGs4AddcF",
        "number": 48,
        "open_issues": 4,
        "state": "open",
        "title": "v0.2.19",
        "updated_at": "2024-02-23T16:21:26Z",
        "url": "https://api.github.com/repos/TokTok/c-toxcore/milestones/48"
    },
    "node_id": "PR_kwDOA7zIGs5ia_9P",
    "number": 2485,
    "patch_url": "https://github.com/TokTok/c-toxcore/pull/2485.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2485/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/TokTok/c-toxcore/statuses/22cd38ad50ab8dd8cb23cbbc8e240bf5510c1d75",
    "title": "refactor: event generation tool for reorder pr",
    "updated_at": "2023-12-23T19:23:53Z",
    "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2485",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2938071?v=4",
        "events_url": "https://api.github.com/users/Green-Sky/events{/privacy}",
        "followers_url": "https://api.github.com/users/Green-Sky/followers",
        "following_url": "https://api.github.com/users/Green-Sky/following{/other_user}",
        "gists_url": "https://api.github.com/users/Green-Sky/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Green-Sky",
        "id": 2938071,
        "login": "Green-Sky",
        "node_id": "MDQ6VXNlcjI5MzgwNzE=",
        "organizations_url": "https://api.github.com/users/Green-Sky/orgs",
        "received_events_url": "https://api.github.com/users/Green-Sky/received_events",
        "repos_url": "https://api.github.com/users/Green-Sky/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Green-Sky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Green-Sky/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Green-Sky"
    }
}