{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/issues/2064/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064/commits"
        },
        "html": {
            "href": "https://github.com/TokTok/c-toxcore/pull/2064"
        },
        "issue": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/issues/2064"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
        },
        "statuses": {
            "href": "https://api.github.com/repos/TokTok/c-toxcore/statuses/12dbafbd188a64356c07c97f7841016b5c300715"
        }
    },
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
        "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
        "followers_url": "https://api.github.com/users/sudden6/followers",
        "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
        "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sudden6",
        "id": 5585762,
        "login": "sudden6",
        "node_id": "MDQ6VXNlcjU1ODU3NjI=",
        "organizations_url": "https://api.github.com/users/sudden6/orgs",
        "received_events_url": "https://api.github.com/users/sudden6/received_events",
        "repos_url": "https://api.github.com/users/sudden6/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sudden6"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
            "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
            "followers_url": "https://api.github.com/users/sudden6/followers",
            "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/sudden6",
            "id": 5585762,
            "login": "sudden6",
            "node_id": "MDQ6VXNlcjU1ODU3NjI=",
            "organizations_url": "https://api.github.com/users/sudden6/orgs",
            "received_events_url": "https://api.github.com/users/sudden6/received_events",
            "repos_url": "https://api.github.com/users/sudden6/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/sudden6"
        }
    ],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "TokTok:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/TokTok/c-toxcore/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/TokTok/c-toxcore/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/TokTok/c-toxcore/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/TokTok/c-toxcore/branches{/branch}",
            "clone_url": "https://github.com/TokTok/c-toxcore.git",
            "collaborators_url": "https://api.github.com/repos/TokTok/c-toxcore/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/comments{/number}",
            "commits_url": "https://api.github.com/repos/TokTok/c-toxcore/commits{/sha}",
            "compare_url": "https://api.github.com/repos/TokTok/c-toxcore/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/TokTok/c-toxcore/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/TokTok/c-toxcore/contributors",
            "created_at": "2016-07-06T08:15:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/TokTok/c-toxcore/deployments",
            "description": "The future of online communications.",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/TokTok/c-toxcore/downloads",
            "events_url": "https://api.github.com/repos/TokTok/c-toxcore/events",
            "fork": true,
            "forks": 283,
            "forks_count": 283,
            "forks_url": "https://api.github.com/repos/TokTok/c-toxcore/forks",
            "full_name": "TokTok/c-toxcore",
            "git_commits_url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/TokTok/c-toxcore/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/TokTok/c-toxcore/git/tags{/sha}",
            "git_url": "git://github.com/TokTok/c-toxcore.git",
            "has_discussions": false,
            "has_downloads": false,
            "has_issues": true,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "https://tox.chat",
            "hooks_url": "https://api.github.com/repos/TokTok/c-toxcore/hooks",
            "html_url": "https://github.com/TokTok/c-toxcore",
            "id": 62703642,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/TokTok/c-toxcore/issues{/number}",
            "keys_url": "https://api.github.com/repos/TokTok/c-toxcore/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/TokTok/c-toxcore/labels{/name}",
            "language": "C",
            "languages_url": "https://api.github.com/repos/TokTok/c-toxcore/languages",
            "license": {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "node_id": "MDc6TGljZW5zZTk=",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
            },
            "merges_url": "https://api.github.com/repos/TokTok/c-toxcore/merges",
            "milestones_url": "https://api.github.com/repos/TokTok/c-toxcore/milestones{/number}",
            "mirror_url": null,
            "name": "c-toxcore",
            "node_id": "MDEwOlJlcG9zaXRvcnk2MjcwMzY0Mg==",
            "notifications_url": "https://api.github.com/repos/TokTok/c-toxcore/notifications{?since,all,participating}",
            "open_issues": 210,
            "open_issues_count": 210,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17427091?v=4",
                "events_url": "https://api.github.com/users/TokTok/events{/privacy}",
                "followers_url": "https://api.github.com/users/TokTok/followers",
                "following_url": "https://api.github.com/users/TokTok/following{/other_user}",
                "gists_url": "https://api.github.com/users/TokTok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TokTok",
                "id": 17427091,
                "login": "TokTok",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjE3NDI3MDkx",
                "organizations_url": "https://api.github.com/users/TokTok/orgs",
                "received_events_url": "https://api.github.com/users/TokTok/received_events",
                "repos_url": "https://api.github.com/users/TokTok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TokTok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TokTok/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/TokTok"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls{/number}",
            "pushed_at": "2024-02-23T16:21:31Z",
            "releases_url": "https://api.github.com/repos/TokTok/c-toxcore/releases{/id}",
            "size": 37461,
            "ssh_url": "git@github.com:TokTok/c-toxcore.git",
            "stargazers_count": 2116,
            "stargazers_url": "https://api.github.com/repos/TokTok/c-toxcore/stargazers",
            "statuses_url": "https://api.github.com/repos/TokTok/c-toxcore/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/TokTok/c-toxcore/subscribers",
            "subscription_url": "https://api.github.com/repos/TokTok/c-toxcore/subscription",
            "svn_url": "https://github.com/TokTok/c-toxcore",
            "tags_url": "https://api.github.com/repos/TokTok/c-toxcore/tags",
            "teams_url": "https://api.github.com/repos/TokTok/c-toxcore/teams",
            "topics": [
                "cryptography",
                "encryption",
                "network",
                "p2p",
                "security",
                "toxcore"
            ],
            "trees_url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees{/sha}",
            "updated_at": "2024-02-23T18:58:26Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore",
            "visibility": "public",
            "watchers": 2116,
            "watchers_count": 2116,
            "web_commit_signoff_required": false
        },
        "sha": "6a6bc029de629e68e124577daa16581475690949",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/17427091?v=4",
            "events_url": "https://api.github.com/users/TokTok/events{/privacy}",
            "followers_url": "https://api.github.com/users/TokTok/followers",
            "following_url": "https://api.github.com/users/TokTok/following{/other_user}",
            "gists_url": "https://api.github.com/users/TokTok/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/TokTok",
            "id": 17427091,
            "login": "TokTok",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE3NDI3MDkx",
            "organizations_url": "https://api.github.com/users/TokTok/orgs",
            "received_events_url": "https://api.github.com/users/TokTok/received_events",
            "repos_url": "https://api.github.com/users/TokTok/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/TokTok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TokTok/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/TokTok"
        }
    },
    "body": "Found here: https://github.com/TokTok/c-toxcore/actions/runs/1863916365\r\n\r\nDepends on: https://github.com/TokTok/c-toxcore/pull/2058\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/toktok/c-toxcore/2064)\n<!-- Reviewable:end -->\n",
    "closed_at": "2022-02-20T20:36:07Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810404675"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810404675"
                }
            },
            "author_association": "MEMBER",
            "body": "\"Initialize\"",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-18T23:48:56Z",
            "diff_hunk": "@@ -3392,116 +3392,166 @@ uint8_t *conferences_save(const Group_Chats *g_c, uint8_t *data)\n     return data;\n }\n \n+/**\n+ * @brief load_group Load a Group section from a save file\n+ * @param g Group to load\n+ * @param g_c Reference to all groupchats, need for utility functions\n+ * @param data Start of the data to deserialze\n+ * @param length Length of data\n+ * @return 0 on error, number of consumed bytes otherwise\n+ */\n+\n non_null()\n-static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+static uint32_t load_group(Group_c *g, const Group_Chats *g_c, const uint8_t *data, uint32_t length)\n {\n     const uint8_t *init_data = data;\n \n-    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n-        const int groupnumber = create_group_chat(g_c);\n+    // Initialilize to default values so we can unconditionally free in case of an error",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810404675",
            "id": 810404675,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTctD",
            "original_commit_id": "bf028400833dc1c440b6700d53607cecd75995bb",
            "original_line": 3409,
            "original_position": 21,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887842344,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810404675/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-18T23:50:48Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810404675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810404991"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810404991"
                }
            },
            "author_association": "MEMBER",
            "body": "Are all these casts safe? Do we need asserts to make sure they are?",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-18T23:49:47Z",
            "diff_hunk": "@@ -3392,116 +3392,166 @@ uint8_t *conferences_save(const Group_Chats *g_c, uint8_t *data)\n     return data;\n }\n \n+/**\n+ * @brief load_group Load a Group section from a save file\n+ * @param g Group to load\n+ * @param g_c Reference to all groupchats, need for utility functions\n+ * @param data Start of the data to deserialze\n+ * @param length Length of data\n+ * @return 0 on error, number of consumed bytes otherwise\n+ */\n+\n non_null()\n-static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+static uint32_t load_group(Group_c *g, const Group_Chats *g_c, const uint8_t *data, uint32_t length)\n {\n     const uint8_t *init_data = data;\n \n-    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n-        const int groupnumber = create_group_chat(g_c);\n+    // Initialilize to default values so we can unconditionally free in case of an error\n+    setup_conference(g);\n \n-        if (groupnumber == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n-        }\n+    g->type = *data;\n+    ++data;\n \n-        Group_c *g = &g_c->chats[groupnumber];\n+    memcpy(g->id, data, GROUP_ID_LENGTH);\n+    data += GROUP_ID_LENGTH;\n \n-        g->type = *data;\n-        ++data;\n+    lendian_bytes_to_host32(&g->message_number, data);\n+    data += sizeof(uint32_t);\n \n-        memcpy(g->id, data, GROUP_ID_LENGTH);\n-        data += GROUP_ID_LENGTH;\n+    lendian_bytes_to_host16(&g->lossy_message_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host32(&g->message_number, data);\n-        data += sizeof(uint32_t);\n+    lendian_bytes_to_host16(&g->peer_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host16(&g->lossy_message_number, data);\n-        data += sizeof(uint16_t);\n+    lendian_bytes_to_host32(&g->numfrozen, data);\n+    data += sizeof(uint32_t);\n \n-        lendian_bytes_to_host16(&g->peer_number, data);\n-        data += sizeof(uint16_t);\n+    if (g->numfrozen > 0) {\n+        g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+\n+        if (g->frozen == nullptr) {\n+            // Memory allocation failure\n+            return 0;\n+        }\n+    }\n \n-        lendian_bytes_to_host32(&g->numfrozen, data);\n-        data += sizeof(uint32_t);\n+    g->title_len = *data;\n \n-        if (g->numfrozen > 0) {\n-            g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+    if (g->title_len > MAX_NAME_LENGTH) {\n+        return 0;\n+    }\n \n-            if (g->frozen == nullptr) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+    ++data;\n+\n+    if (length < (uint32_t)(data - init_data) + g->title_len) {\n+        return 0;\n+    }\n+\n+    memcpy(g->title, data, g->title_len);\n+    data += g->title_len;\n+\n+    for (uint32_t j = 0; j < g->numfrozen; ++j) {\n+        if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n+            return 0;\n         }\n \n-        g->title_len = *data;\n+        Group_Peer *peer = &g->frozen[j];\n+        memset(peer, 0, sizeof(Group_Peer));\n \n-        if (g->title_len > MAX_NAME_LENGTH) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        id_copy(peer->real_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+        id_copy(peer->temp_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+\n+        lendian_bytes_to_host16(&peer->peer_number, data);\n+        data += sizeof(uint16_t);\n+\n+        lendian_bytes_to_host64(&peer->last_active, data);\n+        data += sizeof(uint64_t);\n+\n+        peer->nick_len = *data;\n+\n+        if (peer->nick_len > MAX_NAME_LENGTH) {\n+            return 0;\n         }\n \n         ++data;\n \n-        if (length < (uint32_t)(data - init_data) + g->title_len) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n+            return 0;\n         }\n \n-        memcpy(g->title, data, g->title_len);\n-        data += g->title_len;\n+        memcpy(peer->nick, data, peer->nick_len);\n+        data += peer->nick_len;\n \n-        for (uint32_t j = 0; j < g->numfrozen; ++j) {\n-            if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        // NOTE: this relies on friends being loaded before conferences.\n+        peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+    }\n+\n+    if (g->numfrozen > g->maxfrozen) {\n+        g->maxfrozen = g->numfrozen;\n+    }\n \n-            Group_Peer *peer = &g->frozen[j];\n-            memset(peer, 0, sizeof(Group_Peer));\n+    g->status = GROUPCHAT_STATUS_CONNECTED;\n \n-            id_copy(peer->real_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n-            id_copy(peer->temp_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n+    id_copy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto));\n \n-            lendian_bytes_to_host16(&peer->peer_number, data);\n-            data += sizeof(uint16_t);\n+    return (uint32_t)(data - init_data);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810404991",
            "id": 810404991,
            "line": 3507,
            "node_id": "PRRC_kwDOA7zIGs4wTcx_",
            "original_commit_id": "bf028400833dc1c440b6700d53607cecd75995bb",
            "original_line": 3507,
            "original_position": 152,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": 165,
            "pull_request_review_id": 887842344,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810404991/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-18T23:50:48Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810404991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810405238"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810405238"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's try to avoid adding more `goto` and instead use an inner function with a cleanup outside.",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-18T23:50:42Z",
            "diff_hunk": "@@ -3392,116 +3392,166 @@ uint8_t *conferences_save(const Group_Chats *g_c, uint8_t *data)\n     return data;\n }\n \n+/**\n+ * @brief load_group Load a Group section from a save file\n+ * @param g Group to load\n+ * @param g_c Reference to all groupchats, need for utility functions\n+ * @param data Start of the data to deserialze\n+ * @param length Length of data\n+ * @return 0 on error, number of consumed bytes otherwise\n+ */\n+\n non_null()\n-static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+static uint32_t load_group(Group_c *g, const Group_Chats *g_c, const uint8_t *data, uint32_t length)\n {\n     const uint8_t *init_data = data;\n \n-    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n-        const int groupnumber = create_group_chat(g_c);\n+    // Initialilize to default values so we can unconditionally free in case of an error\n+    setup_conference(g);\n \n-        if (groupnumber == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n-        }\n+    g->type = *data;\n+    ++data;\n \n-        Group_c *g = &g_c->chats[groupnumber];\n+    memcpy(g->id, data, GROUP_ID_LENGTH);\n+    data += GROUP_ID_LENGTH;\n \n-        g->type = *data;\n-        ++data;\n+    lendian_bytes_to_host32(&g->message_number, data);\n+    data += sizeof(uint32_t);\n \n-        memcpy(g->id, data, GROUP_ID_LENGTH);\n-        data += GROUP_ID_LENGTH;\n+    lendian_bytes_to_host16(&g->lossy_message_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host32(&g->message_number, data);\n-        data += sizeof(uint32_t);\n+    lendian_bytes_to_host16(&g->peer_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host16(&g->lossy_message_number, data);\n-        data += sizeof(uint16_t);\n+    lendian_bytes_to_host32(&g->numfrozen, data);\n+    data += sizeof(uint32_t);\n \n-        lendian_bytes_to_host16(&g->peer_number, data);\n-        data += sizeof(uint16_t);\n+    if (g->numfrozen > 0) {\n+        g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+\n+        if (g->frozen == nullptr) {\n+            // Memory allocation failure\n+            return 0;\n+        }\n+    }\n \n-        lendian_bytes_to_host32(&g->numfrozen, data);\n-        data += sizeof(uint32_t);\n+    g->title_len = *data;\n \n-        if (g->numfrozen > 0) {\n-            g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+    if (g->title_len > MAX_NAME_LENGTH) {\n+        return 0;\n+    }\n \n-            if (g->frozen == nullptr) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+    ++data;\n+\n+    if (length < (uint32_t)(data - init_data) + g->title_len) {\n+        return 0;\n+    }\n+\n+    memcpy(g->title, data, g->title_len);\n+    data += g->title_len;\n+\n+    for (uint32_t j = 0; j < g->numfrozen; ++j) {\n+        if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n+            return 0;\n         }\n \n-        g->title_len = *data;\n+        Group_Peer *peer = &g->frozen[j];\n+        memset(peer, 0, sizeof(Group_Peer));\n \n-        if (g->title_len > MAX_NAME_LENGTH) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        id_copy(peer->real_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+        id_copy(peer->temp_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+\n+        lendian_bytes_to_host16(&peer->peer_number, data);\n+        data += sizeof(uint16_t);\n+\n+        lendian_bytes_to_host64(&peer->last_active, data);\n+        data += sizeof(uint64_t);\n+\n+        peer->nick_len = *data;\n+\n+        if (peer->nick_len > MAX_NAME_LENGTH) {\n+            return 0;\n         }\n \n         ++data;\n \n-        if (length < (uint32_t)(data - init_data) + g->title_len) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n+            return 0;\n         }\n \n-        memcpy(g->title, data, g->title_len);\n-        data += g->title_len;\n+        memcpy(peer->nick, data, peer->nick_len);\n+        data += peer->nick_len;\n \n-        for (uint32_t j = 0; j < g->numfrozen; ++j) {\n-            if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        // NOTE: this relies on friends being loaded before conferences.\n+        peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+    }\n+\n+    if (g->numfrozen > g->maxfrozen) {\n+        g->maxfrozen = g->numfrozen;\n+    }\n \n-            Group_Peer *peer = &g->frozen[j];\n-            memset(peer, 0, sizeof(Group_Peer));\n+    g->status = GROUPCHAT_STATUS_CONNECTED;\n \n-            id_copy(peer->real_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n-            id_copy(peer->temp_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n+    id_copy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto));\n \n-            lendian_bytes_to_host16(&peer->peer_number, data);\n-            data += sizeof(uint16_t);\n+    return (uint32_t)(data - init_data);\n+}\n \n-            lendian_bytes_to_host64(&peer->last_active, data);\n-            data += sizeof(uint64_t);\n+non_null()\n+static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+{\n+    const uint8_t *init_data = data;\n+    uint32_t num_groups;\n \n-            peer->nick_len = *data;\n+    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n+        const int groupnumber = create_group_chat(g_c);\n \n-            if (peer->nick_len > MAX_NAME_LENGTH) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        if (groupnumber == -1) {\n+            // If this fails there's a serious problem, don't bother with cleanup\n+            return STATE_LOAD_STATUS_ERROR;\n+        }\n \n-            ++data;\n+        Group_c *g = &g_c->chats[groupnumber];\n \n-            if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        uint32_t consumed = load_group(g, g_c, data, length - (uint32_t)(data - init_data));\n \n-            memcpy(peer->nick, data, peer->nick_len);\n-            data += peer->nick_len;\n+        if (consumed == 0) {\n+            // remove partially loaded stuff\n+            bool ret = wipe_group_chat(g_c, groupnumber);\n \n-            // NOTE: this relies on friends being loaded before conferences.\n-            peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+            // wipe_group_chat must be able to wipe a partially loaded group\n+            assert(ret == true);\n+            goto LOAD_ERROR;\n         }\n \n-        if (g->numfrozen > g->maxfrozen) {\n-            g->maxfrozen = g->numfrozen;\n-        }\n+        data += consumed;\n \n-        g->status = GROUPCHAT_STATUS_CONNECTED;\n-        memcpy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto), CRYPTO_PUBLIC_KEY_SIZE);\n         const int peer_index = addpeer(g_c, groupnumber, g->real_pk, dht_get_self_public_key(g_c->m->dht), g->peer_number,\n                                        nullptr, true, false);\n \n         if (peer_index == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n+            goto LOAD_ERROR;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810405238",
            "id": 810405238,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTc12",
            "original_commit_id": "bf028400833dc1c440b6700d53607cecd75995bb",
            "original_line": 3536,
            "original_position": 208,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887842344,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810405238/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-18T23:50:48Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810405238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810470520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810470520"
                }
            },
            "author_association": "MEMBER",
            "body": "I just took this from the existing code, but added asserts anyway.",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-19T09:37:31Z",
            "diff_hunk": "@@ -3392,116 +3392,166 @@ uint8_t *conferences_save(const Group_Chats *g_c, uint8_t *data)\n     return data;\n }\n \n+/**\n+ * @brief load_group Load a Group section from a save file\n+ * @param g Group to load\n+ * @param g_c Reference to all groupchats, need for utility functions\n+ * @param data Start of the data to deserialze\n+ * @param length Length of data\n+ * @return 0 on error, number of consumed bytes otherwise\n+ */\n+\n non_null()\n-static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+static uint32_t load_group(Group_c *g, const Group_Chats *g_c, const uint8_t *data, uint32_t length)\n {\n     const uint8_t *init_data = data;\n \n-    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n-        const int groupnumber = create_group_chat(g_c);\n+    // Initialilize to default values so we can unconditionally free in case of an error\n+    setup_conference(g);\n \n-        if (groupnumber == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n-        }\n+    g->type = *data;\n+    ++data;\n \n-        Group_c *g = &g_c->chats[groupnumber];\n+    memcpy(g->id, data, GROUP_ID_LENGTH);\n+    data += GROUP_ID_LENGTH;\n \n-        g->type = *data;\n-        ++data;\n+    lendian_bytes_to_host32(&g->message_number, data);\n+    data += sizeof(uint32_t);\n \n-        memcpy(g->id, data, GROUP_ID_LENGTH);\n-        data += GROUP_ID_LENGTH;\n+    lendian_bytes_to_host16(&g->lossy_message_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host32(&g->message_number, data);\n-        data += sizeof(uint32_t);\n+    lendian_bytes_to_host16(&g->peer_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host16(&g->lossy_message_number, data);\n-        data += sizeof(uint16_t);\n+    lendian_bytes_to_host32(&g->numfrozen, data);\n+    data += sizeof(uint32_t);\n \n-        lendian_bytes_to_host16(&g->peer_number, data);\n-        data += sizeof(uint16_t);\n+    if (g->numfrozen > 0) {\n+        g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+\n+        if (g->frozen == nullptr) {\n+            // Memory allocation failure\n+            return 0;\n+        }\n+    }\n \n-        lendian_bytes_to_host32(&g->numfrozen, data);\n-        data += sizeof(uint32_t);\n+    g->title_len = *data;\n \n-        if (g->numfrozen > 0) {\n-            g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+    if (g->title_len > MAX_NAME_LENGTH) {\n+        return 0;\n+    }\n \n-            if (g->frozen == nullptr) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+    ++data;\n+\n+    if (length < (uint32_t)(data - init_data) + g->title_len) {\n+        return 0;\n+    }\n+\n+    memcpy(g->title, data, g->title_len);\n+    data += g->title_len;\n+\n+    for (uint32_t j = 0; j < g->numfrozen; ++j) {\n+        if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n+            return 0;\n         }\n \n-        g->title_len = *data;\n+        Group_Peer *peer = &g->frozen[j];\n+        memset(peer, 0, sizeof(Group_Peer));\n \n-        if (g->title_len > MAX_NAME_LENGTH) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        id_copy(peer->real_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+        id_copy(peer->temp_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+\n+        lendian_bytes_to_host16(&peer->peer_number, data);\n+        data += sizeof(uint16_t);\n+\n+        lendian_bytes_to_host64(&peer->last_active, data);\n+        data += sizeof(uint64_t);\n+\n+        peer->nick_len = *data;\n+\n+        if (peer->nick_len > MAX_NAME_LENGTH) {\n+            return 0;\n         }\n \n         ++data;\n \n-        if (length < (uint32_t)(data - init_data) + g->title_len) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n+            return 0;\n         }\n \n-        memcpy(g->title, data, g->title_len);\n-        data += g->title_len;\n+        memcpy(peer->nick, data, peer->nick_len);\n+        data += peer->nick_len;\n \n-        for (uint32_t j = 0; j < g->numfrozen; ++j) {\n-            if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        // NOTE: this relies on friends being loaded before conferences.\n+        peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+    }\n+\n+    if (g->numfrozen > g->maxfrozen) {\n+        g->maxfrozen = g->numfrozen;\n+    }\n \n-            Group_Peer *peer = &g->frozen[j];\n-            memset(peer, 0, sizeof(Group_Peer));\n+    g->status = GROUPCHAT_STATUS_CONNECTED;\n \n-            id_copy(peer->real_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n-            id_copy(peer->temp_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n+    id_copy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto));\n \n-            lendian_bytes_to_host16(&peer->peer_number, data);\n-            data += sizeof(uint16_t);\n+    return (uint32_t)(data - init_data);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810470520",
            "id": 810470520,
            "in_reply_to_id": 810404991,
            "line": 3507,
            "node_id": "PRRC_kwDOA7zIGs4wTsx4",
            "original_commit_id": "bf028400833dc1c440b6700d53607cecd75995bb",
            "original_line": 3507,
            "original_position": 152,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": 165,
            "pull_request_review_id": 887908763,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810470520/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-19T09:37:31Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810470520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
                "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudden6/followers",
                "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudden6",
                "id": 5585762,
                "login": "sudden6",
                "node_id": "MDQ6VXNlcjU1ODU3NjI=",
                "organizations_url": "https://api.github.com/users/sudden6/orgs",
                "received_events_url": "https://api.github.com/users/sudden6/received_events",
                "repos_url": "https://api.github.com/users/sudden6/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudden6"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810470536"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810470536"
                }
            },
            "author_association": "MEMBER",
            "body": "Changed the structure, though no inner function.",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-19T09:37:49Z",
            "diff_hunk": "@@ -3392,116 +3392,166 @@ uint8_t *conferences_save(const Group_Chats *g_c, uint8_t *data)\n     return data;\n }\n \n+/**\n+ * @brief load_group Load a Group section from a save file\n+ * @param g Group to load\n+ * @param g_c Reference to all groupchats, need for utility functions\n+ * @param data Start of the data to deserialze\n+ * @param length Length of data\n+ * @return 0 on error, number of consumed bytes otherwise\n+ */\n+\n non_null()\n-static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+static uint32_t load_group(Group_c *g, const Group_Chats *g_c, const uint8_t *data, uint32_t length)\n {\n     const uint8_t *init_data = data;\n \n-    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n-        const int groupnumber = create_group_chat(g_c);\n+    // Initialilize to default values so we can unconditionally free in case of an error\n+    setup_conference(g);\n \n-        if (groupnumber == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n-        }\n+    g->type = *data;\n+    ++data;\n \n-        Group_c *g = &g_c->chats[groupnumber];\n+    memcpy(g->id, data, GROUP_ID_LENGTH);\n+    data += GROUP_ID_LENGTH;\n \n-        g->type = *data;\n-        ++data;\n+    lendian_bytes_to_host32(&g->message_number, data);\n+    data += sizeof(uint32_t);\n \n-        memcpy(g->id, data, GROUP_ID_LENGTH);\n-        data += GROUP_ID_LENGTH;\n+    lendian_bytes_to_host16(&g->lossy_message_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host32(&g->message_number, data);\n-        data += sizeof(uint32_t);\n+    lendian_bytes_to_host16(&g->peer_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host16(&g->lossy_message_number, data);\n-        data += sizeof(uint16_t);\n+    lendian_bytes_to_host32(&g->numfrozen, data);\n+    data += sizeof(uint32_t);\n \n-        lendian_bytes_to_host16(&g->peer_number, data);\n-        data += sizeof(uint16_t);\n+    if (g->numfrozen > 0) {\n+        g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+\n+        if (g->frozen == nullptr) {\n+            // Memory allocation failure\n+            return 0;\n+        }\n+    }\n \n-        lendian_bytes_to_host32(&g->numfrozen, data);\n-        data += sizeof(uint32_t);\n+    g->title_len = *data;\n \n-        if (g->numfrozen > 0) {\n-            g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+    if (g->title_len > MAX_NAME_LENGTH) {\n+        return 0;\n+    }\n \n-            if (g->frozen == nullptr) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+    ++data;\n+\n+    if (length < (uint32_t)(data - init_data) + g->title_len) {\n+        return 0;\n+    }\n+\n+    memcpy(g->title, data, g->title_len);\n+    data += g->title_len;\n+\n+    for (uint32_t j = 0; j < g->numfrozen; ++j) {\n+        if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n+            return 0;\n         }\n \n-        g->title_len = *data;\n+        Group_Peer *peer = &g->frozen[j];\n+        memset(peer, 0, sizeof(Group_Peer));\n \n-        if (g->title_len > MAX_NAME_LENGTH) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        id_copy(peer->real_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+        id_copy(peer->temp_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+\n+        lendian_bytes_to_host16(&peer->peer_number, data);\n+        data += sizeof(uint16_t);\n+\n+        lendian_bytes_to_host64(&peer->last_active, data);\n+        data += sizeof(uint64_t);\n+\n+        peer->nick_len = *data;\n+\n+        if (peer->nick_len > MAX_NAME_LENGTH) {\n+            return 0;\n         }\n \n         ++data;\n \n-        if (length < (uint32_t)(data - init_data) + g->title_len) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n+            return 0;\n         }\n \n-        memcpy(g->title, data, g->title_len);\n-        data += g->title_len;\n+        memcpy(peer->nick, data, peer->nick_len);\n+        data += peer->nick_len;\n \n-        for (uint32_t j = 0; j < g->numfrozen; ++j) {\n-            if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        // NOTE: this relies on friends being loaded before conferences.\n+        peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+    }\n+\n+    if (g->numfrozen > g->maxfrozen) {\n+        g->maxfrozen = g->numfrozen;\n+    }\n \n-            Group_Peer *peer = &g->frozen[j];\n-            memset(peer, 0, sizeof(Group_Peer));\n+    g->status = GROUPCHAT_STATUS_CONNECTED;\n \n-            id_copy(peer->real_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n-            id_copy(peer->temp_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n+    id_copy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto));\n \n-            lendian_bytes_to_host16(&peer->peer_number, data);\n-            data += sizeof(uint16_t);\n+    return (uint32_t)(data - init_data);\n+}\n \n-            lendian_bytes_to_host64(&peer->last_active, data);\n-            data += sizeof(uint64_t);\n+non_null()\n+static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+{\n+    const uint8_t *init_data = data;\n+    uint32_t num_groups;\n \n-            peer->nick_len = *data;\n+    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n+        const int groupnumber = create_group_chat(g_c);\n \n-            if (peer->nick_len > MAX_NAME_LENGTH) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        if (groupnumber == -1) {\n+            // If this fails there's a serious problem, don't bother with cleanup\n+            return STATE_LOAD_STATUS_ERROR;\n+        }\n \n-            ++data;\n+        Group_c *g = &g_c->chats[groupnumber];\n \n-            if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        uint32_t consumed = load_group(g, g_c, data, length - (uint32_t)(data - init_data));\n \n-            memcpy(peer->nick, data, peer->nick_len);\n-            data += peer->nick_len;\n+        if (consumed == 0) {\n+            // remove partially loaded stuff\n+            bool ret = wipe_group_chat(g_c, groupnumber);\n \n-            // NOTE: this relies on friends being loaded before conferences.\n-            peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+            // wipe_group_chat must be able to wipe a partially loaded group\n+            assert(ret == true);\n+            goto LOAD_ERROR;\n         }\n \n-        if (g->numfrozen > g->maxfrozen) {\n-            g->maxfrozen = g->numfrozen;\n-        }\n+        data += consumed;\n \n-        g->status = GROUPCHAT_STATUS_CONNECTED;\n-        memcpy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto), CRYPTO_PUBLIC_KEY_SIZE);\n         const int peer_index = addpeer(g_c, groupnumber, g->real_pk, dht_get_self_public_key(g_c->m->dht), g->peer_number,\n                                        nullptr, true, false);\n \n         if (peer_index == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n+            goto LOAD_ERROR;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810470536",
            "id": 810470536,
            "in_reply_to_id": 810405238,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTsyI",
            "original_commit_id": "bf028400833dc1c440b6700d53607cecd75995bb",
            "original_line": 3536,
            "original_position": 208,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887908789,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810470536/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-19T09:37:50Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810470536",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
                "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudden6/followers",
                "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudden6",
                "id": 5585762,
                "login": "sudden6",
                "node_id": "MDQ6VXNlcjU1ODU3NjI=",
                "organizations_url": "https://api.github.com/users/sudden6/orgs",
                "received_events_url": "https://api.github.com/users/sudden6/received_events",
                "repos_url": "https://api.github.com/users/sudden6/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudden6"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810472909"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810472909"
                }
            },
            "author_association": "MEMBER",
            "body": "Finally understand how you meant that and did it.",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-19T10:05:30Z",
            "diff_hunk": "@@ -3392,116 +3392,166 @@ uint8_t *conferences_save(const Group_Chats *g_c, uint8_t *data)\n     return data;\n }\n \n+/**\n+ * @brief load_group Load a Group section from a save file\n+ * @param g Group to load\n+ * @param g_c Reference to all groupchats, need for utility functions\n+ * @param data Start of the data to deserialze\n+ * @param length Length of data\n+ * @return 0 on error, number of consumed bytes otherwise\n+ */\n+\n non_null()\n-static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+static uint32_t load_group(Group_c *g, const Group_Chats *g_c, const uint8_t *data, uint32_t length)\n {\n     const uint8_t *init_data = data;\n \n-    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n-        const int groupnumber = create_group_chat(g_c);\n+    // Initialilize to default values so we can unconditionally free in case of an error\n+    setup_conference(g);\n \n-        if (groupnumber == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n-        }\n+    g->type = *data;\n+    ++data;\n \n-        Group_c *g = &g_c->chats[groupnumber];\n+    memcpy(g->id, data, GROUP_ID_LENGTH);\n+    data += GROUP_ID_LENGTH;\n \n-        g->type = *data;\n-        ++data;\n+    lendian_bytes_to_host32(&g->message_number, data);\n+    data += sizeof(uint32_t);\n \n-        memcpy(g->id, data, GROUP_ID_LENGTH);\n-        data += GROUP_ID_LENGTH;\n+    lendian_bytes_to_host16(&g->lossy_message_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host32(&g->message_number, data);\n-        data += sizeof(uint32_t);\n+    lendian_bytes_to_host16(&g->peer_number, data);\n+    data += sizeof(uint16_t);\n \n-        lendian_bytes_to_host16(&g->lossy_message_number, data);\n-        data += sizeof(uint16_t);\n+    lendian_bytes_to_host32(&g->numfrozen, data);\n+    data += sizeof(uint32_t);\n \n-        lendian_bytes_to_host16(&g->peer_number, data);\n-        data += sizeof(uint16_t);\n+    if (g->numfrozen > 0) {\n+        g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+\n+        if (g->frozen == nullptr) {\n+            // Memory allocation failure\n+            return 0;\n+        }\n+    }\n \n-        lendian_bytes_to_host32(&g->numfrozen, data);\n-        data += sizeof(uint32_t);\n+    g->title_len = *data;\n \n-        if (g->numfrozen > 0) {\n-            g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+    if (g->title_len > MAX_NAME_LENGTH) {\n+        return 0;\n+    }\n \n-            if (g->frozen == nullptr) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+    ++data;\n+\n+    if (length < (uint32_t)(data - init_data) + g->title_len) {\n+        return 0;\n+    }\n+\n+    memcpy(g->title, data, g->title_len);\n+    data += g->title_len;\n+\n+    for (uint32_t j = 0; j < g->numfrozen; ++j) {\n+        if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n+            return 0;\n         }\n \n-        g->title_len = *data;\n+        Group_Peer *peer = &g->frozen[j];\n+        memset(peer, 0, sizeof(Group_Peer));\n \n-        if (g->title_len > MAX_NAME_LENGTH) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        id_copy(peer->real_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+        id_copy(peer->temp_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+\n+        lendian_bytes_to_host16(&peer->peer_number, data);\n+        data += sizeof(uint16_t);\n+\n+        lendian_bytes_to_host64(&peer->last_active, data);\n+        data += sizeof(uint64_t);\n+\n+        peer->nick_len = *data;\n+\n+        if (peer->nick_len > MAX_NAME_LENGTH) {\n+            return 0;\n         }\n \n         ++data;\n \n-        if (length < (uint32_t)(data - init_data) + g->title_len) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n+            return 0;\n         }\n \n-        memcpy(g->title, data, g->title_len);\n-        data += g->title_len;\n+        memcpy(peer->nick, data, peer->nick_len);\n+        data += peer->nick_len;\n \n-        for (uint32_t j = 0; j < g->numfrozen; ++j) {\n-            if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        // NOTE: this relies on friends being loaded before conferences.\n+        peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+    }\n+\n+    if (g->numfrozen > g->maxfrozen) {\n+        g->maxfrozen = g->numfrozen;\n+    }\n \n-            Group_Peer *peer = &g->frozen[j];\n-            memset(peer, 0, sizeof(Group_Peer));\n+    g->status = GROUPCHAT_STATUS_CONNECTED;\n \n-            id_copy(peer->real_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n-            id_copy(peer->temp_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n+    id_copy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto));\n \n-            lendian_bytes_to_host16(&peer->peer_number, data);\n-            data += sizeof(uint16_t);\n+    return (uint32_t)(data - init_data);\n+}\n \n-            lendian_bytes_to_host64(&peer->last_active, data);\n-            data += sizeof(uint64_t);\n+non_null()\n+static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+{\n+    const uint8_t *init_data = data;\n+    uint32_t num_groups;\n \n-            peer->nick_len = *data;\n+    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n+        const int groupnumber = create_group_chat(g_c);\n \n-            if (peer->nick_len > MAX_NAME_LENGTH) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        if (groupnumber == -1) {\n+            // If this fails there's a serious problem, don't bother with cleanup\n+            return STATE_LOAD_STATUS_ERROR;\n+        }\n \n-            ++data;\n+        Group_c *g = &g_c->chats[groupnumber];\n \n-            if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        uint32_t consumed = load_group(g, g_c, data, length - (uint32_t)(data - init_data));\n \n-            memcpy(peer->nick, data, peer->nick_len);\n-            data += peer->nick_len;\n+        if (consumed == 0) {\n+            // remove partially loaded stuff\n+            bool ret = wipe_group_chat(g_c, groupnumber);\n \n-            // NOTE: this relies on friends being loaded before conferences.\n-            peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+            // wipe_group_chat must be able to wipe a partially loaded group\n+            assert(ret == true);\n+            goto LOAD_ERROR;\n         }\n \n-        if (g->numfrozen > g->maxfrozen) {\n-            g->maxfrozen = g->numfrozen;\n-        }\n+        data += consumed;\n \n-        g->status = GROUPCHAT_STATUS_CONNECTED;\n-        memcpy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto), CRYPTO_PUBLIC_KEY_SIZE);\n         const int peer_index = addpeer(g_c, groupnumber, g->real_pk, dht_get_self_public_key(g_c->m->dht), g->peer_number,\n                                        nullptr, true, false);\n \n         if (peer_index == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n+            goto LOAD_ERROR;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810472909",
            "id": 810472909,
            "in_reply_to_id": 810405238,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTtXN",
            "original_commit_id": "bf028400833dc1c440b6700d53607cecd75995bb",
            "original_line": 3536,
            "original_position": 208,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887910714,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810472909/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-19T10:05:30Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810472909",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
                "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudden6/followers",
                "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudden6",
                "id": 5585762,
                "login": "sudden6",
                "node_id": "MDQ6VXNlcjU1ODU3NjI=",
                "organizations_url": "https://api.github.com/users/sudden6/orgs",
                "received_events_url": "https://api.github.com/users/sudden6/received_events",
                "repos_url": "https://api.github.com/users/sudden6/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudden6"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491267"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491267"
                }
            },
            "author_association": "MEMBER",
            "body": "const",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-19T13:30:30Z",
            "diff_hunk": "@@ -3504,6 +3552,27 @@ static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data,\n     return STATE_LOAD_STATUS_CONTINUE;\n }\n \n+non_null()\n+static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+{\n+    State_Load_Status res = load_conferences_helper(g_c, data, length);\n+\n+    if (res == STATE_LOAD_STATUS_CONTINUE) {\n+        return res;\n+    }\n+\n+    // Loading failed, cleanup all Group_c\n+\n+    // save locally, because wipe_group_chat(...) modifies it\n+    uint16_t num_groups = g_c->num_chats;",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491267",
            "id": 810491267,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTx2D",
            "original_commit_id": "635e46bff598f6234bf281f842f0bdab4284aee7",
            "original_line": 3567,
            "original_position": 231,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887925532,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491267/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-19T13:34:34Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491275"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491275"
                }
            },
            "author_association": "MEMBER",
            "body": "const",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-19T13:30:36Z",
            "diff_hunk": "@@ -3504,6 +3552,27 @@ static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data,\n     return STATE_LOAD_STATUS_CONTINUE;\n }\n \n+non_null()\n+static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+{\n+    State_Load_Status res = load_conferences_helper(g_c, data, length);",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491275",
            "id": 810491275,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTx2L",
            "original_commit_id": "635e46bff598f6234bf281f842f0bdab4284aee7",
            "original_line": 3558,
            "original_position": 222,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887925532,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491275/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-19T13:34:34Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491275",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491303"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491303"
                }
            },
            "author_association": "MEMBER",
            "body": "Fix cimple errors (`++i`).",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-19T13:30:53Z",
            "diff_hunk": "@@ -3504,6 +3552,27 @@ static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data,\n     return STATE_LOAD_STATUS_CONTINUE;\n }\n \n+non_null()\n+static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+{\n+    State_Load_Status res = load_conferences_helper(g_c, data, length);\n+\n+    if (res == STATE_LOAD_STATUS_CONTINUE) {\n+        return res;\n+    }\n+\n+    // Loading failed, cleanup all Group_c\n+\n+    // save locally, because wipe_group_chat(...) modifies it\n+    uint16_t num_groups = g_c->num_chats;\n+\n+    for (uint16_t i = 0; i < num_groups; i++) {",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491303",
            "id": 810491303,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTx2n",
            "original_commit_id": "635e46bff598f6234bf281f842f0bdab4284aee7",
            "original_line": 3569,
            "original_position": 233,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887925532,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491303/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-19T13:34:34Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491329"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491329"
                }
            },
            "author_association": "MEMBER",
            "body": "const",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-19T13:31:04Z",
            "diff_hunk": "@@ -3392,105 +3392,153 @@ uint8_t *conferences_save(const Group_Chats *g_c, uint8_t *data)\n     return data;\n }\n \n+/**\n+ * @brief load_group Load a Group section from a save file\n+ * @param g Group to load\n+ * @param g_c Reference to all groupchats, need for utility functions\n+ * @param data Start of the data to deserialze\n+ * @param length Length of data\n+ * @return 0 on error, number of consumed bytes otherwise\n+ */\n+\n non_null()\n-static State_Load_Status load_conferences(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+static uint32_t load_group(Group_c *g, const Group_Chats *g_c, const uint8_t *data, uint32_t length)\n {\n     const uint8_t *init_data = data;\n \n-    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n-        const int groupnumber = create_group_chat(g_c);\n+    // Initialize to default values so we can unconditionally free in case of an error\n+    setup_conference(g);\n \n-        if (groupnumber == -1) {\n-            return STATE_LOAD_STATUS_ERROR;\n+    g->type = *data;\n+    ++data;\n+\n+    memcpy(g->id, data, GROUP_ID_LENGTH);\n+    data += GROUP_ID_LENGTH;\n+\n+    lendian_bytes_to_host32(&g->message_number, data);\n+    data += sizeof(uint32_t);\n+\n+    lendian_bytes_to_host16(&g->lossy_message_number, data);\n+    data += sizeof(uint16_t);\n+\n+    lendian_bytes_to_host16(&g->peer_number, data);\n+    data += sizeof(uint16_t);\n+\n+    lendian_bytes_to_host32(&g->numfrozen, data);\n+    data += sizeof(uint32_t);\n+\n+    if (g->numfrozen > 0) {\n+        g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+\n+        if (g->frozen == nullptr) {\n+            // Memory allocation failure\n+            return 0;\n         }\n+    }\n \n-        Group_c *g = &g_c->chats[groupnumber];\n+    g->title_len = *data;\n \n-        g->type = *data;\n-        ++data;\n+    if (g->title_len > MAX_NAME_LENGTH) {\n+        return 0;\n+    }\n \n-        memcpy(g->id, data, GROUP_ID_LENGTH);\n-        data += GROUP_ID_LENGTH;\n+    ++data;\n \n-        lendian_bytes_to_host32(&g->message_number, data);\n-        data += sizeof(uint32_t);\n+    assert((data - init_data) < UINT32_MAX);\n \n-        lendian_bytes_to_host16(&g->lossy_message_number, data);\n-        data += sizeof(uint16_t);\n+    if (length < (uint32_t)(data - init_data) + g->title_len) {\n+        return 0;\n+    }\n \n-        lendian_bytes_to_host16(&g->peer_number, data);\n-        data += sizeof(uint16_t);\n+    memcpy(g->title, data, g->title_len);\n+    data += g->title_len;\n \n-        lendian_bytes_to_host32(&g->numfrozen, data);\n-        data += sizeof(uint32_t);\n+    for (uint32_t j = 0; j < g->numfrozen; ++j) {\n \n-        if (g->numfrozen > 0) {\n-            g->frozen = (Group_Peer *)calloc(g->numfrozen, sizeof(Group_Peer));\n+        assert((data - init_data) < UINT32_MAX);\n \n-            if (g->frozen == nullptr) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n+            return 0;\n         }\n \n-        g->title_len = *data;\n+        Group_Peer *peer = &g->frozen[j];\n+        memset(peer, 0, sizeof(Group_Peer));\n \n-        if (g->title_len > MAX_NAME_LENGTH) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        id_copy(peer->real_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+        id_copy(peer->temp_pk, data);\n+        data += CRYPTO_PUBLIC_KEY_SIZE;\n+\n+        lendian_bytes_to_host16(&peer->peer_number, data);\n+        data += sizeof(uint16_t);\n+\n+        lendian_bytes_to_host64(&peer->last_active, data);\n+        data += sizeof(uint64_t);\n+\n+        peer->nick_len = *data;\n+\n+        if (peer->nick_len > MAX_NAME_LENGTH) {\n+            return 0;\n         }\n \n         ++data;\n+        assert((data - init_data) < UINT32_MAX);\n \n-        if (length < (uint32_t)(data - init_data) + g->title_len) {\n-            return STATE_LOAD_STATUS_ERROR;\n+        if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n+            return 0;\n         }\n \n-        memcpy(g->title, data, g->title_len);\n-        data += g->title_len;\n-\n-        for (uint32_t j = 0; j < g->numfrozen; ++j) {\n-            if (length < (uint32_t)(data - init_data) + SAVED_PEER_SIZE_CONSTANT) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+        memcpy(peer->nick, data, peer->nick_len);\n+        data += peer->nick_len;\n \n-            Group_Peer *peer = &g->frozen[j];\n-            memset(peer, 0, sizeof(Group_Peer));\n+        // NOTE: this relies on friends being loaded before conferences.\n+        peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+    }\n \n-            id_copy(peer->real_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n-            id_copy(peer->temp_pk, data);\n-            data += CRYPTO_PUBLIC_KEY_SIZE;\n+    if (g->numfrozen > g->maxfrozen) {\n+        g->maxfrozen = g->numfrozen;\n+    }\n \n-            lendian_bytes_to_host16(&peer->peer_number, data);\n-            data += sizeof(uint16_t);\n+    g->status = GROUPCHAT_STATUS_CONNECTED;\n \n-            lendian_bytes_to_host64(&peer->last_active, data);\n-            data += sizeof(uint64_t);\n+    id_copy(g->real_pk, nc_get_self_public_key(g_c->m->net_crypto));\n \n-            peer->nick_len = *data;\n+    assert((data - init_data) < UINT32_MAX);\n \n-            if (peer->nick_len > MAX_NAME_LENGTH) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+    return (uint32_t)(data - init_data);\n+}\n \n-            ++data;\n+non_null()\n+static State_Load_Status load_conferences_helper(Group_Chats *g_c, const uint8_t *data, uint32_t length)\n+{\n+    const uint8_t *init_data = data;\n \n-            if (length < (uint32_t)(data - init_data) + peer->nick_len) {\n-                return STATE_LOAD_STATUS_ERROR;\n-            }\n+    while (length >= (uint32_t)(data - init_data) + SAVED_CONF_SIZE_CONSTANT) {\n+        const int groupnumber = create_group_chat(g_c);\n \n-            memcpy(peer->nick, data, peer->nick_len);\n-            data += peer->nick_len;\n+        // Helpful for testing\n+        assert(groupnumber != -1);\n \n-            // NOTE: this relies on friends being loaded before conferences.\n-            peer->is_friend = (getfriend_id(g_c->m, peer->real_pk) != -1);\n+        if (groupnumber == -1) {\n+            // If this fails there's a serious problem, don't bother with cleanup\n+            return STATE_LOAD_STATUS_ERROR;\n         }\n \n-        if (g->numfrozen > g->maxfrozen) {\n-            g->maxfrozen = g->numfrozen;\n+        Group_c *g = &g_c->chats[groupnumber];\n+\n+        uint32_t consumed = load_group(g, g_c, data, length - (uint32_t)(data - init_data));",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491329",
            "id": 810491329,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTx3B",
            "original_commit_id": "635e46bff598f6234bf281f842f0bdab4284aee7",
            "original_line": 3529,
            "original_position": 197,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887925532,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491329/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-19T13:34:34Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491570"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064"
                },
                "self": {
                    "href": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491570"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: remove empty line between comment and thing-to-be-commented.",
            "commit_id": "12dbafbd188a64356c07c97f7841016b5c300715",
            "created_at": "2022-02-19T13:33:11Z",
            "diff_hunk": "@@ -3392,105 +3392,153 @@ uint8_t *conferences_save(const Group_Chats *g_c, uint8_t *data)\n     return data;\n }\n \n+/**\n+ * @brief load_group Load a Group section from a save file\n+ * @param g Group to load\n+ * @param g_c Reference to all groupchats, need for utility functions\n+ * @param data Start of the data to deserialze\n+ * @param length Length of data\n+ * @return 0 on error, number of consumed bytes otherwise\n+ */\n+",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#discussion_r810491570",
            "id": 810491570,
            "line": null,
            "node_id": "PRRC_kwDOA7zIGs4wTx6y",
            "original_commit_id": "635e46bff598f6234bf281f842f0bdab4284aee7",
            "original_line": 3403,
            "original_position": 12,
            "original_start_line": null,
            "path": "toxcore/group.c",
            "position": null,
            "pull_request_review_id": 887925532,
            "pull_request_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491570/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-02-19T13:34:34Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments/810491570",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
                "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
                "followers_url": "https://api.github.com/users/iphydf/followers",
                "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
                "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iphydf",
                "id": 10647936,
                "login": "iphydf",
                "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
                "organizations_url": "https://api.github.com/users/iphydf/orgs",
                "received_events_url": "https://api.github.com/users/iphydf/received_events",
                "repos_url": "https://api.github.com/users/iphydf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iphydf"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "✔️ Deploy Preview for *c-toxcore* ready!\n\n\n🔨 Explore the source changes: bf028400833dc1c440b6700d53607cecd75995bb\n\n🔍 Inspect the deploy log: [https://app.netlify.com/sites/c-toxcore/deploys/620fc0ae1d2be80007ca7620](https://app.netlify.com/sites/c-toxcore/deploys/620fc0ae1d2be80007ca7620)\n\n😎 Browse the preview: [https://deploy-preview-2064--c-toxcore.netlify.app](https://deploy-preview-2064--c-toxcore.netlify.app)\n",
            "created_at": "2022-02-18T15:37:14Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#issuecomment-1044715819",
            "id": 1044715819,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/2064",
            "node_id": "IC_kwDOA7zIGs4-RRkr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/1044715819/reactions"
            },
            "updated_at": "2022-02-18T15:52:42Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/1044715819",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/13473?v=4",
                "events_url": "https://api.github.com/users/netlify%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/netlify%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/netlify%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/netlify%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/netlify",
                "id": 40209326,
                "login": "netlify[bot]",
                "node_id": "MDM6Qm90NDAyMDkzMjY=",
                "organizations_url": "https://api.github.com/users/netlify%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/netlify%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/netlify%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/netlify%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/netlify%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/netlify%5Bbot%5D"
            }
        },
        {
            "author_association": "NONE",
            "body": "# [Codecov](https://codecov.io/gh/TokTok/c-toxcore/pull/2064?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok) Report\n> Merging [#2064](https://codecov.io/gh/TokTok/c-toxcore/pull/2064?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok) (e33cd76) into [master](https://codecov.io/gh/TokTok/c-toxcore/commit/68f4e5c0fa642acbdf9665c2c552b0b781992334?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok) (68f4e5c) will **decrease** coverage by `0.26%`.\n> The diff coverage is `63.15%`.\n\n> :exclamation: Current head e33cd76 differs from pull request most recent head 596cf49. Consider uploading reports for the commit 596cf49 to get more accurate results\n\n[![Impacted file tree graph](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/graphs/tree.svg?width=650&height=150&src=pr&token=BRfCKo02De&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok)](https://codecov.io/gh/TokTok/c-toxcore/pull/2064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #2064      +/-   ##\n==========================================\n- Coverage   76.49%   76.23%   -0.27%     \n==========================================\n  Files         108      108              \n  Lines       18156    18125      -31     \n==========================================\n- Hits        13889    13817      -72     \n- Misses       4267     4308      +41     \n```\n\n\n| [Impacted Files](https://codecov.io/gh/TokTok/c-toxcore/pull/2064?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok) | Coverage Δ | |\n|---|---|---|\n| [toxcore/group.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-dG94Y29yZS9ncm91cC5j) | `91.44% <63.15%> (-0.71%)` | :arrow_down: |\n| [toxcore/TCP\\_server.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-dG94Y29yZS9UQ1Bfc2VydmVyLmM=) | `71.98% <0.00%> (-4.84%)` | :arrow_down: |\n| [toxav/ring\\_buffer.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-dG94YXYvcmluZ19idWZmZXIuYw==) | `67.44% <0.00%> (-4.66%)` | :arrow_down: |\n| [toxcore/TCP\\_client.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-dG94Y29yZS9UQ1BfY2xpZW50LmM=) | `62.24% <0.00%> (-3.75%)` | :arrow_down: |\n| [auto\\_tests/tox\\_many\\_test.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-YXV0b190ZXN0cy90b3hfbWFueV90ZXN0LmM=) | `96.07% <0.00%> (-1.97%)` | :arrow_down: |\n| [toxav/groupav.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-dG94YXYvZ3JvdXBhdi5j) | `77.55% <0.00%> (-1.64%)` | :arrow_down: |\n| [auto\\_tests/tox\\_many\\_tcp\\_test.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-YXV0b190ZXN0cy90b3hfbWFueV90Y3BfdGVzdC5j) | `49.53% <0.00%> (-0.94%)` | :arrow_down: |\n| [toxcore/friend\\_connection.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-dG94Y29yZS9mcmllbmRfY29ubmVjdGlvbi5j) | `87.67% <0.00%> (-0.29%)` | :arrow_down: |\n| [toxcore/net\\_crypto.c](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok#diff-dG94Y29yZS9uZXRfY3J5cHRvLmM=) | `93.10% <0.00%> (+0.25%)` | :arrow_up: |\n| ... and [2 more](https://codecov.io/gh/TokTok/c-toxcore/pull/2064/diff?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/TokTok/c-toxcore/pull/2064?src=pr&el=continue&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/TokTok/c-toxcore/pull/2064?src=pr&el=footer&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok). Last update [68f4e5c...596cf49](https://codecov.io/gh/TokTok/c-toxcore/pull/2064?src=pr&el=lastupdated&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=TokTok).\n",
            "created_at": "2022-02-20T16:52:54Z",
            "html_url": "https://github.com/TokTok/c-toxcore/pull/2064#issuecomment-1046277884",
            "id": 1046277884,
            "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/2064",
            "node_id": "IC_kwDOA7zIGs4-XO78",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/1046277884/reactions"
            },
            "updated_at": "2022-02-20T17:59:50Z",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/issues/comments/1046277884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/254?v=4",
                "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/codecov",
                "id": 22429695,
                "login": "codecov[bot]",
                "node_id": "MDM6Qm90MjI0Mjk2OTU=",
                "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/codecov%5Bbot%5D"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/2064/comments",
    "commit_data": [
        {
            "author": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
                "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudden6/followers",
                "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudden6",
                "id": 5585762,
                "login": "sudden6",
                "node_id": "MDQ6VXNlcjU1ODU3NjI=",
                "organizations_url": "https://api.github.com/users/sudden6/orgs",
                "received_events_url": "https://api.github.com/users/sudden6/received_events",
                "repos_url": "https://api.github.com/users/sudden6/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudden6"
            },
            "comments_url": "https://api.github.com/repos/TokTok/c-toxcore/commits/12dbafbd188a64356c07c97f7841016b5c300715/comments",
            "commit": {
                "author": {
                    "date": "2022-02-18T15:34:59Z",
                    "email": "sudden6@gmx.at",
                    "name": "sudden6"
                },
                "comment_count": 0,
                "committer": {
                    "date": "2022-02-20T20:23:09Z",
                    "email": "sudden6@gmx.at",
                    "name": "sudden6"
                },
                "message": "fix: memory leak during conference load\n\nThis was found in our continous fuzzing setup.",
                "tree": {
                    "sha": "2416a6b4963a04f4bc5a07d8228c9386ef10581f",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/git/trees/2416a6b4963a04f4bc5a07d8228c9386ef10581f"
                },
                "url": "https://api.github.com/repos/TokTok/c-toxcore/git/commits/12dbafbd188a64356c07c97f7841016b5c300715",
                "verification": {
                    "payload": "tree 2416a6b4963a04f4bc5a07d8228c9386ef10581f\nparent 6a6bc029de629e68e124577daa16581475690949\nauthor sudden6 <sudden6@gmx.at> 1645198499 +0100\ncommitter sudden6 <sudden6@gmx.at> 1645388589 +0100\n\nfix: memory leak during conference load\n\nThis was found in our continous fuzzing setup.\n",
                    "reason": "valid",
                    "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJDBAABCAAtFiEEF/zUlJZbckZ38tE+J5UJtJngMrkFAmISoy0PHHN1ZGRlbjZA\nZ214LmF0AAoJECeVCbSZ4DK5yuMQAJb9pNIOt1t0q3mEg+1A44nIqNm6QbAFTt5Q\nrqkO/G6e11OA0eestrgmMpswr7UTatiZASREl6+3q0INiEODe/wby+GtH4JXyPYx\nuNTdN1C3HpVBgrqhqM0/M3BM5HOhrSURXFRjc54dsLNGnzu+13up6WX0kKuD7e9h\nYOaI7foiqPlSd9vuO67+5pyweuldrw3bwcNblKPhzRXWGR28r9KFf1DQVS7fJElg\nHbUmXwdI7cXUC2qeSyKC2atFVAl2Dzf58ktLlm6sSVD4pVdG8AdkbC/gAaZfzdTe\n0laMEDgD4W19MANUntcWejOWoRhIYmNr2wcREnFg00V4+8OWldV3nqBt/7hz0GGf\nwY+NbBw+rdq3taBYlT772hYrZRsg5XWI7lPsJlR1EQhz4MbZonzQiDOjj8jOBIgJ\nQrNE7qFpjxeHb2e8oXHe0R+nY0POXwnVFWI1MibPUBhp+S3meZgquG53wPz6u7S1\nAn01f8yCswPAOgF9UnKoLoecdhiTfVqUU2vEj84psohNqK4QJXvgr7ogaROFnfkT\nniS5hn6hpyeFGvUUXuFmiaQpydKVXTwHYrrtKPjGFLUei40obbVF3Rc6m8l6Ng+y\nI5ok8r5NwcKkon+moKIhJgDlBHw2CnjqvgZQzRubBSPKH9W9fC/TL8L7gnyx4j7w\nRFwUppWT\n=1KbY\n-----END PGP SIGNATURE-----",
                    "verified": true
                }
            },
            "committer": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
                "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudden6/followers",
                "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudden6",
                "id": 5585762,
                "login": "sudden6",
                "node_id": "MDQ6VXNlcjU1ODU3NjI=",
                "organizations_url": "https://api.github.com/users/sudden6/orgs",
                "received_events_url": "https://api.github.com/users/sudden6/received_events",
                "repos_url": "https://api.github.com/users/sudden6/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudden6"
            },
            "html_url": "https://github.com/TokTok/c-toxcore/commit/12dbafbd188a64356c07c97f7841016b5c300715",
            "node_id": "C_kwDOBC2LodoAKDEyZGJhZmJkMTg4YTY0MzU2YzA3Yzk3Zjc4NDEwMTZiNWMzMDA3MTU",
            "parents": [
                {
                    "html_url": "https://github.com/TokTok/c-toxcore/commit/6a6bc029de629e68e124577daa16581475690949",
                    "sha": "6a6bc029de629e68e124577daa16581475690949",
                    "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/6a6bc029de629e68e124577daa16581475690949"
                }
            ],
            "sha": "12dbafbd188a64356c07c97f7841016b5c300715",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/commits/12dbafbd188a64356c07c97f7841016b5c300715"
        }
    ],
    "commits_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064/commits",
    "created_at": "2022-02-18T15:37:04Z",
    "diff_url": "https://github.com/TokTok/c-toxcore/pull/2064.diff",
    "draft": false,
    "head": {
        "label": "sudden6:fix/toxsave_group_leak2",
        "ref": "fix/toxsave_group_leak2",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/sudden6/c-toxcore/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/sudden6/c-toxcore/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/sudden6/c-toxcore/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/sudden6/c-toxcore/branches{/branch}",
            "clone_url": "https://github.com/sudden6/c-toxcore.git",
            "collaborators_url": "https://api.github.com/repos/sudden6/c-toxcore/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/sudden6/c-toxcore/comments{/number}",
            "commits_url": "https://api.github.com/repos/sudden6/c-toxcore/commits{/sha}",
            "compare_url": "https://api.github.com/repos/sudden6/c-toxcore/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/sudden6/c-toxcore/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/sudden6/c-toxcore/contributors",
            "created_at": "2016-10-05T19:48:51Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/sudden6/c-toxcore/deployments",
            "description": "The future of online communications.",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/sudden6/c-toxcore/downloads",
            "events_url": "https://api.github.com/repos/sudden6/c-toxcore/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/sudden6/c-toxcore/forks",
            "full_name": "sudden6/c-toxcore",
            "git_commits_url": "https://api.github.com/repos/sudden6/c-toxcore/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/sudden6/c-toxcore/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/sudden6/c-toxcore/git/tags{/sha}",
            "git_url": "git://github.com/sudden6/c-toxcore.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "https://tox.chat/",
            "hooks_url": "https://api.github.com/repos/sudden6/c-toxcore/hooks",
            "html_url": "https://github.com/sudden6/c-toxcore",
            "id": 70093729,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/sudden6/c-toxcore/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/sudden6/c-toxcore/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/sudden6/c-toxcore/issues{/number}",
            "keys_url": "https://api.github.com/repos/sudden6/c-toxcore/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/sudden6/c-toxcore/labels{/name}",
            "language": "C",
            "languages_url": "https://api.github.com/repos/sudden6/c-toxcore/languages",
            "license": {
                "key": "gpl-3.0",
                "name": "GNU General Public License v3.0",
                "node_id": "MDc6TGljZW5zZTk=",
                "spdx_id": "GPL-3.0",
                "url": "https://api.github.com/licenses/gpl-3.0"
            },
            "merges_url": "https://api.github.com/repos/sudden6/c-toxcore/merges",
            "milestones_url": "https://api.github.com/repos/sudden6/c-toxcore/milestones{/number}",
            "mirror_url": null,
            "name": "c-toxcore",
            "node_id": "MDEwOlJlcG9zaXRvcnk3MDA5MzcyOQ==",
            "notifications_url": "https://api.github.com/repos/sudden6/c-toxcore/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
                "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
                "followers_url": "https://api.github.com/users/sudden6/followers",
                "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
                "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sudden6",
                "id": 5585762,
                "login": "sudden6",
                "node_id": "MDQ6VXNlcjU1ODU3NjI=",
                "organizations_url": "https://api.github.com/users/sudden6/orgs",
                "received_events_url": "https://api.github.com/users/sudden6/received_events",
                "repos_url": "https://api.github.com/users/sudden6/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sudden6"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/sudden6/c-toxcore/pulls{/number}",
            "pushed_at": "2023-01-03T23:21:37Z",
            "releases_url": "https://api.github.com/repos/sudden6/c-toxcore/releases{/id}",
            "size": 16967,
            "ssh_url": "git@github.com:sudden6/c-toxcore.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/sudden6/c-toxcore/stargazers",
            "statuses_url": "https://api.github.com/repos/sudden6/c-toxcore/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/sudden6/c-toxcore/subscribers",
            "subscription_url": "https://api.github.com/repos/sudden6/c-toxcore/subscription",
            "svn_url": "https://github.com/sudden6/c-toxcore",
            "tags_url": "https://api.github.com/repos/sudden6/c-toxcore/tags",
            "teams_url": "https://api.github.com/repos/sudden6/c-toxcore/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/sudden6/c-toxcore/git/trees{/sha}",
            "updated_at": "2022-12-08T11:18:28Z",
            "url": "https://api.github.com/repos/sudden6/c-toxcore",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "12dbafbd188a64356c07c97f7841016b5c300715",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
            "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
            "followers_url": "https://api.github.com/users/sudden6/followers",
            "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/sudden6",
            "id": 5585762,
            "login": "sudden6",
            "node_id": "MDQ6VXNlcjU1ODU3NjI=",
            "organizations_url": "https://api.github.com/users/sudden6/orgs",
            "received_events_url": "https://api.github.com/users/sudden6/received_events",
            "repos_url": "https://api.github.com/users/sudden6/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/sudden6"
        }
    },
    "html_url": "https://github.com/TokTok/c-toxcore/pull/2064",
    "id": 857233053,
    "issue_url": "https://api.github.com/repos/TokTok/c-toxcore/issues/2064",
    "labels": [
        {
            "color": "ee0701",
            "default": true,
            "description": "Bug fix for the user, not a fix to a build script",
            "id": 403702216,
            "name": "bug",
            "node_id": "MDU6TGFiZWw0MDM3MDIyMTY=",
            "url": "https://api.github.com/repos/TokTok/c-toxcore/labels/bug"
        }
    ],
    "locked": false,
    "merge_commit_sha": "12dbafbd188a64356c07c97f7841016b5c300715",
    "merged_at": "2022-02-20T20:36:07Z",
    "milestone": {
        "closed_at": "2022-03-06T01:45:45Z",
        "closed_issues": 55,
        "created_at": "2022-02-06T21:10:29Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10647936?v=4",
            "events_url": "https://api.github.com/users/iphydf/events{/privacy}",
            "followers_url": "https://api.github.com/users/iphydf/followers",
            "following_url": "https://api.github.com/users/iphydf/following{/other_user}",
            "gists_url": "https://api.github.com/users/iphydf/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/iphydf",
            "id": 10647936,
            "login": "iphydf",
            "node_id": "MDQ6VXNlcjEwNjQ3OTM2",
            "organizations_url": "https://api.github.com/users/iphydf/orgs",
            "received_events_url": "https://api.github.com/users/iphydf/received_events",
            "repos_url": "https://api.github.com/users/iphydf/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/iphydf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iphydf/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/iphydf"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/TokTok/c-toxcore/milestone/46",
        "id": 7646314,
        "labels_url": "https://api.github.com/repos/TokTok/c-toxcore/milestones/46/labels",
        "node_id": "MI_kwDOA7zIGs4AdKxq",
        "number": 46,
        "open_issues": 0,
        "state": "closed",
        "title": "v0.2.17",
        "updated_at": "2022-03-06T01:45:45Z",
        "url": "https://api.github.com/repos/TokTok/c-toxcore/milestones/46"
    },
    "node_id": "PR_kwDOA7zIGs4zGFad",
    "number": 2064,
    "patch_url": "https://github.com/TokTok/c-toxcore/pull/2064.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/TokTok/c-toxcore/statuses/12dbafbd188a64356c07c97f7841016b5c300715",
    "title": "fix: toxsave memory leak while loading groups",
    "updated_at": "2022-02-20T20:36:07Z",
    "url": "https://api.github.com/repos/TokTok/c-toxcore/pulls/2064",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5585762?v=4",
        "events_url": "https://api.github.com/users/sudden6/events{/privacy}",
        "followers_url": "https://api.github.com/users/sudden6/followers",
        "following_url": "https://api.github.com/users/sudden6/following{/other_user}",
        "gists_url": "https://api.github.com/users/sudden6/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sudden6",
        "id": 5585762,
        "login": "sudden6",
        "node_id": "MDQ6VXNlcjU1ODU3NjI=",
        "organizations_url": "https://api.github.com/users/sudden6/orgs",
        "received_events_url": "https://api.github.com/users/sudden6/received_events",
        "repos_url": "https://api.github.com/users/sudden6/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sudden6/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sudden6/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sudden6"
    }
}